// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/main.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone_rules.dart';
import 'package:sugar/src/time/zone/fixed_timezone_rules.dart';
import 'package:sugar/src/time/zone/timezone_rules.dart';

extension Australia on Never {
  static final TimezoneRules act = DynamicTimezoneRules(
    'Australia/ACT',
    DynamicTimezone(
      -1,
      36292000,
      'Australia/ACT',
      'LMT',
      null,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386697600000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 794332800000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules adelaide = DynamicTimezoneRules(
    'Australia/Adelaide',
    DynamicTimezone(
      -1,
      33260000,
      'Australia/Adelaide',
      'LMT',
      null,
      -2364110060,
      dst: false,
    ),
    Int64List.fromList([ -2364110060000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000, 31501800000, 57688200000, 67969800000, 89137800000, 100024200000, 120587400000, 131473800000, 152037000000, 162923400000, 183486600000, 194977800000, 215541000000, 226427400000, 246990600000, 257877000000, 278440200000, 289326600000, 309889800000, 320776200000, 341339400000, 352225800000, 372789000000, 384280200000, 404843400000, 415729800000, 436293000000, 447179400000, 467742600000, 478629000000, 499192200000, 511288200000, 530037000000, 542737800000, 562091400000, 574792200000, 594145800000, 606241800000, 625595400000, 637691400000, 657045000000, 667931400000, 688494600000, 701195400000, 719944200000, 731435400000, 751998600000, 764094600000, 783448200000, 796149000000, 814897800000, 828203400000, 846347400000, 859653000000, 877797000000, 891102600000, 909246600000, 922552200000, 941301000000, 954001800000, 972750600000, 985451400000, 1004200200000, 1017505800000, 1035649800000, 1048955400000, 1067099400000, 1080405000000, 1099153800000, 1111854600000, 1130603400000, 1143909000000, 1162053000000, 1174753800000, 1193502600000, 1207413000000, 1223137800000, 1238862600000, 1254587400000, 1270312200000, 1286037000000, 1301761800000, 1317486600000, 1333211400000, 1349541000000, 1365265800000, 1380990600000, 1396715400000, 1412440200000, 1428165000000, 1443889800000, 1459614600000, 1475339400000, 1491064200000, 1506789000000, 1522513800000, 1538843400000, 1554568200000, 1570293000000, 1586017800000, 1601742600000, 1617467400000, 1633192200000, 1648917000000, 1664641800000, 1680366600000, 1696091400000, 1712421000000, 1728145800000, 1743870600000, 1759595400000, 1775320200000, 1791045000000, 1806769800000, 1822494600000, 1838219400000, 1853944200000, 1869669000000, 1885998600000, 1901723400000, 1917448200000, 1933173000000, 1948897800000, 1964622600000, 1980347400000, 1996072200000, 2011797000000, 2027521800000, 2043246600000, 2058971400000, 2075301000000, 2091025800000, 2106750600000, 2122475400000, 2138200200000 ]),
    Int32List.fromList([ 32400000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000 ]),

    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules brisbane = DynamicTimezoneRules(
    'Australia/Brisbane',
    DynamicTimezone(
      -1,
      36728000,
      'Australia/Brisbane',
      'LMT',
      null,
      -2366791928,
      dst: false,
    ),
    Int64List.fromList([ -2366791928000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000 ]),
    Int32List.fromList([ 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000 ]),
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules brokenHill = DynamicTimezoneRules(
    'Australia/Broken_Hill',
    DynamicTimezone(
      -1,
      33948000,
      'Australia/Broken_Hill',
      'LMT',
      null,
      -2364110748,
      dst: false,
    ),
    Int64List.fromList([ -2364110748000, -2314951200000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000, 31501800000, 57688200000, 67969800000, 89137800000, 100024200000, 120587400000, 131473800000, 152037000000, 162923400000, 183486600000, 194977800000, 215541000000, 226427400000, 246990600000, 257877000000, 278440200000, 289326600000, 309889800000, 320776200000, 341339400000, 352225800000, 372789000000, 386699400000, 404843400000, 415729800000, 436293000000, 447179400000, 467742600000, 478629000000, 499192200000, 511288200000, 530037000000, 542737800000, 562091400000, 574792200000, 594145800000, 606241800000, 625595400000, 636481800000, 657045000000, 667931400000, 688494600000, 699381000000, 719944200000, 731435400000, 751998600000, 762885000000, 783448200000, 794334600000, 814897800000, 828203400000, 846347400000, 859653000000, 877797000000, 891102600000, 909246600000, 922552200000, 941301000000, 946647000000, 954001800000, 972750600000, 985451400000, 1004200200000, 1017505800000, 1035649800000, 1048955400000, 1067099400000, 1080405000000, 1099153800000, 1111854600000, 1130603400000, 1143909000000, 1162053000000, 1174753800000, 1193502600000, 1207413000000, 1223137800000, 1238862600000, 1254587400000, 1270312200000, 1286037000000, 1301761800000, 1317486600000, 1333211400000, 1349541000000, 1365265800000, 1380990600000, 1396715400000, 1412440200000, 1428165000000, 1443889800000, 1459614600000, 1475339400000, 1491064200000, 1506789000000, 1522513800000, 1538843400000, 1554568200000, 1570293000000, 1586017800000, 1601742600000, 1617467400000, 1633192200000, 1648917000000, 1664641800000, 1680366600000, 1696091400000, 1712421000000, 1728145800000, 1743870600000, 1759595400000, 1775320200000, 1791045000000, 1806769800000, 1822494600000, 1838219400000, 1853944200000, 1869669000000, 1885998600000, 1901723400000, 1917448200000, 1933173000000, 1948897800000, 1964622600000, 1980347400000, 1996072200000, 2011797000000, 2027521800000, 2043246600000, 2058971400000, 2075301000000, 2091025800000, 2106750600000, 2122475400000, 2138200200000 ]),
    Int32List.fromList([ 36000000, 32400000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000 ]),
    [ 'AEST', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules canberra = DynamicTimezoneRules(
    'Australia/Canberra',
    DynamicTimezone(
      -1,
      36292000,
      'Australia/Canberra',
      'LMT',
      null,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386697600000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 794332800000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules currie = DynamicTimezoneRules(
    'Australia/Currie',
    DynamicTimezone(
      -1,
      35356000,
      'Australia/Currie',
      'LMT',
      null,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356000, -1680508800000, -1665388800000, -1646640000000, -1635753600000, -1615190400000, -1604304000000, -1583920800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, -94730400000, -71136000000, -55411200000, -37267200000, -25776000000, -5817600000, 5673600000, 25632000000, 37728000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386092800000, 404841600000, 417542400000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 510076800000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 637689600000, 657043200000, 670348800000, 686678400000, 701798400000, 718128000000, 733248000000, 749577600000, 764697600000, 781027200000, 796147200000, 812476800000, 828201600000, 844531200000, 859651200000, 875980800000, 891100800000, 907430400000, 922550400000, 938880000000, 954000000000, 967305600000, 985449600000, 1002384000000, 1017504000000, 1033833600000, 1048953600000, 1065283200000, 1080403200000, 1096732800000, 1111852800000, 1128182400000, 1143907200000, 1159632000000, 1174752000000, 1191686400000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules darwin = DynamicTimezoneRules(
    'Australia/Darwin',
    DynamicTimezone(
      -1,
      31400000,
      'Australia/Darwin',
      'LMT',
      null,
      -2364108200,
      dst: false,
    ),
    Int64List.fromList([ -2364108200000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000 ]),
    Int32List.fromList([ 32400000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000 ]),
    [ 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST' ],
    [ false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules eucla = DynamicTimezoneRules(
    'Australia/Eucla',
    DynamicTimezone(
      -1,
      30928000,
      'Australia/Eucla',
      'LMT',
      null,
      -2337928528,
      dst: false,
    ),
    Int64List.fromList([ -2337928528000, -1672555500000, -1665384300000, -883637100000, -876120300000, -860395500000, -844670700000, -836469900000, 152039700000, 162926100000, 436295700000, 447182100000, 690311700000, 699383700000, 1165079700000, 1174756500000, 1193505300000, 1206810900000, 1224954900000, 1238260500000 ]),
    Int32List.fromList([ 31500000, 35100000, 31500000, 35100000, 31500000, 35100000, 31500000, 31500000, 35100000, 31500000, 35100000, 31500000, 35100000, 31500000, 35100000, 31500000, 35100000, 31500000, 35100000, 31500000 ]),
    [ '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules hobart = DynamicTimezoneRules(
    'Australia/Hobart',
    DynamicTimezone(
      -1,
      35356000,
      'Australia/Hobart',
      'LMT',
      null,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356000, -1680508800000, -1665388800000, -1646640000000, -1635753600000, -1615190400000, -1604304000000, -1583920800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, -94730400000, -71136000000, -55411200000, -37267200000, -25776000000, -5817600000, 5673600000, 25632000000, 37728000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386092800000, 404841600000, 417542400000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 510076800000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 637689600000, 657043200000, 670348800000, 686678400000, 701798400000, 718128000000, 733248000000, 749577600000, 764697600000, 781027200000, 796147200000, 812476800000, 828201600000, 844531200000, 859651200000, 875980800000, 891100800000, 907430400000, 922550400000, 938880000000, 954000000000, 967305600000, 985449600000, 1002384000000, 1017504000000, 1033833600000, 1048953600000, 1065283200000, 1080403200000, 1096732800000, 1111852800000, 1128182400000, 1143907200000, 1159632000000, 1174752000000, 1191686400000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules lhi = DynamicTimezoneRules(
    'Australia/LHI',
    DynamicTimezone(
      -1,
      38180000,
      'Australia/LHI',
      'LMT',
      null,
      -2364114980,
      dst: false,
    ),
    Int64List.fromList([ -2364114980000, 352216800000, 372785400000, 384273000000, 404839800000, 415722600000, 436289400000, 447172200000, 467739000000, 478621800000, 499188600000, 511282800000, 530033400000, 542732400000, 562087800000, 574786800000, 594142200000, 606236400000, 625591800000, 636476400000, 657041400000, 667926000000, 688491000000, 699375600000, 719940600000, 731430000000, 751995000000, 762879600000, 783444600000, 794329200000, 814894200000, 828198000000, 846343800000, 859647600000, 877793400000, 891097200000, 909243000000, 922546800000, 941297400000, 953996400000, 967303800000, 985446000000, 1004196600000, 1017500400000, 1035646200000, 1048950000000, 1067095800000, 1080399600000, 1099150200000, 1111849200000, 1130599800000, 1143903600000, 1162049400000, 1174748400000, 1193499000000, 1207407600000, 1223134200000, 1238857200000, 1254583800000, 1270306800000, 1286033400000, 1301756400000, 1317483000000, 1333206000000, 1349537400000, 1365260400000, 1380987000000, 1396710000000, 1412436600000, 1428159600000, 1443886200000, 1459609200000, 1475335800000, 1491058800000, 1506785400000, 1522508400000, 1538839800000, 1554562800000, 1570289400000, 1586012400000, 1601739000000, 1617462000000, 1633188600000, 1648911600000, 1664638200000, 1680361200000, 1696087800000, 1712415600000, 1728142200000, 1743865200000, 1759591800000, 1775314800000, 1791041400000, 1806764400000, 1822491000000, 1838214000000, 1853940600000, 1869663600000, 1885995000000, 1901718000000, 1917444600000, 1933167600000, 1948894200000, 1964617200000, 1980343800000, 1996066800000, 2011793400000, 2027516400000, 2043243000000, 2058966000000, 2075297400000, 2091020400000, 2106747000000, 2122470000000, 2138196600000 ]),
    Int32List.fromList([ 36000000, 37800000, 41400000, 37800000, 41400000, 37800000, 41400000, 37800000, 41400000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000 ]),
    [ 'AEST', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules lindeman = DynamicTimezoneRules(
    'Australia/Lindeman',
    DynamicTimezone(
      -1,
      35756000,
      'Australia/Lindeman',
      'LMT',
      null,
      -2366790956,
      dst: false,
    ),
    Int64List.fromList([ -2366790956000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000, 709912800000, 719942400000, 731433600000, 751996800000, 762883200000 ]),
    Int32List.fromList([ 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 36000000, 39600000, 36000000, 39600000, 36000000 ]),
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false ],
  );

  static final TimezoneRules lordHowe = DynamicTimezoneRules(
    'Australia/Lord_Howe',
    DynamicTimezone(
      -1,
      38180000,
      'Australia/Lord_Howe',
      'LMT',
      null,
      -2364114980,
      dst: false,
    ),
    Int64List.fromList([ -2364114980000, 352216800000, 372785400000, 384273000000, 404839800000, 415722600000, 436289400000, 447172200000, 467739000000, 478621800000, 499188600000, 511282800000, 530033400000, 542732400000, 562087800000, 574786800000, 594142200000, 606236400000, 625591800000, 636476400000, 657041400000, 667926000000, 688491000000, 699375600000, 719940600000, 731430000000, 751995000000, 762879600000, 783444600000, 794329200000, 814894200000, 828198000000, 846343800000, 859647600000, 877793400000, 891097200000, 909243000000, 922546800000, 941297400000, 953996400000, 967303800000, 985446000000, 1004196600000, 1017500400000, 1035646200000, 1048950000000, 1067095800000, 1080399600000, 1099150200000, 1111849200000, 1130599800000, 1143903600000, 1162049400000, 1174748400000, 1193499000000, 1207407600000, 1223134200000, 1238857200000, 1254583800000, 1270306800000, 1286033400000, 1301756400000, 1317483000000, 1333206000000, 1349537400000, 1365260400000, 1380987000000, 1396710000000, 1412436600000, 1428159600000, 1443886200000, 1459609200000, 1475335800000, 1491058800000, 1506785400000, 1522508400000, 1538839800000, 1554562800000, 1570289400000, 1586012400000, 1601739000000, 1617462000000, 1633188600000, 1648911600000, 1664638200000, 1680361200000, 1696087800000, 1712415600000, 1728142200000, 1743865200000, 1759591800000, 1775314800000, 1791041400000, 1806764400000, 1822491000000, 1838214000000, 1853940600000, 1869663600000, 1885995000000, 1901718000000, 1917444600000, 1933167600000, 1948894200000, 1964617200000, 1980343800000, 1996066800000, 2011793400000, 2027516400000, 2043243000000, 2058966000000, 2075297400000, 2091020400000, 2106747000000, 2122470000000, 2138196600000 ]),
    Int32List.fromList([ 36000000, 37800000, 41400000, 37800000, 41400000, 37800000, 41400000, 37800000, 41400000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000, 37800000, 39600000 ]),
    [ 'AEST', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules melbourne = DynamicTimezoneRules(
    'Australia/Melbourne',
    DynamicTimezone(
      -1,
      34792000,
      'Australia/Melbourne',
      'LMT',
      null,
      -2364111592,
      dst: false,
    ),
    Int64List.fromList([ -2364111592000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 384278400000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 561484800000, 574790400000, 594144000000, 606240000000, 625593600000, 637689600000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 796147200000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules nsw = DynamicTimezoneRules(
    'Australia/NSW',
    DynamicTimezone(
      -1,
      36292000,
      'Australia/NSW',
      'LMT',
      null,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386697600000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 794332800000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules north = DynamicTimezoneRules(
    'Australia/North',
    DynamicTimezone(
      -1,
      31400000,
      'Australia/North',
      'LMT',
      null,
      -2364108200,
      dst: false,
    ),
    Int64List.fromList([ -2364108200000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000 ]),
    Int32List.fromList([ 32400000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000 ]),
    [ 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST' ],
    [ false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules perth = DynamicTimezoneRules(
    'Australia/Perth',
    DynamicTimezone(
      -1,
      27804000,
      'Australia/Perth',
      'LMT',
      null,
      -2337925404,
      dst: false,
    ),
    Int64List.fromList([ -2337925404000, -1672552800000, -1665381600000, -883634400000, -876117600000, -860392800000, -844668000000, -836467200000, 152042400000, 162928800000, 436298400000, 447184800000, 690314400000, 699386400000, 1165082400000, 1174759200000, 1193508000000, 1206813600000, 1224957600000, 1238263200000 ]),
    Int32List.fromList([ 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000 ]),
    [ 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules queensland = DynamicTimezoneRules(
    'Australia/Queensland',
    DynamicTimezone(
      -1,
      36728000,
      'Australia/Queensland',
      'LMT',
      null,
      -2366791928,
      dst: false,
    ),
    Int64List.fromList([ -2366791928000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000 ]),
    Int32List.fromList([ 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000, 39600000, 36000000 ]),
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules south = DynamicTimezoneRules(
    'Australia/South',
    DynamicTimezone(
      -1,
      33260000,
      'Australia/South',
      'LMT',
      null,
      -2364110060,
      dst: false,
    ),
    Int64List.fromList([ -2364110060000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000, 31501800000, 57688200000, 67969800000, 89137800000, 100024200000, 120587400000, 131473800000, 152037000000, 162923400000, 183486600000, 194977800000, 215541000000, 226427400000, 246990600000, 257877000000, 278440200000, 289326600000, 309889800000, 320776200000, 341339400000, 352225800000, 372789000000, 384280200000, 404843400000, 415729800000, 436293000000, 447179400000, 467742600000, 478629000000, 499192200000, 511288200000, 530037000000, 542737800000, 562091400000, 574792200000, 594145800000, 606241800000, 625595400000, 637691400000, 657045000000, 667931400000, 688494600000, 701195400000, 719944200000, 731435400000, 751998600000, 764094600000, 783448200000, 796149000000, 814897800000, 828203400000, 846347400000, 859653000000, 877797000000, 891102600000, 909246600000, 922552200000, 941301000000, 954001800000, 972750600000, 985451400000, 1004200200000, 1017505800000, 1035649800000, 1048955400000, 1067099400000, 1080405000000, 1099153800000, 1111854600000, 1130603400000, 1143909000000, 1162053000000, 1174753800000, 1193502600000, 1207413000000, 1223137800000, 1238862600000, 1254587400000, 1270312200000, 1286037000000, 1301761800000, 1317486600000, 1333211400000, 1349541000000, 1365265800000, 1380990600000, 1396715400000, 1412440200000, 1428165000000, 1443889800000, 1459614600000, 1475339400000, 1491064200000, 1506789000000, 1522513800000, 1538843400000, 1554568200000, 1570293000000, 1586017800000, 1601742600000, 1617467400000, 1633192200000, 1648917000000, 1664641800000, 1680366600000, 1696091400000, 1712421000000, 1728145800000, 1743870600000, 1759595400000, 1775320200000, 1791045000000, 1806769800000, 1822494600000, 1838219400000, 1853944200000, 1869669000000, 1885998600000, 1901723400000, 1917448200000, 1933173000000, 1948897800000, 1964622600000, 1980347400000, 1996072200000, 2011797000000, 2027521800000, 2043246600000, 2058971400000, 2075301000000, 2091025800000, 2106750600000, 2122475400000, 2138200200000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules sydney = DynamicTimezoneRules(
    'Australia/Sydney',
    DynamicTimezone(
      -1,
      36292000,
      'Australia/Sydney',
      'LMT',
      null,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386697600000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 636480000000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 794332800000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules tasmania = DynamicTimezoneRules(
    'Australia/Tasmania',
    DynamicTimezone(
      -1,
      35356000,
      'Australia/Tasmania',
      'LMT',
      null,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356000, -1680508800000, -1665388800000, -1646640000000, -1635753600000, -1615190400000, -1604304000000, -1583920800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, -94730400000, -71136000000, -55411200000, -37267200000, -25776000000, -5817600000, 5673600000, 25632000000, 37728000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 386092800000, 404841600000, 417542400000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 510076800000, 530035200000, 542736000000, 562089600000, 574790400000, 594144000000, 606240000000, 625593600000, 637689600000, 657043200000, 670348800000, 686678400000, 701798400000, 718128000000, 733248000000, 749577600000, 764697600000, 781027200000, 796147200000, 812476800000, 828201600000, 844531200000, 859651200000, 875980800000, 891100800000, 907430400000, 922550400000, 938880000000, 954000000000, 967305600000, 985449600000, 1002384000000, 1017504000000, 1033833600000, 1048953600000, 1065283200000, 1080403200000, 1096732800000, 1111852800000, 1128182400000, 1143907200000, 1159632000000, 1174752000000, 1191686400000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules victoria = DynamicTimezoneRules(
    'Australia/Victoria',
    DynamicTimezone(
      -1,
      34792000,
      'Australia/Victoria',
      'LMT',
      null,
      -2364111592,
      dst: false,
    ),
    Int64List.fromList([ -2364111592000, -1672560000000, -1665388800000, -883641600000, -876124800000, -860400000000, -844675200000, -828345600000, -813225600000, 31500000000, 57686400000, 67968000000, 89136000000, 100022400000, 120585600000, 131472000000, 152035200000, 162921600000, 183484800000, 194976000000, 215539200000, 226425600000, 246988800000, 257875200000, 278438400000, 289324800000, 309888000000, 320774400000, 341337600000, 352224000000, 372787200000, 384278400000, 404841600000, 415728000000, 436291200000, 447177600000, 467740800000, 478627200000, 499190400000, 511286400000, 530035200000, 542736000000, 561484800000, 574790400000, 594144000000, 606240000000, 625593600000, 637689600000, 657043200000, 667929600000, 688492800000, 699379200000, 719942400000, 731433600000, 751996800000, 762883200000, 783446400000, 796147200000, 814896000000, 828201600000, 846345600000, 859651200000, 877795200000, 891100800000, 909244800000, 922550400000, 941299200000, 954000000000, 967305600000, 985449600000, 1004198400000, 1017504000000, 1035648000000, 1048953600000, 1067097600000, 1080403200000, 1099152000000, 1111852800000, 1130601600000, 1143907200000, 1162051200000, 1174752000000, 1193500800000, 1207411200000, 1223136000000, 1238860800000, 1254585600000, 1270310400000, 1286035200000, 1301760000000, 1317484800000, 1333209600000, 1349539200000, 1365264000000, 1380988800000, 1396713600000, 1412438400000, 1428163200000, 1443888000000, 1459612800000, 1475337600000, 1491062400000, 1506787200000, 1522512000000, 1538841600000, 1554566400000, 1570291200000, 1586016000000, 1601740800000, 1617465600000, 1633190400000, 1648915200000, 1664640000000, 1680364800000, 1696089600000, 1712419200000, 1728144000000, 1743868800000, 1759593600000, 1775318400000, 1791043200000, 1806768000000, 1822492800000, 1838217600000, 1853942400000, 1869667200000, 1885996800000, 1901721600000, 1917446400000, 1933171200000, 1948896000000, 1964620800000, 1980345600000, 1996070400000, 2011795200000, 2027520000000, 2043244800000, 2058969600000, 2075299200000, 2091024000000, 2106748800000, 2122473600000, 2138198400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules west = DynamicTimezoneRules(
    'Australia/West',
    DynamicTimezone(
      -1,
      27804000,
      'Australia/West',
      'LMT',
      null,
      -2337925404,
      dst: false,
    ),
    Int64List.fromList([ -2337925404000, -1672552800000, -1665381600000, -883634400000, -876117600000, -860392800000, -844668000000, -836467200000, 152042400000, 162928800000, 436298400000, 447184800000, 690314400000, 699386400000, 1165082400000, 1174759200000, 1193508000000, 1206813600000, 1224957600000, 1238263200000 ]),
    Int32List.fromList([ 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000 ]),
    [ 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules yancowinna = DynamicTimezoneRules(
    'Australia/Yancowinna',
    DynamicTimezone(
      -1,
      33948000,
      'Australia/Yancowinna',
      'LMT',
      null,
      -2364110748,
      dst: false,
    ),
    Int64List.fromList([ -2364110748000, -2314951200000, -2230189200000, -1672558200000, -1665387000000, -883639800000, -876123000000, -860398200000, -844673400000, -828343800000, -813223800000, 31501800000, 57688200000, 67969800000, 89137800000, 100024200000, 120587400000, 131473800000, 152037000000, 162923400000, 183486600000, 194977800000, 215541000000, 226427400000, 246990600000, 257877000000, 278440200000, 289326600000, 309889800000, 320776200000, 341339400000, 352225800000, 372789000000, 386699400000, 404843400000, 415729800000, 436293000000, 447179400000, 467742600000, 478629000000, 499192200000, 511288200000, 530037000000, 542737800000, 562091400000, 574792200000, 594145800000, 606241800000, 625595400000, 636481800000, 657045000000, 667931400000, 688494600000, 699381000000, 719944200000, 731435400000, 751998600000, 762885000000, 783448200000, 794334600000, 814897800000, 828203400000, 846347400000, 859653000000, 877797000000, 891102600000, 909246600000, 922552200000, 941301000000, 946647000000, 954001800000, 972750600000, 985451400000, 1004200200000, 1017505800000, 1035649800000, 1048955400000, 1067099400000, 1080405000000, 1099153800000, 1111854600000, 1130603400000, 1143909000000, 1162053000000, 1174753800000, 1193502600000, 1207413000000, 1223137800000, 1238862600000, 1254587400000, 1270312200000, 1286037000000, 1301761800000, 1317486600000, 1333211400000, 1349541000000, 1365265800000, 1380990600000, 1396715400000, 1412440200000, 1428165000000, 1443889800000, 1459614600000, 1475339400000, 1491064200000, 1506789000000, 1522513800000, 1538843400000, 1554568200000, 1570293000000, 1586017800000, 1601742600000, 1617467400000, 1633192200000, 1648917000000, 1664641800000, 1680366600000, 1696091400000, 1712421000000, 1728145800000, 1743870600000, 1759595400000, 1775320200000, 1791045000000, 1806769800000, 1822494600000, 1838219400000, 1853944200000, 1869669000000, 1885998600000, 1901723400000, 1917448200000, 1933173000000, 1948897800000, 1964622600000, 1980347400000, 1996072200000, 2011797000000, 2027521800000, 2043246600000, 2058971400000, 2075301000000, 2091025800000, 2106750600000, 2122475400000, 2138200200000 ]),
    Int32List.fromList([ 36000000, 32400000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000, 34200000, 37800000 ]),
    [ 'AEST', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

}


