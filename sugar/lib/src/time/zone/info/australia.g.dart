// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Australia on Never {
  static final Timezone act = DynamicTimezone(
    'Australia/ACT',
    DynamicTimezoneSpan(
      -1,
      36292000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386697600, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 794332800, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone adelaide = DynamicTimezone(
    'Australia/Adelaide',
    DynamicTimezoneSpan(
      -1,
      33260000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364110060,
      dst: false,
    ),
    Int64List.fromList([ -2364110060, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800, 31501800, 57688200, 67969800, 89137800, 100024200, 120587400, 131473800, 152037000, 162923400, 183486600, 194977800, 215541000, 226427400, 246990600, 257877000, 278440200, 289326600, 309889800, 320776200, 341339400, 352225800, 372789000, 384280200, 404843400, 415729800, 436293000, 447179400, 467742600, 478629000, 499192200, 511288200, 530037000, 542737800, 562091400, 574792200, 594145800, 606241800, 625595400, 637691400, 657045000, 667931400, 688494600, 701195400, 719944200, 731435400, 751998600, 764094600, 783448200, 796149000, 814897800, 828203400, 846347400, 859653000, 877797000, 891102600, 909246600, 922552200, 941301000, 954001800, 972750600, 985451400, 1004200200, 1017505800, 1035649800, 1048955400, 1067099400, 1080405000, 1099153800, 1111854600, 1130603400, 1143909000, 1162053000, 1174753800, 1193502600, 1207413000, 1223137800, 1238862600, 1254587400, 1270312200, 1286037000, 1301761800, 1317486600, 1333211400, 1349541000, 1365265800, 1380990600, 1396715400, 1412440200, 1428165000, 1443889800, 1459614600, 1475339400, 1491064200, 1506789000, 1522513800, 1538843400, 1554568200, 1570293000, 1586017800, 1601742600, 1617467400, 1633192200, 1648917000, 1664641800, 1680366600, 1696091400, 1712421000, 1728145800, 1743870600, 1759595400, 1775320200, 1791045000, 1806769800, 1822494600, 1838219400, 1853944200, 1869669000, 1885998600, 1901723400, 1917448200, 1933173000, 1948897800, 1964622600, 1980347400, 1996072200, 2011797000, 2027521800, 2043246600, 2058971400, 2075301000, 2091025800, 2106750600, 2122475400, 2138200200 ]),
    Int16List.fromList([ 540, 570, 630, 570, 630, 570, 630, 570, 630, 570, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630 ]),
    60000000,

    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone brisbane = DynamicTimezone(
    'Australia/Brisbane',
    DynamicTimezoneSpan(
      -1,
      36728000000,
      'LMT',
      TimezoneSpan.range.min,
      -2366791928,
      dst: false,
    ),
    Int64List.fromList([ -2366791928, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10 ]),
    3600000000,
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone brokenHill = DynamicTimezone(
    'Australia/Broken_Hill',
    DynamicTimezoneSpan(
      -1,
      33948000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364110748,
      dst: false,
    ),
    Int64List.fromList([ -2364110748, -2314951200, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800, 31501800, 57688200, 67969800, 89137800, 100024200, 120587400, 131473800, 152037000, 162923400, 183486600, 194977800, 215541000, 226427400, 246990600, 257877000, 278440200, 289326600, 309889800, 320776200, 341339400, 352225800, 372789000, 386699400, 404843400, 415729800, 436293000, 447179400, 467742600, 478629000, 499192200, 511288200, 530037000, 542737800, 562091400, 574792200, 594145800, 606241800, 625595400, 636481800, 657045000, 667931400, 688494600, 699381000, 719944200, 731435400, 751998600, 762885000, 783448200, 794334600, 814897800, 828203400, 846347400, 859653000, 877797000, 891102600, 909246600, 922552200, 941301000, 946647000, 954001800, 972750600, 985451400, 1004200200, 1017505800, 1035649800, 1048955400, 1067099400, 1080405000, 1099153800, 1111854600, 1130603400, 1143909000, 1162053000, 1174753800, 1193502600, 1207413000, 1223137800, 1238862600, 1254587400, 1270312200, 1286037000, 1301761800, 1317486600, 1333211400, 1349541000, 1365265800, 1380990600, 1396715400, 1412440200, 1428165000, 1443889800, 1459614600, 1475339400, 1491064200, 1506789000, 1522513800, 1538843400, 1554568200, 1570293000, 1586017800, 1601742600, 1617467400, 1633192200, 1648917000, 1664641800, 1680366600, 1696091400, 1712421000, 1728145800, 1743870600, 1759595400, 1775320200, 1791045000, 1806769800, 1822494600, 1838219400, 1853944200, 1869669000, 1885998600, 1901723400, 1917448200, 1933173000, 1948897800, 1964622600, 1980347400, 1996072200, 2011797000, 2027521800, 2043246600, 2058971400, 2075301000, 2091025800, 2106750600, 2122475400, 2138200200 ]),
    Int16List.fromList([ 600, 540, 570, 630, 570, 630, 570, 630, 570, 630, 570, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630 ]),
    60000000,
    [ 'AEST', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone canberra = DynamicTimezone(
    'Australia/Canberra',
    DynamicTimezoneSpan(
      -1,
      36292000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386697600, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 794332800, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone currie = DynamicTimezone(
    'Australia/Currie',
    DynamicTimezoneSpan(
      -1,
      35356000000,
      'LMT',
      TimezoneSpan.range.min,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356, -1680508800, -1665388800, -1646640000, -1635753600, -1615190400, -1604304000, -1583920800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, -94730400, -71136000, -55411200, -37267200, -25776000, -5817600, 5673600, 25632000, 37728000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386092800, 404841600, 417542400, 436291200, 447177600, 467740800, 478627200, 499190400, 510076800, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 637689600, 657043200, 670348800, 686678400, 701798400, 718128000, 733248000, 749577600, 764697600, 781027200, 796147200, 812476800, 828201600, 844531200, 859651200, 875980800, 891100800, 907430400, 922550400, 938880000, 954000000, 967305600, 985449600, 1002384000, 1017504000, 1033833600, 1048953600, 1065283200, 1080403200, 1096732800, 1111852800, 1128182400, 1143907200, 1159632000, 1174752000, 1191686400, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone darwin = DynamicTimezone(
    'Australia/Darwin',
    DynamicTimezoneSpan(
      -1,
      31400000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364108200,
      dst: false,
    ),
    Int64List.fromList([ -2364108200, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800 ]),
    Int16List.fromList([ 540, 570, 630, 570, 630, 570, 630, 570, 630, 570 ]),
    60000000,
    [ 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST' ],
    [ false, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eucla = DynamicTimezone(
    'Australia/Eucla',
    DynamicTimezoneSpan(
      -1,
      30928000000,
      'LMT',
      TimezoneSpan.range.min,
      -2337928528,
      dst: false,
    ),
    Int64List.fromList([ -2337928528, -1672555500, -1665384300, -883637100, -876120300, -860395500, -844670700, -836469900, 152039700, 162926100, 436295700, 447182100, 690311700, 699383700, 1165079700, 1174756500, 1193505300, 1206810900, 1224954900, 1238260500 ]),
    Int16List.fromList([ 525, 585, 525, 585, 525, 585, 525, 525, 585, 525, 585, 525, 585, 525, 585, 525, 585, 525, 585, 525 ]),
    60000000,
    [ '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845', '+0945', '+0845' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone hobart = DynamicTimezone(
    'Australia/Hobart',
    DynamicTimezoneSpan(
      -1,
      35356000000,
      'LMT',
      TimezoneSpan.range.min,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356, -1680508800, -1665388800, -1646640000, -1635753600, -1615190400, -1604304000, -1583920800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, -94730400, -71136000, -55411200, -37267200, -25776000, -5817600, 5673600, 25632000, 37728000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386092800, 404841600, 417542400, 436291200, 447177600, 467740800, 478627200, 499190400, 510076800, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 637689600, 657043200, 670348800, 686678400, 701798400, 718128000, 733248000, 749577600, 764697600, 781027200, 796147200, 812476800, 828201600, 844531200, 859651200, 875980800, 891100800, 907430400, 922550400, 938880000, 954000000, 967305600, 985449600, 1002384000, 1017504000, 1033833600, 1048953600, 1065283200, 1080403200, 1096732800, 1111852800, 1128182400, 1143907200, 1159632000, 1174752000, 1191686400, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone lhi = DynamicTimezone(
    'Australia/LHI',
    DynamicTimezoneSpan(
      -1,
      38180000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364114980,
      dst: false,
    ),
    Int64List.fromList([ -2364114980, 352216800, 372785400, 384273000, 404839800, 415722600, 436289400, 447172200, 467739000, 478621800, 499188600, 511282800, 530033400, 542732400, 562087800, 574786800, 594142200, 606236400, 625591800, 636476400, 657041400, 667926000, 688491000, 699375600, 719940600, 731430000, 751995000, 762879600, 783444600, 794329200, 814894200, 828198000, 846343800, 859647600, 877793400, 891097200, 909243000, 922546800, 941297400, 953996400, 967303800, 985446000, 1004196600, 1017500400, 1035646200, 1048950000, 1067095800, 1080399600, 1099150200, 1111849200, 1130599800, 1143903600, 1162049400, 1174748400, 1193499000, 1207407600, 1223134200, 1238857200, 1254583800, 1270306800, 1286033400, 1301756400, 1317483000, 1333206000, 1349537400, 1365260400, 1380987000, 1396710000, 1412436600, 1428159600, 1443886200, 1459609200, 1475335800, 1491058800, 1506785400, 1522508400, 1538839800, 1554562800, 1570289400, 1586012400, 1601739000, 1617462000, 1633188600, 1648911600, 1664638200, 1680361200, 1696087800, 1712415600, 1728142200, 1743865200, 1759591800, 1775314800, 1791041400, 1806764400, 1822491000, 1838214000, 1853940600, 1869663600, 1885995000, 1901718000, 1917444600, 1933167600, 1948894200, 1964617200, 1980343800, 1996066800, 2011793400, 2027516400, 2043243000, 2058966000, 2075297400, 2091020400, 2106747000, 2122470000, 2138196600 ]),
    Int16List.fromList([ 600, 630, 690, 630, 690, 630, 690, 630, 690, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660 ]),
    60000000,
    [ 'AEST', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone lindeman = DynamicTimezone(
    'Australia/Lindeman',
    DynamicTimezoneSpan(
      -1,
      35756000000,
      'LMT',
      TimezoneSpan.range.min,
      -2366790956,
      dst: false,
    ),
    Int64List.fromList([ -2366790956, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200, 709912800, 719942400, 731433600, 751996800, 762883200 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10 ]),
    3600000000,
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false ],
  );

  static final Timezone lordHowe = DynamicTimezone(
    'Australia/Lord_Howe',
    DynamicTimezoneSpan(
      -1,
      38180000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364114980,
      dst: false,
    ),
    Int64List.fromList([ -2364114980, 352216800, 372785400, 384273000, 404839800, 415722600, 436289400, 447172200, 467739000, 478621800, 499188600, 511282800, 530033400, 542732400, 562087800, 574786800, 594142200, 606236400, 625591800, 636476400, 657041400, 667926000, 688491000, 699375600, 719940600, 731430000, 751995000, 762879600, 783444600, 794329200, 814894200, 828198000, 846343800, 859647600, 877793400, 891097200, 909243000, 922546800, 941297400, 953996400, 967303800, 985446000, 1004196600, 1017500400, 1035646200, 1048950000, 1067095800, 1080399600, 1099150200, 1111849200, 1130599800, 1143903600, 1162049400, 1174748400, 1193499000, 1207407600, 1223134200, 1238857200, 1254583800, 1270306800, 1286033400, 1301756400, 1317483000, 1333206000, 1349537400, 1365260400, 1380987000, 1396710000, 1412436600, 1428159600, 1443886200, 1459609200, 1475335800, 1491058800, 1506785400, 1522508400, 1538839800, 1554562800, 1570289400, 1586012400, 1601739000, 1617462000, 1633188600, 1648911600, 1664638200, 1680361200, 1696087800, 1712415600, 1728142200, 1743865200, 1759591800, 1775314800, 1791041400, 1806764400, 1822491000, 1838214000, 1853940600, 1869663600, 1885995000, 1901718000, 1917444600, 1933167600, 1948894200, 1964617200, 1980343800, 1996066800, 2011793400, 2027516400, 2043243000, 2058966000, 2075297400, 2091020400, 2106747000, 2122470000, 2138196600 ]),
    Int16List.fromList([ 600, 630, 690, 630, 690, 630, 690, 630, 690, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660, 630, 660 ]),
    60000000,
    [ 'AEST', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+1130', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11', '+1030', '+11' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone melbourne = DynamicTimezone(
    'Australia/Melbourne',
    DynamicTimezoneSpan(
      -1,
      34792000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364111592,
      dst: false,
    ),
    Int64List.fromList([ -2364111592, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 384278400, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 561484800, 574790400, 594144000, 606240000, 625593600, 637689600, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 796147200, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone nsw = DynamicTimezone(
    'Australia/NSW',
    DynamicTimezoneSpan(
      -1,
      36292000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386697600, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 794332800, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone north = DynamicTimezone(
    'Australia/North',
    DynamicTimezoneSpan(
      -1,
      31400000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364108200,
      dst: false,
    ),
    Int64List.fromList([ -2364108200, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800 ]),
    Int16List.fromList([ 540, 570, 630, 570, 630, 570, 630, 570, 630, 570 ]),
    60000000,
    [ 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST' ],
    [ false, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone perth = DynamicTimezone(
    'Australia/Perth',
    DynamicTimezoneSpan(
      -1,
      27804000000,
      'LMT',
      TimezoneSpan.range.min,
      -2337925404,
      dst: false,
    ),
    Int64List.fromList([ -2337925404, -1672552800, -1665381600, -883634400, -876117600, -860392800, -844668000, -836467200, 152042400, 162928800, 436298400, 447184800, 690314400, 699386400, 1165082400, 1174759200, 1193508000, 1206813600, 1224957600, 1238263200 ]),
    Int8List.fromList([ 8, 9, 8, 9, 8, 9, 8, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8 ]),
    3600000000,
    [ 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone queensland = DynamicTimezone(
    'Australia/Queensland',
    DynamicTimezoneSpan(
      -1,
      36728000000,
      'LMT',
      TimezoneSpan.range.min,
      -2366791928,
      dst: false,
    ),
    Int64List.fromList([ -2366791928, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10 ]),
    3600000000,
    [ 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST', 'AEDT', 'AEST' ],
    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone south = DynamicTimezone(
    'Australia/South',
    DynamicTimezoneSpan(
      -1,
      33260000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364110060,
      dst: false,
    ),
    Int64List.fromList([ -2364110060, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800, 31501800, 57688200, 67969800, 89137800, 100024200, 120587400, 131473800, 152037000, 162923400, 183486600, 194977800, 215541000, 226427400, 246990600, 257877000, 278440200, 289326600, 309889800, 320776200, 341339400, 352225800, 372789000, 384280200, 404843400, 415729800, 436293000, 447179400, 467742600, 478629000, 499192200, 511288200, 530037000, 542737800, 562091400, 574792200, 594145800, 606241800, 625595400, 637691400, 657045000, 667931400, 688494600, 701195400, 719944200, 731435400, 751998600, 764094600, 783448200, 796149000, 814897800, 828203400, 846347400, 859653000, 877797000, 891102600, 909246600, 922552200, 941301000, 954001800, 972750600, 985451400, 1004200200, 1017505800, 1035649800, 1048955400, 1067099400, 1080405000, 1099153800, 1111854600, 1130603400, 1143909000, 1162053000, 1174753800, 1193502600, 1207413000, 1223137800, 1238862600, 1254587400, 1270312200, 1286037000, 1301761800, 1317486600, 1333211400, 1349541000, 1365265800, 1380990600, 1396715400, 1412440200, 1428165000, 1443889800, 1459614600, 1475339400, 1491064200, 1506789000, 1522513800, 1538843400, 1554568200, 1570293000, 1586017800, 1601742600, 1617467400, 1633192200, 1648917000, 1664641800, 1680366600, 1696091400, 1712421000, 1728145800, 1743870600, 1759595400, 1775320200, 1791045000, 1806769800, 1822494600, 1838219400, 1853944200, 1869669000, 1885998600, 1901723400, 1917448200, 1933173000, 1948897800, 1964622600, 1980347400, 1996072200, 2011797000, 2027521800, 2043246600, 2058971400, 2075301000, 2091025800, 2106750600, 2122475400, 2138200200 ]),
    Int16List.fromList([ 540, 570, 630, 570, 630, 570, 630, 570, 630, 570, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630 ]),
    60000000,

    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone sydney = DynamicTimezone(
    'Australia/Sydney',
    DynamicTimezoneSpan(
      -1,
      36292000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364113092,
      dst: false,
    ),
    Int64List.fromList([ -2364113092, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386697600, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 636480000, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 794332800, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone tasmania = DynamicTimezone(
    'Australia/Tasmania',
    DynamicTimezoneSpan(
      -1,
      35356000000,
      'LMT',
      TimezoneSpan.range.min,
      -2345795356,
      dst: false,
    ),
    Int64List.fromList([ -2345795356, -1680508800, -1665388800, -1646640000, -1635753600, -1615190400, -1604304000, -1583920800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, -94730400, -71136000, -55411200, -37267200, -25776000, -5817600, 5673600, 25632000, 37728000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 386092800, 404841600, 417542400, 436291200, 447177600, 467740800, 478627200, 499190400, 510076800, 530035200, 542736000, 562089600, 574790400, 594144000, 606240000, 625593600, 637689600, 657043200, 670348800, 686678400, 701798400, 718128000, 733248000, 749577600, 764697600, 781027200, 796147200, 812476800, 828201600, 844531200, 859651200, 875980800, 891100800, 907430400, 922550400, 938880000, 954000000, 967305600, 985449600, 1002384000, 1017504000, 1033833600, 1048953600, 1065283200, 1080403200, 1096732800, 1111852800, 1128182400, 1143907200, 1159632000, 1174752000, 1191686400, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone victoria = DynamicTimezone(
    'Australia/Victoria',
    DynamicTimezoneSpan(
      -1,
      34792000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364111592,
      dst: false,
    ),
    Int64List.fromList([ -2364111592, -1672560000, -1665388800, -883641600, -876124800, -860400000, -844675200, -828345600, -813225600, 31500000, 57686400, 67968000, 89136000, 100022400, 120585600, 131472000, 152035200, 162921600, 183484800, 194976000, 215539200, 226425600, 246988800, 257875200, 278438400, 289324800, 309888000, 320774400, 341337600, 352224000, 372787200, 384278400, 404841600, 415728000, 436291200, 447177600, 467740800, 478627200, 499190400, 511286400, 530035200, 542736000, 561484800, 574790400, 594144000, 606240000, 625593600, 637689600, 657043200, 667929600, 688492800, 699379200, 719942400, 731433600, 751996800, 762883200, 783446400, 796147200, 814896000, 828201600, 846345600, 859651200, 877795200, 891100800, 909244800, 922550400, 941299200, 954000000, 967305600, 985449600, 1004198400, 1017504000, 1035648000, 1048953600, 1067097600, 1080403200, 1099152000, 1111852800, 1130601600, 1143907200, 1162051200, 1174752000, 1193500800, 1207411200, 1223136000, 1238860800, 1254585600, 1270310400, 1286035200, 1301760000, 1317484800, 1333209600, 1349539200, 1365264000, 1380988800, 1396713600, 1412438400, 1428163200, 1443888000, 1459612800, 1475337600, 1491062400, 1506787200, 1522512000, 1538841600, 1554566400, 1570291200, 1586016000, 1601740800, 1617465600, 1633190400, 1648915200, 1664640000, 1680364800, 1696089600, 1712419200, 1728144000, 1743868800, 1759593600, 1775318400, 1791043200, 1806768000, 1822492800, 1838217600, 1853942400, 1869667200, 1885996800, 1901721600, 1917446400, 1933171200, 1948896000, 1964620800, 1980345600, 1996070400, 2011795200, 2027520000, 2043244800, 2058969600, 2075299200, 2091024000, 2106748800, 2122473600, 2138198400 ]),
    Int8List.fromList([ 10, 11, 10, 11, 10, 11, 10, 11, 10, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11, 10, 11 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone west = DynamicTimezone(
    'Australia/West',
    DynamicTimezoneSpan(
      -1,
      27804000000,
      'LMT',
      TimezoneSpan.range.min,
      -2337925404,
      dst: false,
    ),
    Int64List.fromList([ -2337925404, -1672552800, -1665381600, -883634400, -876117600, -860392800, -844668000, -836467200, 152042400, 162928800, 436298400, 447184800, 690314400, 699386400, 1165082400, 1174759200, 1193508000, 1206813600, 1224957600, 1238263200 ]),
    Int8List.fromList([ 8, 9, 8, 9, 8, 9, 8, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8 ]),
    3600000000,
    [ 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST', 'AWDT', 'AWST' ],
    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone yancowinna = DynamicTimezone(
    'Australia/Yancowinna',
    DynamicTimezoneSpan(
      -1,
      33948000000,
      'LMT',
      TimezoneSpan.range.min,
      -2364110748,
      dst: false,
    ),
    Int64List.fromList([ -2364110748, -2314951200, -2230189200, -1672558200, -1665387000, -883639800, -876123000, -860398200, -844673400, -828343800, -813223800, 31501800, 57688200, 67969800, 89137800, 100024200, 120587400, 131473800, 152037000, 162923400, 183486600, 194977800, 215541000, 226427400, 246990600, 257877000, 278440200, 289326600, 309889800, 320776200, 341339400, 352225800, 372789000, 386699400, 404843400, 415729800, 436293000, 447179400, 467742600, 478629000, 499192200, 511288200, 530037000, 542737800, 562091400, 574792200, 594145800, 606241800, 625595400, 636481800, 657045000, 667931400, 688494600, 699381000, 719944200, 731435400, 751998600, 762885000, 783448200, 794334600, 814897800, 828203400, 846347400, 859653000, 877797000, 891102600, 909246600, 922552200, 941301000, 946647000, 954001800, 972750600, 985451400, 1004200200, 1017505800, 1035649800, 1048955400, 1067099400, 1080405000, 1099153800, 1111854600, 1130603400, 1143909000, 1162053000, 1174753800, 1193502600, 1207413000, 1223137800, 1238862600, 1254587400, 1270312200, 1286037000, 1301761800, 1317486600, 1333211400, 1349541000, 1365265800, 1380990600, 1396715400, 1412440200, 1428165000, 1443889800, 1459614600, 1475339400, 1491064200, 1506789000, 1522513800, 1538843400, 1554568200, 1570293000, 1586017800, 1601742600, 1617467400, 1633192200, 1648917000, 1664641800, 1680366600, 1696091400, 1712421000, 1728145800, 1743870600, 1759595400, 1775320200, 1791045000, 1806769800, 1822494600, 1838219400, 1853944200, 1869669000, 1885998600, 1901723400, 1917448200, 1933173000, 1948897800, 1964622600, 1980347400, 1996072200, 2011797000, 2027521800, 2043246600, 2058971400, 2075301000, 2091025800, 2106750600, 2122475400, 2138200200 ]),
    Int16List.fromList([ 600, 540, 570, 630, 570, 630, 570, 630, 570, 630, 570, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630, 570, 630 ]),
    60000000,
    [ 'AEST', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT', 'ACST', 'ACDT' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

}


