// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Indiana on Never {
  static final Timezone indianapolis = DynamicTimezone(
    'America/Indiana/Indianapolis',
    DynamicTimezoneSpan(
      -1,
      -20678,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -900259200, -891795600, -880214400, -769395600, -765392400, -747244800, -733942800, -715795200, -702493200, -684345600, -671043600, -652896000, -639594000, -620841600, -608144400, -589392000, -576090000, -557942400, -544640400, -526492800, -513190800, -495043200, -481741200, -463593600, -386787600, -368640000, -21488400, -5767200, 9961200, 25682400, 1143961200, 1162101600, 1173596400, 1194156000, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone knox = DynamicTimezone(
    'America/Indiana/Knox',
    DynamicTimezoneSpan(
      -1,
      -20790,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -715795200, -702493200, -684345600, -671043600, -652896000, -639594000, -620841600, -608144400, -589392000, -576090000, -557942400, -544640400, -526492800, -513190800, -495043200, -481741200, -463593600, -447267600, -431539200, -415818000, -400089600, -386787600, -368640000, -355338000, -337190400, -321469200, -305740800, -289414800, -273686400, -257965200, -242236800, -195066000, -84384000, -68662800, -52934400, -37213200, -21484800, -5763600, 9964800, 25686000, 41414400, 57740400, 73468800, 89190000, 104918400, 120639600, 126691200, 152089200, 162374400, 183538800, 199267200, 215593200, 230716800, 247042800, 262771200, 278492400, 294220800, 309942000, 325670400, 341391600, 357120000, 372841200, 388569600, 404895600, 420019200, 436345200, 452073600, 467794800, 483523200, 499244400, 514972800, 530694000, 544608000, 562143600, 576057600, 594198000, 607507200, 625647600, 638956800, 657097200, 671011200, 688546800, 1143961200, 1162105200, 1173600000, 1194159600, 1205049600, 1225609200, 1236499200, 1257058800, 1268553600, 1289113200, 1300003200, 1320562800, 1331452800, 1352012400, 1362902400, 1383462000, 1394352000, 1414911600, 1425801600, 1446361200, 1457856000, 1478415600, 1489305600, 1509865200, 1520755200, 1541314800, 1552204800, 1572764400, 1583654400, 1604214000, 1615708800, 1636268400, 1647158400, 1667718000, 1678608000, 1699167600, 1710057600, 1730617200, 1741507200, 1762066800, 1772956800, 1793516400, 1805011200, 1825570800, 1836460800, 1857020400, 1867910400, 1888470000, 1899360000, 1919919600, 1930809600, 1951369200, 1962864000, 1983423600, 1994313600, 2014873200, 2025763200, 2046322800, 2057212800, 2077772400, 2088662400, 2109222000, 2120112000, 2140671600 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone marengo = DynamicTimezone(
    'America/Indiana/Marengo',
    DynamicTimezoneSpan(
      -1,
      -20723,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -589392000, -576090000, -495043200, -481741200, -463593600, -450291600, -431539200, -418237200, -400089600, -386787600, -368640000, -355338000, -337190400, -323888400, -305740800, -292438800, -273686400, -21488400, -5767200, 9961200, 25682400, 41410800, 57736800, 73465200, 89186400, 104914800, 120636000, 126687600, 152089200, 162370800, 183535200, 1143961200, 1162101600, 1173596400, 1194156000, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone petersburg = DynamicTimezone(
    'America/Indiana/Petersburg',
    DynamicTimezoneSpan(
      -1,
      -20947,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -462996000, -450291600, -431539200, -418237200, -400089600, -386787600, -368640000, -355338000, -337190400, -323888400, -305740800, -292438800, -273686400, -257965200, -242236800, -226515600, -210787200, -195066000, -179337600, -163616400, -147888000, -100112400, -84384000, -68662800, -52934400, -37213200, -21484800, -5763600, 9964800, 25686000, 41414400, 57740400, 73468800, 89190000, 104918400, 120639600, 126691200, 152089200, 162374400, 183538800, 199267200, 215593200, 230716800, 247042800, 1143961200, 1162105200, 1173600000, 1194159600, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -5, -5, -6, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone tellCity = DynamicTimezone(
    'America/Indiana/Tell_City',
    DynamicTimezoneSpan(
      -1,
      -20823,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -462996000, -450291600, -431539200, -418237200, -400089600, -386787600, -368640000, -355338000, -337190400, -323888400, -305740800, -292438800, -273686400, -257965200, -242236800, -226515600, -210787200, -195066000, -179337600, -68662800, -52934400, -37213200, -21484800, -5767200, 9961200, 25682400, 1143961200, 1162105200, 1173600000, 1194159600, 1205049600, 1225609200, 1236499200, 1257058800, 1268553600, 1289113200, 1300003200, 1320562800, 1331452800, 1352012400, 1362902400, 1383462000, 1394352000, 1414911600, 1425801600, 1446361200, 1457856000, 1478415600, 1489305600, 1509865200, 1520755200, 1541314800, 1552204800, 1572764400, 1583654400, 1604214000, 1615708800, 1636268400, 1647158400, 1667718000, 1678608000, 1699167600, 1710057600, 1730617200, 1741507200, 1762066800, 1772956800, 1793516400, 1805011200, 1825570800, 1836460800, 1857020400, 1867910400, 1888470000, 1899360000, 1919919600, 1930809600, 1951369200, 1962864000, 1983423600, 1994313600, 2014873200, 2025763200, 2046322800, 2057212800, 2077772400, 2088662400, 2109222000, 2120112000, 2140671600 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -4, -5, -4, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vevay = DynamicTimezone(
    'America/Indiana/Vevay',
    DynamicTimezoneSpan(
      -1,
      -20416,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -495043200, -21488400, -5767200, 9961200, 25682400, 41410800, 57736800, 73465200, 89186400, 1143961200, 1162101600, 1173596400, 1194156000, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vincennes = DynamicTimezone(
    'America/Indiana/Vincennes',
    DynamicTimezoneSpan(
      -1,
      -21007,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -747244800, -733942800, -526492800, -513190800, -495043200, -481741200, -462996000, -450291600, -431539200, -418237200, -400089600, -386787600, -368640000, -355338000, -337190400, -323888400, -305740800, -289414800, -273686400, -260989200, -242236800, -226515600, -210787200, -195066000, -179337600, -21488400, -5767200, 9961200, 25682400, 1143961200, 1162105200, 1173600000, 1194159600, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -4, -5, -4, -5, -5, -6, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone winamac = DynamicTimezone(
    'America/Indiana/Winamac',
    DynamicTimezoneSpan(
      -1,
      -20785,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -747244800, -733942800, -715795200, -702493200, -684345600, -671043600, -652896000, -639594000, -620841600, -608144400, -589392000, -576090000, -557942400, -544640400, -526492800, -513190800, -495043200, -481741200, -463593600, -447267600, -431539200, -415818000, -400089600, -386787600, -368640000, -355338000, -337190400, -323888400, -305740800, -292438800, -273686400, -21488400, -5767200, 9961200, 25682400, 1143961200, 1162105200, 1173600000, 1194156000, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -4, -5, -4, -5, -5, -6, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


