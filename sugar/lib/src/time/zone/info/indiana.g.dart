// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Indiana on Never {
  static final Timezone indianapolis = DynamicTimezone(
    'America/Indiana/Indianapolis',
    DynamicTimezoneSpan(
      -1,
      -20678000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -900259200000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -386787600000, -368640000000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone knox = DynamicTimezone(
    'America/Indiana/Knox',
    DynamicTimezoneSpan(
      -1,
      -20790000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -257965200000, -242236800000, -195066000000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone marengo = DynamicTimezone(
    'America/Indiana/Marengo',
    DynamicTimezoneSpan(
      -1,
      -20723000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -589392000000, -576090000000, -495043200000, -481741200000, -463593600000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -323888400000, -305740800000, -292438800000, -273686400000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 126687600000, 152089200000, 162370800000, 183535200000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -18000000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone petersburg = DynamicTimezone(
    'America/Indiana/Petersburg',
    DynamicTimezoneSpan(
      -1,
      -20947000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -462996000000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -323888400000, -305740800000, -292438800000, -273686400000, -257965200000, -242236800000, -226515600000, -210787200000, -195066000000, -179337600000, -163616400000, -147888000000, -100112400000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone tellCity = DynamicTimezone(
    'America/Indiana/Tell_City',
    DynamicTimezoneSpan(
      -1,
      -20823000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -462996000000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -323888400000, -305740800000, -292438800000, -273686400000, -257965200000, -242236800000, -226515600000, -210787200000, -195066000000, -179337600000, -68662800000, -52934400000, -37213200000, -21484800000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -14400000, -18000000, -14400000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vevay = DynamicTimezone(
    'America/Indiana/Vevay',
    DynamicTimezoneSpan(
      -1,
      -20416000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -495043200000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vincennes = DynamicTimezone(
    'America/Indiana/Vincennes',
    DynamicTimezoneSpan(
      -1,
      -21007000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -526492800000, -513190800000, -495043200000, -481741200000, -462996000000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -323888400000, -305740800000, -289414800000, -273686400000, -260989200000, -242236800000, -226515600000, -210787200000, -195066000000, -179337600000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -18000000, -21600000, -18000000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone winamac = DynamicTimezone(
    'America/Indiana/Winamac',
    DynamicTimezoneSpan(
      -1,
      -20785000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -323888400000, -305740800000, -292438800000, -273686400000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162105200000, 1173600000000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -18000000, -21600000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'CST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


