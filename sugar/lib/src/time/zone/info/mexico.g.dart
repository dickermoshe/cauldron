// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Mexico on Never {
  static final Timezone bajaNorte = DynamicTimezone(
    'Mexico/BajaNorte',
    DynamicTimezoneSpan(
      -1,
      -28084000,
      'LMT',
      TimezoneSpan.range.min,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1451667600000, -1343062800000, -1234803600000, -1222963200000, -1207242000000, -873820800000, -769395600000, -761677200000, -686073600000, -661539600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1175421600000, 1193562000000, 1207476000000, 1225011600000, 1238925600000, 1256461200000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'MST', 'PST', 'MST', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, false, false, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone bajaSur = DynamicTimezone(
    'Mexico/BajaSur',
    DynamicTimezoneSpan(
      -1,
      -25540000,
      'LMT',
      TimezoneSpan.range.min,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -873828000000, -661539600000, 28800000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1270371600000, 1288512000000, 1301821200000, 1319961600000, 1333270800000, 1351411200000, 1365325200000, 1382860800000, 1396774800000, 1414310400000, 1428224400000, 1445760000000, 1459674000000, 1477814400000, 1491123600000, 1509264000000, 1522573200000, 1540713600000, 1554627600000, 1572163200000, 1586077200000, 1603612800000, 1617526800000, 1635667200000, 1648976400000, 1667116800000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -28800000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'MST', 'PST', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, false, false, true, false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone general = DynamicTimezone(
    'Mexico/General',
    DynamicTimezoneSpan(
      -1,
      -23796000,
      'LMT',
      TimezoneSpan.range.min,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -975261600000, -963169200000, -917114400000, -907354800000, -821901600000, -810068400000, -627501600000, -612990000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1270368000000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1428220800000, 1445756400000, 1459670400000, 1477810800000, 1491120000000, 1509260400000, 1522569600000, 1540710000000, 1554624000000, 1572159600000, 1586073600000, 1603609200000, 1617523200000, 1635663600000, 1648972800000, 1667113200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


