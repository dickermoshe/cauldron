// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Root on Never {
  static final Timezone cet = DynamicTimezone(
    'CET',
    DynamicTimezoneSpan(
      -1,
      3600000000,
      'CET',
      TimezoneSpan.range.min.value,
      -1693706400,
      dst: false,
    ),
    Int64List.fromList([ -1693706400, -1680483600, -1663455600, -1650150000, -1632006000, -1618700400, -938905200, -857257200, -844556400, -828226800, -812502000, -796777200, -781052400, -766623600, 228877200, 243997200, 260326800, 276051600, 291776400, 307501200, 323830800, 338950800, 354675600, 370400400, 386125200, 401850000, 417574800, 433299600, 449024400, 465354000, 481078800, 496803600, 512528400, 528253200, 543978000, 559702800, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int8List.fromList([ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2 ]),
    3600000000,
    [ 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST' ],
    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone cst6cdt = DynamicTimezone(
    'CST6CDT',
    DynamicTimezoneSpan(
      -1,
      -21600000000,
      'CST',
      TimezoneSpan.range.min.value,
      -1633276800,
      dst: false,
    ),
    Int64List.fromList([ -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -84384000, -68662800, -52934400, -37213200, -21484800, -5763600, 9964800, 25686000, 41414400, 57740400, 73468800, 89190000, 104918400, 120639600, 126691200, 152089200, 162374400, 183538800, 199267200, 215593200, 230716800, 247042800, 262771200, 278492400, 294220800, 309942000, 325670400, 341391600, 357120000, 372841200, 388569600, 404895600, 420019200, 436345200, 452073600, 467794800, 483523200, 499244400, 514972800, 530694000, 544608000, 562143600, 576057600, 594198000, 607507200, 625647600, 638956800, 657097200, 671011200, 688546800, 702460800, 719996400, 733910400, 752050800, 765360000, 783500400, 796809600, 814950000, 828864000, 846399600, 860313600, 877849200, 891763200, 909298800, 923212800, 941353200, 954662400, 972802800, 986112000, 1004252400, 1018166400, 1035702000, 1049616000, 1067151600, 1081065600, 1099206000, 1112515200, 1130655600, 1143964800, 1162105200, 1173600000 ]),
    Int8List.fromList([ -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5 ]),
    3600000000,
    [ 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone cuba = DynamicTimezone(
    'Cuba',
    DynamicTimezoneSpan(
      -1,
      -19768000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2524501832,
      dst: false,
    ),
    Int64List.fromList([ -2524501832, -1402813824, -1311534000, -1300996800, -933534000, -925675200, -902084400, -893620800, -870030000, -862171200, -775681200, -767822400, -744231600, -736372800, -144702000, -134251200, -113425200, -102542400, -86295600, -72907200, -54154800, -41457600, -21495600, -5774400, 9954000, 25675200, 41403600, 57729600, 73458000, 87364800, 104907600, 118900800, 136357200, 150436800, 167806800, 183528000, 199256400, 215582400, 230706000, 247032000, 263365200, 276667200, 290581200, 308721600, 322030800, 340171200, 358318800, 371620800, 389768400, 403070400, 421218000, 434520000, 452667600, 466574400, 484117200, 498024000, 511333200, 529473600, 542782800, 560923200, 574837200, 592372800, 606286800, 623822400, 638946000, 655876800, 671000400, 687330000, 702450000, 718779600, 733899600, 750229200, 765349200, 781678800, 796798800, 813128400, 828853200, 844578000, 860302800, 876632400, 891147600, 909291600, 922597200, 941346000, 954651600, 972795600, 986101200, 1004245200, 1018155600, 1035694800, 1049605200, 1067144400, 1080450000, 1162098000, 1173589200, 1193547600, 1205643600, 1224997200, 1236488400, 1256446800, 1268542800, 1288501200, 1300597200, 1321160400, 1333256400, 1352005200 ]),
    Int32List.fromList([ -19776, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000 ]),
    1000000,

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eet = DynamicTimezone(
    'EET',
    DynamicTimezoneSpan(
      -1,
      7200000000,
      'EET',
      TimezoneSpan.range.min.value,
      228877200,
      dst: false,
    ),
    Int64List.fromList([ 228877200, 243997200, 260326800, 276051600, 291776400, 307501200, 323830800, 338950800, 354675600, 370400400, 386125200, 401850000, 417574800, 433299600, 449024400, 465354000, 481078800, 496803600, 512528400, 528253200, 543978000, 559702800, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int8List.fromList([ 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3 ]),
    3600000000,
    [ 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST' ],
    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone est = FixedTimezone(
    'EST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -18000),
      'EST',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone est5edt = DynamicTimezone(
    'EST5EDT',
    DynamicTimezoneSpan(
      -1,
      -18000000000,
      'EST',
      TimezoneSpan.range.min.value,
      -1633280400,
      dst: false,
    ),
    Int64List.fromList([ -1633280400, -1615140000, -1601830800, -1583690400, -880218000, -769395600, -765396000, -84387600, -68666400, -52938000, -37216800, -21488400, -5767200, 9961200, 25682400, 41410800, 57736800, 73465200, 89186400, 104914800, 120636000, 126687600, 152085600, 162370800, 183535200, 199263600, 215589600, 230713200, 247039200, 262767600, 278488800, 294217200, 309938400, 325666800, 341388000, 357116400, 372837600, 388566000, 404892000, 420015600, 436341600, 452070000, 467791200, 483519600, 499240800, 514969200, 530690400, 544604400, 562140000, 576054000, 594194400, 607503600, 625644000, 638953200, 657093600, 671007600, 688543200, 702457200, 719992800, 733906800, 752047200, 765356400, 783496800, 796806000, 814946400, 828860400, 846396000, 860310000, 877845600, 891759600, 909295200, 923209200, 941349600, 954658800, 972799200, 986108400, 1004248800, 1018162800, 1035698400, 1049612400, 1067148000, 1081062000, 1099202400, 1112511600, 1130652000, 1143961200, 1162101600, 1173596400 ]),
    Int8List.fromList([ -4, -5, -4, -5, -4, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4 ]),
    3600000000,

    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone egypt = DynamicTimezone(
    'Egypt',
    DynamicTimezoneSpan(
      -1,
      7509000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2185409109,
      dst: false,
    ),
    Int64List.fromList([ -2185409109, -929844000, -923108400, -906170400, -892868400, -875844000, -857790000, -844308000, -825822000, -812685600, -794199600, -779853600, -762663600, -399088800, -386650800, -368330400, -355114800, -336790800, -323654400, -305168400, -292032000, -273632400, -260496000, -242096400, -228960000, -210560400, -197424000, -178938000, -165801600, -147402000, -134265600, -115866000, -102643200, -84330000, -71107200, -52707600, -39484800, -21171600, -7948800, 10364400, 23587200, 41900400, 55123200, 73522800, 86745600, 105058800, 118281600, 136594800, 149817600, 168130800, 181353600, 199753200, 212976000, 231289200, 244512000, 262825200, 276048000, 294361200, 307584000, 325983600, 339206400, 357519600, 370742400, 396399600, 402278400, 426812400, 433814400, 452214000, 465436800, 483750000, 496972800, 515286000, 528508800, 546822000, 560044800, 578444400, 591667200, 610412400, 623203200, 641516400, 654739200, 673052400, 686275200, 704674800, 717897600, 736210800, 749433600, 767746800, 780969600, 799020000, 812322000, 830469600, 843771600, 861919200, 875221200, 893368800, 906670800, 925423200, 938725200, 956872800, 970174800, 988322400, 1001624400, 1019772000, 1033074000, 1051221600, 1064523600, 1083276000, 1096578000, 1114725600, 1128027600, 1146175200, 1158872400, 1177624800, 1189112400, 1209074400, 1219957200, 1240524000, 1250802000, 1272578400, 1281474000, 1284069600, 1285880400, 1400191200, 1403816400, 1406844000, 1411678800, 1682632800 ]),
    Int8List.fromList([ 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3, 2, 3 ]),
    3600000000,

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone eire = DynamicTimezone(
    'Eire',
    DynamicTimezoneSpan(
      -1,
      -1521000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2821649679,
      dst: false,
    ),
    Int64List.fromList([ -2821649679, -1691962479, -1680471279, -1664143200, -1650146400, -1633903200, -1617487200, -1601848800, -1586037600, -1570399200, -1552168800, -1538344800, -1522533600, -1507500000, -1490565600, -1473631200, -1460930400, -1442786400, -1428876000, -1410732000, -1396216800, -1379282400, -1364767200, -1348437600, -1333317600, -1315778400, -1301263200, -1284328800, -1269813600, -1253484000, -1238364000, -1221429600, -1206914400, -1189980000, -1175464800, -1159135200, -1143410400, -1126476000, -1111960800, -1095631200, -1080511200, -1063576800, -1049061600, -1032127200, -1017612000, -1001282400, -986162400, -969228000, -950479200, -942012000, -733356000, -719445600, -699487200, -684972000, -668037600, -654732000, -636588000, -622072800, -605743200, -590623200, -574293600, -558568800, -542239200, -527119200, -512604000, -496274400, -481154400, -464220000, -449704800, -432165600, -417650400, -401320800, -386200800, -369266400, -354751200, -337816800, -323301600, -306972000, -291852000, -276732000, -257983200, -245282400, -226533600, -213228000, -195084000, -182383200, -163634400, -150933600, -132184800, -119484000, -100735200, -88034400, -68680800, -59004000, -37242000, 57722400, 69818400, 89172000, 101268000, 120621600, 132717600, 152071200, 164167200, 183520800, 196221600, 214970400, 227671200, 246420000, 259120800, 278474400, 290570400, 309924000, 322020000, 341373600, 354675600, 372819600, 386125200, 404269200, 417574800, 435718800, 449024400, 467773200, 481078800, 499222800, 512528400, 530672400, 543978000, 562122000, 575427600, 593571600, 606877200, 625626000, 638326800, 657075600, 670381200, 688525200, 701830800, 719974800, 733280400, 751424400, 764730000, 782874000, 796179600, 814323600, 828234000 ]),
    Int32List.fromList([ -1521, 2079, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600 ]),
    1000000,
    [ 'DMT', 'IST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone factory = FixedTimezone(
    'Factory',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      '-00',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone gb = DynamicTimezone(
    'GB',
    DynamicTimezoneSpan(
      -1,
      -75000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325, -1691964000, -1680472800, -1664143200, -1650146400, -1633903200, -1617487200, -1601848800, -1586037600, -1570399200, -1552168800, -1538344800, -1522533600, -1507500000, -1490565600, -1473631200, -1460930400, -1442786400, -1428876000, -1410732000, -1396216800, -1379282400, -1364767200, -1348437600, -1333317600, -1315778400, -1301263200, -1284328800, -1269813600, -1253484000, -1238364000, -1221429600, -1206914400, -1189980000, -1175464800, -1159135200, -1143410400, -1126476000, -1111960800, -1095631200, -1080511200, -1063576800, -1049061600, -1032127200, -1017612000, -1001282400, -986162400, -969228000, -950479200, -942012000, -904518000, -896050800, -875487600, -864601200, -844038000, -832546800, -812588400, -798073200, -781052400, -772066800, -764805600, -748476000, -733356000, -719445600, -717030000, -706748400, -699487200, -687996000, -668037600, -654732000, -636588000, -622072800, -605743200, -590623200, -574293600, -558568800, -542239200, -527119200, -512604000, -496274400, -481154400, -464220000, -449704800, -432165600, -417650400, -401320800, -386200800, -369266400, -354751200, -337816800, -323301600, -306972000, -291852000, -276732000, -257983200, -245282400, -226533600, -213228000, -195084000, -182383200, -163634400, -150933600, -132184800, -119484000, -100735200, -88034400, -68680800, -59004000, -37242000, 57722400, 69818400, 89172000, 101268000, 120621600, 132717600, 152071200, 164167200, 183520800, 196221600, 214970400, 227671200, 246420000, 259120800, 278474400, 290570400, 309924000, 322020000, 341373600, 354675600, 372819600, 386125200, 404269200, 417574800, 435718800, 449024400, 467773200, 481078800, 499222800, 512528400, 530672400, 543978000, 562122000, 575427600, 593571600, 606877200, 625626000, 638326800, 657075600, 670381200, 688525200, 701830800, 719974800, 733280400, 751424400, 764730000, 782874000, 796179600, 814323600, 828234000 ]),
    Int8List.fromList([ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 1, 0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ]),
    3600000000,
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone gbEire = DynamicTimezone(
    'GB-Eire',
    DynamicTimezoneSpan(
      -1,
      -75000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325, -1691964000, -1680472800, -1664143200, -1650146400, -1633903200, -1617487200, -1601848800, -1586037600, -1570399200, -1552168800, -1538344800, -1522533600, -1507500000, -1490565600, -1473631200, -1460930400, -1442786400, -1428876000, -1410732000, -1396216800, -1379282400, -1364767200, -1348437600, -1333317600, -1315778400, -1301263200, -1284328800, -1269813600, -1253484000, -1238364000, -1221429600, -1206914400, -1189980000, -1175464800, -1159135200, -1143410400, -1126476000, -1111960800, -1095631200, -1080511200, -1063576800, -1049061600, -1032127200, -1017612000, -1001282400, -986162400, -969228000, -950479200, -942012000, -904518000, -896050800, -875487600, -864601200, -844038000, -832546800, -812588400, -798073200, -781052400, -772066800, -764805600, -748476000, -733356000, -719445600, -717030000, -706748400, -699487200, -687996000, -668037600, -654732000, -636588000, -622072800, -605743200, -590623200, -574293600, -558568800, -542239200, -527119200, -512604000, -496274400, -481154400, -464220000, -449704800, -432165600, -417650400, -401320800, -386200800, -369266400, -354751200, -337816800, -323301600, -306972000, -291852000, -276732000, -257983200, -245282400, -226533600, -213228000, -195084000, -182383200, -163634400, -150933600, -132184800, -119484000, -100735200, -88034400, -68680800, -59004000, -37242000, 57722400, 69818400, 89172000, 101268000, 120621600, 132717600, 152071200, 164167200, 183520800, 196221600, 214970400, 227671200, 246420000, 259120800, 278474400, 290570400, 309924000, 322020000, 341373600, 354675600, 372819600, 386125200, 404269200, 417574800, 435718800, 449024400, 467773200, 481078800, 499222800, 512528400, 530672400, 543978000, 562122000, 575427600, 593571600, 606877200, 625626000, 638326800, 657075600, 670381200, 688525200, 701830800, 719974800, 733280400, 751424400, 764730000, 782874000, 796179600, 814323600, 828234000 ]),
    Int8List.fromList([ 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 0, 1, 0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ]),
    3600000000,
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone gmt = FixedTimezone(
    'GMT',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone gmtPlus0 = FixedTimezone(
    'GMT+0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone gmtMinus0 = FixedTimezone(
    'GMT-0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone gmt0 = FixedTimezone(
    'GMT0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone greenwich = FixedTimezone(
    'Greenwich',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone hst = FixedTimezone(
    'HST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -36000),
      'HST',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone hongkong = DynamicTimezone(
    'Hongkong',
    DynamicTimezoneSpan(
      -1,
      27402000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2056690800,
      dst: false,
    ),
    Int64List.fromList([ -2056690800, -900910800, -891579600, -884248200, -761209200, -747907200, -728541000, -717049800, -697091400, -683785800, -668061000, -654755400, -636611400, -623305800, -605161800, -591856200, -573712200, -559801800, -541657800, -528352200, -510211800, -498112200, -478762200, -466662600, -446707800, -435213000, -415258200, -403158600, -383808600, -371709000, -352359000, -340259400, -320909400, -308809800, -288855000, -277360200, -257405400, -245910600, -225955800, -213856200, -194506200, -182406600, -163056600, -148537800, -132816600, -117088200, -101367000, -85638600, -69312600, -53584200, -37863000, -22134600, -6413400, 9315000, 25036200, 40764600, 56485800, 72214200, 88540200, 104268600, 119989800, 126041400, 151439400, 167167800, 182889000, 198617400, 214338600, 295385400, 309292200 ]),
    Int16List.fromList([ 480, 540, 510, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480, 540, 480 ]),
    60000000,
    [ 'HKT', 'HKST', 'HKWT', 'JST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT' ],
    [ false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone iceland = DynamicTimezone(
    'Iceland',
    DynamicTimezoneSpan(
      -1,
      -968000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -1830383032,
      dst: false,
    ),
    Int64List.fromList([ -1830383032 ]),
    Int8List.fromList([ 0 ]),
    3600000000,
    [ 'GMT' ],
    [ false ],
  );

  static final Timezone iran = DynamicTimezone(
    'Iran',
    DynamicTimezoneSpan(
      -1,
      12344000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -1704165944,
      dst: false,
    ),
    Int64List.fromList([ -1704165944, -1090466744, 227820600, 246223800, 259617600, 271108800, 283982400, 296598600, 306531000, 322432200, 338499000, 673216200, 685481400, 701209800, 717103800, 732745800, 748639800, 764281800, 780175800, 795817800, 811711800, 827353800, 843247800, 858976200, 874870200, 890512200, 906406200, 922048200, 937942200, 953584200, 969478200, 985206600, 1001100600, 1016742600, 1032636600, 1048278600, 1064172600, 1079814600, 1095708600, 1111437000, 1127331000, 1206045000, 1221939000, 1237667400, 1253561400, 1269203400, 1285097400, 1300739400, 1316633400, 1332275400, 1348169400, 1363897800, 1379791800, 1395433800, 1411327800, 1426969800, 1442863800, 1458505800, 1474399800, 1490128200, 1506022200, 1521664200, 1537558200, 1553200200, 1569094200, 1584736200, 1600630200, 1616358600, 1632252600, 1647894600, 1663788600 ]),
    Int32List.fromList([ 12344, 12600, 16200, 14400, 18000, 14400, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600, 16200, 12600 ]),
    1000000,

    [ false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone israel = DynamicTimezone(
    'Israel',
    DynamicTimezoneSpan(
      -1,
      8454000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2840149254,
      dst: false,
    ),
    Int64List.fromList([ -2840149254, -1641003640, -933638400, -923097600, -919036800, -857347200, -844300800, -825811200, -812678400, -794188800, -779846400, -762652800, -748310400, -731116800, -681955200, -673228800, -667958400, -652320000, -636422400, -622080000, -608947200, -591840000, -572486400, -558576000, -542851200, -527731200, -514425600, -490838400, -482976000, -459388800, -451526400, -428544000, -418262400, -400118400, -387417600, 142380000, 150843600, 167176800, 178664400, 334101600, 337730400, 452642400, 462319200, 482277600, 494370000, 516751200, 526424400, 545436000, 558478800, 576626400, 589323600, 609890400, 620773200, 638316000, 651618000, 669765600, 683672400, 701820000, 715726800, 733701600, 747176400, 765151200, 778021200, 796600800, 810075600, 826840800, 842821200, 858895200, 874184400, 890344800, 905029200, 923011200, 936313200, 955670400, 970783200, 986770800, 1001282400, 1017356400, 1033941600, 1048806000, 1065132000, 1081292400, 1095804000, 1112313600, 1128812400, 1143763200, 1159657200, 1175212800, 1189897200, 1206662400, 1223161200, 1238112000, 1254006000, 1269561600, 1284246000, 1301616000, 1317510000, 1333065600, 1348354800, 1364515200 ]),
    Int32List.fromList([ 8440, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800 ]),
    1000000,
    [ 'JMT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDDT', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone jamaica = DynamicTimezone(
    'Jamaica',
    DynamicTimezoneSpan(
      -1,
      -18430000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2524503170,
      dst: false,
    ),
    Int64List.fromList([ -2524503170, -1827687170, 126687600, 152085600, 162370800, 183535200, 199263600, 215589600, 230713200, 247039200, 262767600, 278488800, 294217200, 309938400, 325666800, 341388000, 357116400, 372837600, 388566000, 404892000, 420015600, 436341600 ]),
    Int32List.fromList([ -18430, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000, -14400, -18000 ]),
    1000000,
    [ 'KMT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone japan = DynamicTimezone(
    'Japan',
    DynamicTimezoneSpan(
      -1,
      33539000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2587712400,
      dst: false,
    ),
    Int64List.fromList([ -2587712400, -683802000, -672310800, -654771600, -640861200, -620298000, -609411600, -588848400, -577962000 ]),
    Int8List.fromList([ 9, 10, 9, 10, 9, 10, 9, 10, 9 ]),
    3600000000,
    [ 'JST', 'JDT', 'JST', 'JDT', 'JST', 'JDT', 'JST', 'JDT', 'JST' ],
    [ false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone kwajalein = DynamicTimezone(
    'Kwajalein',
    DynamicTimezoneSpan(
      -1,
      40160000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2177492960,
      dst: false,
    ),
    Int64List.fromList([ -2177492960, -1041418800, -907408800, -817462800, -7988400, 745934400 ]),
    Int8List.fromList([ 11, 10, 9, 11, -12, 12 ]),
    3600000000,
    [ '+11', '+10', '+09', '+11', '-12', '+12' ],
    [ false, false, false, false, false, false ],
  );

  static final Timezone libya = DynamicTimezone(
    'Libya',
    DynamicTimezoneSpan(
      -1,
      3164000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -1577926364,
      dst: false,
    ),
    Int64List.fromList([ -1577926364, -574902000, -568087200, -512175600, -504928800, -449888400, -441856800, -347158800, 378684000, 386463600, 402271200, 417999600, 433807200, 449622000, 465429600, 481590000, 496965600, 512953200, 528674400, 544230000, 560037600, 575852400, 591660000, 607388400, 623196000, 641775600, 844034400, 860108400, 875916000, 1352505600, 1364515200, 1382659200 ]),
    Int8List.fromList([ 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2 ]),
    3600000000,
    [ 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'EET', 'CET', 'CEST', 'EET', 'CET', 'CEST', 'EET' ],
    [ false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, false, true, false ],
  );

  static final Timezone met = DynamicTimezone(
    'MET',
    DynamicTimezoneSpan(
      -1,
      3600000000,
      'MET',
      TimezoneSpan.range.min.value,
      -1693706400,
      dst: false,
    ),
    Int64List.fromList([ -1693706400, -1680483600, -1663455600, -1650150000, -1632006000, -1618700400, -938905200, -857257200, -844556400, -828226800, -812502000, -796777200, -781052400, -766623600, 228877200, 243997200, 260326800, 276051600, 291776400, 307501200, 323830800, 338950800, 354675600, 370400400, 386125200, 401850000, 417574800, 433299600, 449024400, 465354000, 481078800, 496803600, 512528400, 528253200, 543978000, 559702800, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int8List.fromList([ 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2 ]),
    3600000000,
    [ 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST', 'MET', 'MEST' ],
    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone mst = FixedTimezone(
    'MST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -25200),
      'MST',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone mst7mdt = DynamicTimezone(
    'MST7MDT',
    DynamicTimezoneSpan(
      -1,
      -25200000000,
      'MST',
      TimezoneSpan.range.min.value,
      -1633273200,
      dst: false,
    ),
    Int64List.fromList([ -1633273200, -1615132800, -1601823600, -1583683200, -880210800, -769395600, -765388800, -84380400, -68659200, -52930800, -37209600, -21481200, -5760000, 9968400, 25689600, 41418000, 57744000, 73472400, 89193600, 104922000, 120643200, 126694800, 152092800, 162378000, 183542400, 199270800, 215596800, 230720400, 247046400, 262774800, 278496000, 294224400, 309945600, 325674000, 341395200, 357123600, 372844800, 388573200, 404899200, 420022800, 436348800, 452077200, 467798400, 483526800, 499248000, 514976400, 530697600, 544611600, 562147200, 576061200, 594201600, 607510800, 625651200, 638960400, 657100800, 671014800, 688550400, 702464400, 720000000, 733914000, 752054400, 765363600, 783504000, 796813200, 814953600, 828867600, 846403200, 860317200, 877852800, 891766800, 909302400, 923216400, 941356800, 954666000, 972806400, 986115600, 1004256000, 1018170000, 1035705600, 1049619600, 1067155200, 1081069200, 1099209600, 1112518800, 1130659200, 1143968400, 1162108800, 1173603600 ]),
    Int8List.fromList([ -6, -7, -6, -7, -6, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6 ]),
    3600000000,
    [ 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone nz = DynamicTimezone(
    'NZ',
    DynamicTimezoneSpan(
      -1,
      41944000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -3192435544,
      dst: false,
    ),
    Int64List.fromList([ -3192435544, -1330335000, -1320057000, -1300699800, -1287396000, -1269250200, -1255946400, -1237800600, -1224496800, -1206351000, -1192442400, -1174901400, -1160992800, -1143451800, -1125914400, -1112607000, -1094464800, -1081157400, -1063015200, -1049707800, -1031565600, -1018258200, -1000116000, -986808600, -968061600, -955359000, -936612000, -923304600, -757425600, 152632800, 162309600, 183477600, 194968800, 215532000, 226418400, 246981600, 257868000, 278431200, 289317600, 309880800, 320767200, 341330400, 352216800, 372780000, 384271200, 404834400, 415720800, 436284000, 447170400, 467733600, 478620000, 499183200, 510069600, 530632800, 541519200, 562082400, 573573600, 594136800, 605023200, 623772000, 637682400, 655221600, 669132000, 686671200, 700581600, 718120800, 732636000, 749570400, 764085600, 781020000, 795535200, 812469600, 826984800, 844524000, 858434400, 875973600, 889884000, 907423200, 921938400, 938872800, 953388000, 970322400, 984837600, 1002376800, 1016287200, 1033826400, 1047736800, 1065276000, 1079791200, 1096725600, 1111240800, 1128175200, 1142690400, 1159624800, 1174140000, 1191074400 ]),
    Int16List.fromList([ 690, 750, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 690, 720, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780, 720, 780 ]),
    60000000,
    [ 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone nzChat = DynamicTimezone(
    'NZ-CHAT',
    DynamicTimezoneSpan(
      -1,
      44028000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -3192437628,
      dst: false,
    ),
    Int64List.fromList([ -3192437628, -757426500, 152632800, 162309600, 183477600, 194968800, 215532000, 226418400, 246981600, 257868000, 278431200, 289317600, 309880800, 320767200, 341330400, 352216800, 372780000, 384271200, 404834400, 415720800, 436284000, 447170400, 467733600, 478620000, 499183200, 510069600, 530632800, 541519200, 562082400, 573573600, 594136800, 605023200, 623772000, 637682400, 655221600, 669132000, 686671200, 700581600, 718120800, 732636000, 749570400, 764085600, 781020000, 795535200, 812469600, 826984800, 844524000, 858434400, 875973600, 889884000, 907423200, 921938400, 938872800, 953388000, 970322400, 984837600, 1002376800, 1016287200, 1033826400, 1047736800, 1065276000, 1079791200, 1096725600, 1111240800, 1128175200, 1142690400, 1159624800, 1174140000, 1191074400 ]),
    Int16List.fromList([ 735, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825, 765, 825 ]),
    60000000,

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone navajo = DynamicTimezone(
    'Navajo',
    DynamicTimezoneSpan(
      -1,
      -25196000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600, -1633273200, -1615132800, -1601823600, -1583683200, -1570374000, -1551628800, -1538924400, -1534089600, -880210800, -769395600, -765388800, -147884400, -131558400, -116434800, -100108800, -84380400, -68659200, -52930800, -37209600, -21481200, -5760000, 9968400, 25689600, 41418000, 57744000, 73472400, 89193600, 104922000, 120643200, 126694800, 152092800, 162378000, 183542400, 199270800, 215596800, 230720400, 247046400, 262774800, 278496000, 294224400, 309945600, 325674000, 341395200, 357123600, 372844800, 388573200, 404899200, 420022800, 436348800, 452077200, 467798400, 483526800, 499248000, 514976400, 530697600, 544611600, 562147200, 576061200, 594201600, 607510800, 625651200, 638960400, 657100800, 671014800, 688550400, 702464400, 720000000, 733914000, 752054400, 765363600, 783504000, 796813200, 814953600, 828867600, 846403200, 860317200, 877852800, 891766800, 909302400, 923216400, 941356800, 954666000, 972806400, 986115600, 1004256000, 1018170000, 1035705600, 1049619600, 1067155200, 1081069200, 1099209600, 1112518800, 1130659200, 1143968400, 1162108800, 1173603600 ]),
    Int8List.fromList([ -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6 ]),
    3600000000,
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone prc = DynamicTimezone(
    'PRC',
    DynamicTimezoneSpan(
      -1,
      29143000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2177481943,
      dst: false,
    ),
    Int64List.fromList([ -2177481943, -1600675200, -1585904400, -933667200, -922093200, -908870400, -888829200, -881049600, -767869200, -745833600, -733827600, -716889600, -699613200, -683884800, -670669200, -652348800, -650019600, 515527200, 527014800, 545162400, 558464400, 577216800, 589914000, 608666400, 621968400, 640116000, 653418000, 671565600, 684867600 ]),
    Int8List.fromList([ 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone pst8pdt = DynamicTimezone(
    'PST8PDT',
    DynamicTimezoneSpan(
      -1,
      -28800000000,
      'PST',
      TimezoneSpan.range.min.value,
      -1633269600,
      dst: false,
    ),
    Int64List.fromList([ -1633269600, -1615129200, -1601820000, -1583679600, -880207200, -769395600, -765385200, -84376800, -68655600, -52927200, -37206000, -21477600, -5756400, 9972000, 25693200, 41421600, 57747600, 73476000, 89197200, 104925600, 120646800, 126698400, 152096400, 162381600, 183546000, 199274400, 215600400, 230724000, 247050000, 262778400, 278499600, 294228000, 309949200, 325677600, 341398800, 357127200, 372848400, 388576800, 404902800, 420026400, 436352400, 452080800, 467802000, 483530400, 499251600, 514980000, 530701200, 544615200, 562150800, 576064800, 594205200, 607514400, 625654800, 638964000, 657104400, 671018400, 688554000, 702468000, 720003600, 733917600, 752058000, 765367200, 783507600, 796816800, 814957200, 828871200, 846406800, 860320800, 877856400, 891770400, 909306000, 923220000, 941360400, 954669600, 972810000, 986119200, 1004259600, 1018173600, 1035709200, 1049623200, 1067158800, 1081072800, 1099213200, 1112522400, 1130662800, 1143972000, 1162112400, 1173607200 ]),
    Int8List.fromList([ -7, -8, -7, -8, -7, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7 ]),
    3600000000,
    [ 'PDT', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone poland = DynamicTimezone(
    'Poland',
    DynamicTimezoneSpan(
      -1,
      5040000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2840145840,
      dst: false,
    ),
    Int64List.fromList([ -2840145840, -1717032240, -1693706400, -1680483600, -1663455600, -1650150000, -1632006000, -1618700400, -1600473600, -1587168000, -1501725600, -931734000, -857257200, -844556400, -828226800, -812502000, -796608000, -778726800, -762660000, -748486800, -733273200, -715215600, -701910000, -684975600, -670460400, -654130800, -639010800, -397094400, -386812800, -371088000, -355363200, -334195200, -323308800, -307584000, -291859200, -271296000, -260409600, -239846400, -228960000, -208396800, -197510400, -176342400, -166060800, 228873600, 243993600, 260323200, 276048000, 291772800, 307497600, 323827200, 338947200, 354672000, 370396800, 386121600, 401846400, 417571200, 433296000, 449020800, 465350400, 481075200, 496800000, 512524800, 528249600, 543974400, 559699200, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int16List.fromList([ 84, 60, 120, 60, 120, 60, 120, 120, 180, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120, 60, 120 ]),
    60000000,
    [ 'WMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'EET', 'EEST', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST' ],
    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone portugal = DynamicTimezone(
    'Portugal',
    DynamicTimezoneSpan(
      -1,
      -2205000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2713908195,
      dst: false,
    ),
    Int64List.fromList([ -2713908195, -1830384000, -1689555600, -1677801600, -1667437200, -1647738000, -1635814800, -1616202000, -1604365200, -1584666000, -1572742800, -1553043600, -1541206800, -1521507600, -1442451600, -1426813200, -1379293200, -1364778000, -1348448400, -1333328400, -1316394000, -1301274000, -1284339600, -1269824400, -1221440400, -1206925200, -1191200400, -1175475600, -1127696400, -1111971600, -1096851600, -1080522000, -1063587600, -1049072400, -1033347600, -1017622800, -1002502800, -986173200, -969238800, -950490000, -942022800, -922669200, -906944400, -891133200, -877309200, -873684000, -864007200, -857955600, -845859600, -842839200, -831348000, -825901200, -814410000, -810784800, -799898400, -794451600, -782960400, -779335200, -768448800, -763002000, -749091600, -733366800, -717631200, -701906400, -686181600, -670456800, -654732000, -639007200, -623282400, -607557600, -591832800, -575503200, -559778400, -544053600, -528328800, -512604000, -496879200, -481154400, -465429600, -449704800, -433980000, -417650400, -401925600, -386200800, -370476000, -354751200, -339026400, -323301600, -307576800, -291852000, -276127200, -260402400, -244677600, -228348000, -212623200, -196898400, -181173600, -165448800, -149724000, -133999200, -118274400, 212544000, 228268800, 243993600, 260323200, 276048000, 291772800, 307501200, 323222400, 338950800, 354675600, 370400400, 386125200, 401850000, 417578400, 433299600, 449024400, 465354000, 481078800, 496803600, 512528400, 528253200, 543978000, 559702800, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int32List.fromList([ -2205, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 7200, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 0, 3600, 3600, 7200, 3600, 7200, 3600, 7200, 3600, 3600 ]),
    1000000,
    [ 'LMT', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WEMT', 'WEST', 'WET', 'WEST', 'WEMT', 'WEST', 'WET', 'WEST', 'WEMT', 'WEST', 'WET', 'WEST', 'WEMT', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'CET', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'WEST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone roc = DynamicTimezone(
    'ROC',
    DynamicTimezoneSpan(
      -1,
      29160000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2335248360,
      dst: false,
    ),
    Int64List.fromList([ -2335248360, -1017820800, -766224000, -745833600, -733827600, -716889600, -699613200, -683884800, -670669200, -652348800, -639133200, -620812800, -607597200, -589276800, -576061200, -562924800, -541760400, -528710400, -510224400, -497174400, -478688400, -465638400, -449830800, -434016000, -418208400, -402480000, -386672400, -370944000, -355136400, -339408000, -323600400, -302515200, -291978000, -270979200, -260442000, 133977600, 149785200, 165513600, 181321200, 299606400, 307551600 ]),
    Int8List.fromList([ 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8, 9, 8 ]),
    3600000000,
    [ 'CST', 'JST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone rok = DynamicTimezone(
    'ROK',
    DynamicTimezoneSpan(
      -1,
      30472000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -1948782472,
      dst: false,
    ),
    Int64List.fromList([ -1948782472, -1830414600, -767350800, -681210000, -672228000, -654771600, -640864800, -623408400, -609415200, -588848400, -577965600, -498128400, -462702600, -451733400, -429784200, -418296600, -399544200, -387451800, -368094600, -356002200, -336645000, -324552600, -305195400, -293103000, -264933000, 547578000, 560883600, 579027600, 592333200 ]),
    Int16List.fromList([ 510, 540, 540, 600, 540, 600, 540, 600, 540, 600, 540, 510, 570, 510, 570, 510, 570, 510, 570, 510, 570, 510, 570, 510, 540, 600, 540, 600, 540 ]),
    60000000,
    [ 'KST', 'JST', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KST', 'KDT', 'KST', 'KDT', 'KST' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false ],
  );

  static final Timezone singapore = DynamicTimezone(
    'Singapore',
    DynamicTimezoneSpan(
      -1,
      24925000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2177477725,
      dst: false,
    ),
    Int64List.fromList([ -2177477725, -2038200925, -1167634800, -1073028000, -894180000, -879665400, -767005200, 378662400 ]),
    Int32List.fromList([ 24925, 25200, 26400, 26400, 27000, 32400, 27000, 28800 ]),
    1000000,
    [ 'SMT', '+07', '+0720', '+0720', '+0730', '+09', '+0730', '+08' ],
    [ false, false, true, false, false, false, false, false ],
  );

  static final Timezone turkey = DynamicTimezone(
    'Turkey',
    DynamicTimezoneSpan(
      -1,
      6952000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2840147752,
      dst: false,
    ),
    Int64List.fromList([ -2840147752, -1869875816, -1693706400, -1680490800, -1570413600, -1552186800, -1538359200, -1522551600, -1507514400, -1490583600, -1440208800, -1428030000, -1409709600, -1396494000, -931053600, -922676400, -917834400, -892436400, -875844000, -764737200, -744343200, -733806000, -716436000, -701924400, -684986400, -670474800, -654141600, -639025200, -622087200, -606970800, -590032800, -575521200, -235620000, -194842800, -177732000, -165726000, 107910000, 121215600, 133920000, 152665200, 164678400, 184114800, 196214400, 215564400, 228873600, 245804400, 260323200, 267915600, 428454000, 433893600, 468111600, 482799600, 496710000, 512521200, 528246000, 543970800, 559695600, 575420400, 591145200, 606870000, 622594800, 638319600, 654649200, 670374000, 686098800, 701823600, 717548400, 733273200, 748998000, 764118000, 780447600, 796172400, 811897200, 828226800, 846370800, 859676400, 877820400, 891126000, 909270000, 922575600, 941324400, 954025200, 972774000, 985474800, 1004223600, 1017529200, 1035673200, 1048978800, 1067122800, 1080428400, 1099177200, 1111878000, 1130626800, 1143327600, 1162076400, 1174784400, 1193533200, 1206838800, 1224982800, 1238288400, 1256432400, 1269738000, 1288486800, 1301274000, 1319936400, 1332637200, 1351386000, 1364691600, 1382835600, 1396227600, 1414285200, 1427590800, 1446944400, 1459040400, 1473195600 ]),
    Int32List.fromList([ 7016, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 10800, 14400, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 7200, 10800, 10800 ]),
    1000000,
    [ 'IMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03', '+04', '+03', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone uct = FixedTimezone(
    'UCT',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone utc = FixedTimezone(
    'UTC',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone universal = FixedTimezone(
    'Universal',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

  static final Timezone wSu = DynamicTimezone(
    'W-SU',
    DynamicTimezoneSpan(
      -1,
      9017000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2840149817,
      dst: false,
    ),
    Int64List.fromList([ -2840149817, -1688265017, -1656819079, -1641353479, -1627965079, -1618716679, -1596429079, -1593820800, -1589860800, -1542427200, -1539493200, -1525323600, -1522728000, -1491188400, -1247536800, 354920400, 370728000, 386456400, 402264000, 417992400, 433800000, 449614800, 465346800, 481071600, 496796400, 512521200, 528246000, 543970800, 559695600, 575420400, 591145200, 606870000, 622594800, 638319600, 654649200, 670374000, 686102400, 695779200, 701823600, 717548400, 733273200, 748998000, 764722800, 780447600, 796172400, 811897200, 828226800, 846370800, 859676400, 877820400, 891126000, 909270000, 922575600, 941324400, 954025200, 972774000, 985474800, 1004223600, 1017529200, 1035673200, 1048978800, 1067122800, 1080428400, 1099177200, 1111878000, 1130626800, 1143327600, 1162076400, 1174777200, 1193526000, 1206831600, 1224975600, 1238281200, 1256425200, 1269730800, 1288479600, 1301180400, 1414274400 ]),
    Int32List.fromList([ 9017, 9079, 12679, 9079, 16279, 12679, 16279, 14400, 10800, 14400, 18000, 14400, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 10800, 7200, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800, 14400, 10800 ]),
    1000000,
    [ 'MMT', 'MMT', 'MST', 'MMT', 'MDST', 'MST', 'MDST', 'MSD', 'MSK', 'MSD', '+05', 'MSD', 'MSK', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'MSK' ],
    [ false, false, true, false, true, true, true, true, false, true, true, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone wet = DynamicTimezone(
    'WET',
    DynamicTimezoneSpan(
      -1,
      0,
      'WET',
      TimezoneSpan.range.min.value,
      228877200,
      dst: false,
    ),
    Int64List.fromList([ 228877200, 243997200, 260326800, 276051600, 291776400, 307501200, 323830800, 338950800, 354675600, 370400400, 386125200, 401850000, 417574800, 433299600, 449024400, 465354000, 481078800, 496803600, 512528400, 528253200, 543978000, 559702800, 575427600, 591152400, 606877200, 622602000, 638326800, 654656400, 670381200, 686106000, 701830800, 717555600, 733280400, 749005200, 764730000, 780454800, 796179600, 811904400, 828234000 ]),
    Int8List.fromList([ 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 1 ]),
    3600000000,
    [ 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST' ],
    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone zulu = FixedTimezone(
    'Zulu',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min.value,
      TimezoneSpan.range.max.value,
      dst: false,
    ),
  );

}


