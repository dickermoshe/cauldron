// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Root on Never {
  static final Timezone cet = DynamicTimezone(
    'CET',
    DynamicTimezoneSpan(
      -1,
      3600000,
      'CET',
      TimezoneSpan.range.min,
      -1693706400,
      dst: false,
    ),
    Int64List.fromList([ -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -766623600000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone cst6cdt = DynamicTimezone(
    'CST6CDT',
    DynamicTimezoneSpan(
      -1,
      -21600000,
      'CST',
      TimezoneSpan.range.min,
      -1633276800,
      dst: false,
    ),
    Int64List.fromList([ -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone cuba = DynamicTimezone(
    'Cuba',
    DynamicTimezoneSpan(
      -1,
      -19768000,
      'LMT',
      TimezoneSpan.range.min,
      -2524501832,
      dst: false,
    ),
    Int64List.fromList([ -2524501832000, -1402813824000, -1311534000000, -1300996800000, -933534000000, -925675200000, -902084400000, -893620800000, -870030000000, -862171200000, -775681200000, -767822400000, -744231600000, -736372800000, -144702000000, -134251200000, -113425200000, -102542400000, -86295600000, -72907200000, -54154800000, -41457600000, -21495600000, -5774400000, 9954000000, 25675200000, 41403600000, 57729600000, 73458000000, 87364800000, 104907600000, 118900800000, 136357200000, 150436800000, 167806800000, 183528000000, 199256400000, 215582400000, 230706000000, 247032000000, 263365200000, 276667200000, 290581200000, 308721600000, 322030800000, 340171200000, 358318800000, 371620800000, 389768400000, 403070400000, 421218000000, 434520000000, 452667600000, 466574400000, 484117200000, 498024000000, 511333200000, 529473600000, 542782800000, 560923200000, 574837200000, 592372800000, 606286800000, 623822400000, 638946000000, 655876800000, 671000400000, 687330000000, 702450000000, 718779600000, 733899600000, 750229200000, 765349200000, 781678800000, 796798800000, 813128400000, 828853200000, 844578000000, 860302800000, 876632400000, 891147600000, 909291600000, 922597200000, 941346000000, 954651600000, 972795600000, 986101200000, 1004245200000, 1018155600000, 1035694800000, 1049605200000, 1067144400000, 1080450000000, 1162098000000, 1173589200000, 1193547600000, 1205643600000, 1224997200000, 1236488400000, 1256446800000, 1268542800000, 1288501200000, 1300597200000, 1321160400000, 1333256400000, 1352005200000, 1362891600000, 1383454800000, 1394341200000, 1414904400000, 1425790800000, 1446354000000, 1457845200000, 1478408400000, 1489294800000, 1509858000000, 1520744400000, 1541307600000, 1552194000000, 1572757200000, 1583643600000, 1604206800000, 1615698000000, 1636261200000, 1647147600000, 1667710800000, 1678597200000, 1699160400000, 1710046800000, 1730610000000, 1741496400000, 1762059600000, 1772946000000, 1793509200000, 1805000400000, 1825563600000, 1836450000000, 1857013200000, 1867899600000, 1888462800000, 1899349200000, 1919912400000, 1930798800000, 1951362000000, 1962853200000, 1983416400000, 1994302800000, 2014866000000, 2025752400000, 2046315600000, 2057202000000, 2077765200000, 2088651600000, 2109214800000, 2120101200000, 2140664400000 ]),
    Int32List.fromList([ -19776000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eet = DynamicTimezone(
    'EET',
    DynamicTimezoneSpan(
      -1,
      7200000,
      'EET',
      TimezoneSpan.range.min,
      228877200,
      dst: false,
    ),
    Int64List.fromList([ 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone est = FixedTimezone(
    'EST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -18000),
      'EST',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone est5edt = DynamicTimezone(
    'EST5EDT',
    DynamicTimezoneSpan(
      -1,
      -18000000,
      'EST',
      TimezoneSpan.range.min,
      -1633280400,
      dst: false,
    ),
    Int64List.fromList([ -1633280400000, -1615140000000, -1601830800000, -1583690400000, -880218000000, -769395600000, -765396000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 126687600000, 152085600000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone egypt = DynamicTimezone(
    'Egypt',
    DynamicTimezoneSpan(
      -1,
      7509000,
      'LMT',
      TimezoneSpan.range.min,
      -2185409109,
      dst: false,
    ),
    Int64List.fromList([ -2185409109000, -929844000000, -923108400000, -906170400000, -892868400000, -875844000000, -857790000000, -844308000000, -825822000000, -812685600000, -794199600000, -779853600000, -762663600000, -399088800000, -386650800000, -368330400000, -355114800000, -336790800000, -323654400000, -305168400000, -292032000000, -273632400000, -260496000000, -242096400000, -228960000000, -210560400000, -197424000000, -178938000000, -165801600000, -147402000000, -134265600000, -115866000000, -102643200000, -84330000000, -71107200000, -52707600000, -39484800000, -21171600000, -7948800000, 10364400000, 23587200000, 41900400000, 55123200000, 73522800000, 86745600000, 105058800000, 118281600000, 136594800000, 149817600000, 168130800000, 181353600000, 199753200000, 212976000000, 231289200000, 244512000000, 262825200000, 276048000000, 294361200000, 307584000000, 325983600000, 339206400000, 357519600000, 370742400000, 396399600000, 402278400000, 426812400000, 433814400000, 452214000000, 465436800000, 483750000000, 496972800000, 515286000000, 528508800000, 546822000000, 560044800000, 578444400000, 591667200000, 610412400000, 623203200000, 641516400000, 654739200000, 673052400000, 686275200000, 704674800000, 717897600000, 736210800000, 749433600000, 767746800000, 780969600000, 799020000000, 812322000000, 830469600000, 843771600000, 861919200000, 875221200000, 893368800000, 906670800000, 925423200000, 938725200000, 956872800000, 970174800000, 988322400000, 1001624400000, 1019772000000, 1033074000000, 1051221600000, 1064523600000, 1083276000000, 1096578000000, 1114725600000, 1128027600000, 1146175200000, 1158872400000, 1177624800000, 1189112400000, 1209074400000, 1219957200000, 1240524000000, 1250802000000, 1272578400000, 1281474000000, 1284069600000, 1285880400000, 1400191200000, 1403816400000, 1406844000000, 1411678800000, 1682632800000, 1698354000000, 1714082400000, 1730408400000, 1745532000000, 1761858000000, 1776981600000, 1793307600000, 1809036000000, 1824757200000, 1840485600000, 1856206800000, 1871935200000, 1887656400000, 1903384800000, 1919710800000, 1934834400000, 1951160400000, 1966888800000, 1982610000000, 1998338400000, 2014059600000, 2029788000000, 2045509200000, 2061237600000, 2076958800000, 2092687200000, 2109013200000, 2124136800000, 2140462800000, 2156191200000, 2171912400000, 2187640800000, 2203362000000, 2219090400000, 2234811600000, 2250540000000, 2266866000000, 2281989600000, 2298315600000, 2313439200000, 2329765200000, 2345493600000, 2361214800000, 2376943200000, 2392664400000, 2408392800000, 2424114000000, 2439842400000, 2456168400000, 2471292000000, 2487618000000, 2503346400000, 2519067600000, 2534796000000, 2550517200000, 2566245600000, 2581966800000, 2597695200000, 2614021200000, 2629144800000, 2645470800000, 2660594400000, 2676920400000, 2692648800000, 2708370000000, 2724098400000, 2739819600000, 2755548000000, 2771269200000, 2786997600000, 2803323600000, 2818447200000, 2834773200000, 2850501600000, 2866222800000, 2881951200000, 2897672400000, 2913400800000, 2929122000000, 2944850400000, 2960571600000, 2976300000000, 2992626000000, 3007749600000, 3024075600000, 3039804000000, 3055525200000, 3071253600000, 3086974800000, 3102703200000, 3118424400000, 3134152800000, 3150478800000, 3165602400000, 3181928400000, 3197052000000, 3213378000000, 3229106400000, 3244827600000, 3260556000000, 3276277200000, 3292005600000, 3307726800000, 3323455200000, 3339781200000, 3354904800000, 3371230800000, 3386959200000, 3402680400000, 3418408800000, 3434130000000, 3449858400000, 3465579600000, 3481308000000, 3497634000000, 3512757600000, 3529083600000, 3544207200000, 3560533200000, 3576261600000, 3591982800000, 3607711200000, 3623432400000, 3639160800000, 3654882000000, 3670610400000, 3686936400000, 3702060000000, 3718386000000, 3734114400000, 3749835600000, 3765564000000, 3781285200000, 3797013600000, 3812734800000, 3828463200000, 3844184400000, 3859912800000, 3876238800000, 3891362400000, 3907688400000, 3923416800000, 3939138000000, 3954866400000, 3970587600000, 3986316000000, 4002037200000, 4017765600000, 4034091600000, 4049215200000, 4065541200000, 4080664800000, 4096990800000, 4112719200000, 4128440400000, 4144168800000, 4159890000000, 4175618400000, 4191339600000, 4207068000000, 4222789200000, 4238517600000, 4254843600000, 4269967200000, 4286293200000, 4302021600000, 4317742800000, 4333471200000, 4349192400000, 4364920800000, 4380642000000, 4396370400000, 4412696400000, 4427820000000, 4444146000000, 4459269600000, 4475595600000, 4491324000000, 4507045200000, 4522773600000, 4538494800000, 4554223200000, 4569944400000, 4585672800000, 4601998800000, 4617122400000, 4633448400000, 4649176800000, 4664898000000, 4680626400000, 4696347600000, 4712076000000, 4727797200000, 4743525600000, 4759851600000, 4774975200000, 4791301200000, 4806424800000, 4822750800000, 4838479200000, 4854200400000, 4869928800000, 4885650000000, 4901378400000, 4917099600000, 4932828000000, 4949154000000, 4964277600000, 4980603600000, 4996332000000, 5012053200000, 5027781600000, 5043502800000, 5059231200000, 5074952400000, 5090680800000, 5106402000000, 5122130400000, 5138456400000, 5153580000000, 5169906000000, 5185634400000, 5201355600000, 5217084000000, 5232805200000, 5248533600000, 5264254800000, 5279983200000, 5296309200000, 5311432800000, 5327758800000, 5342882400000, 5359208400000, 5374936800000, 5390658000000, 5406386400000, 5422107600000, 5437836000000, 5453557200000, 5469285600000, 5485611600000, 5500735200000, 5517061200000, 5532789600000, 5548510800000, 5564239200000, 5579960400000, 5595688800000, 5611410000000, 5627138400000, 5643464400000, 5658588000000, 5674914000000, 5690037600000, 5706363600000, 5722092000000, 5737813200000, 5753541600000, 5769262800000, 5784991200000, 5800712400000, 5816440800000, 5832766800000, 5847890400000, 5864216400000, 5879944800000, 5895666000000, 5911394400000, 5927115600000, 5942844000000, 5958565200000, 5974293600000, 5990014800000, 6005743200000, 6022069200000, 6037192800000, 6053518800000, 6069247200000, 6084968400000, 6100696800000, 6116418000000, 6132146400000, 6147867600000, 6163596000000, 6179922000000, 6195045600000, 6211371600000, 6226495200000, 6242821200000, 6258549600000, 6274270800000, 6289999200000, 6305720400000, 6321448800000, 6337170000000, 6352898400000, 6369224400000, 6384348000000, 6400674000000, 6416402400000, 6432123600000, 6447852000000, 6463573200000, 6479301600000, 6495022800000, 6510751200000, 6527077200000, 6542200800000, 6558526800000, 6573650400000, 6589976400000, 6605704800000, 6621426000000, 6637154400000, 6652875600000, 6668604000000, 6684325200000, 6700053600000, 6716379600000, 6731503200000, 6747829200000, 6763557600000, 6779278800000, 6795007200000, 6810728400000, 6826456800000, 6842178000000, 6857906400000, 6873627600000, 6889356000000, 6905682000000, 6920805600000, 6937131600000, 6952860000000, 6968581200000, 6984309600000, 7000030800000, 7015759200000, 7031480400000, 7047208800000, 7063534800000, 7078658400000, 7094984400000, 7110108000000, 7126434000000, 7142162400000, 7157883600000, 7173612000000, 7189333200000, 7205061600000, 7220782800000, 7236511200000, 7252837200000, 7267960800000, 7284286800000, 7299410400000, 7315736400000, 7331464800000, 7347186000000, 7362914400000, 7378635600000, 7394364000000, 7410085200000, 7425813600000, 7442139600000, 7457263200000, 7473589200000, 7488712800000, 7505038800000, 7520767200000, 7536488400000, 7552216800000, 7567938000000, 7583666400000, 7599387600000, 7615116000000, 7631442000000, 7646565600000, 7662891600000, 7678620000000, 7694341200000, 7710069600000, 7725790800000, 7741519200000, 7757240400000, 7772968800000, 7789294800000, 7804418400000, 7820744400000, 7835868000000, 7852194000000, 7867922400000, 7883643600000, 7899372000000, 7915093200000, 7930821600000, 7946542800000, 7962271200000, 7978597200000, 7993720800000, 8010046800000, 8025775200000, 8041496400000, 8057224800000, 8072946000000, 8088674400000, 8104395600000, 8120124000000, 8135845200000, 8151573600000, 8167899600000, 8183023200000, 8199349200000, 8215077600000, 8230798800000, 8246527200000, 8262248400000, 8277976800000, 8293698000000, 8309426400000, 8325752400000, 8340876000000, 8357202000000, 8372325600000, 8388651600000, 8404380000000, 8420101200000, 8435829600000, 8451550800000, 8467279200000, 8483000400000, 8498728800000, 8515054800000, 8530178400000, 8546504400000, 8562232800000, 8577954000000, 8593682400000, 8609403600000, 8625132000000, 8640853200000, 8656581600000, 8672907600000, 8688031200000, 8704357200000, 8719480800000, 8735806800000, 8751535200000, 8767256400000, 8782984800000, 8798706000000, 8814434400000, 8830155600000, 8845884000000, 8862210000000, 8877333600000, 8893659600000, 8909388000000, 8925109200000, 8940837600000, 8956558800000, 8972287200000, 8988008400000, 9003736800000, 9019458000000, 9035186400000, 9051512400000, 9066636000000, 9082962000000, 9098690400000, 9114411600000, 9130140000000, 9145861200000, 9161589600000, 9177310800000, 9193039200000, 9209365200000, 9224488800000, 9240814800000, 9255938400000, 9272264400000, 9287992800000, 9303714000000, 9319442400000, 9335163600000, 9350892000000, 9366613200000, 9382341600000, 9398667600000, 9413791200000, 9430117200000, 9445845600000, 9461566800000, 9477295200000, 9493016400000, 9508744800000, 9524466000000, 9540194400000, 9556520400000, 9571644000000, 9587970000000, 9603093600000, 9619419600000, 9635148000000, 9650869200000, 9666597600000, 9682318800000, 9698047200000, 9713768400000, 9729496800000, 9745822800000, 9760946400000, 9777272400000, 9793000800000, 9808722000000, 9824450400000, 9840171600000, 9855900000000, 9871621200000, 9887349600000, 9903070800000, 9918799200000, 9935125200000, 9950248800000, 9966574800000, 9982303200000, 9998024400000, 10013752800000, 10029474000000, 10045202400000, 10060923600000, 10076652000000, 10092978000000, 10108101600000, 10124427600000, 10139551200000, 10155877200000, 10171605600000, 10187326800000, 10203055200000, 10218776400000, 10234504800000, 10250226000000, 10265954400000, 10282280400000, 10297404000000, 10313730000000, 10329458400000, 10345179600000, 10360908000000, 10376629200000, 10392357600000, 10408078800000, 10423807200000, 10439528400000, 10455256800000, 10471582800000, 10486706400000, 10503032400000, 10518156000000, 10534482000000, 10550210400000, 10565931600000, 10581660000000, 10597381200000, 10613109600000, 10628830800000, 10644559200000, 10660885200000, 10676008800000, 10692334800000, 10708063200000, 10723784400000, 10739512800000, 10755234000000, 10770962400000, 10786683600000, 10802412000000, 10818738000000, 10833861600000, 10850187600000, 10865311200000, 10881637200000, 10897365600000, 10913086800000, 10928815200000, 10944536400000, 10960264800000, 10975986000000, 10991714400000, 11008040400000, 11023164000000, 11039490000000, 11055218400000, 11070939600000, 11086668000000, 11102389200000, 11118117600000, 11133838800000, 11149567200000, 11165288400000, 11181016800000, 11197342800000, 11212466400000, 11228792400000, 11244520800000, 11260242000000, 11275970400000, 11291691600000, 11307420000000, 11323141200000, 11338869600000, 11355195600000, 11370319200000, 11386645200000, 11401768800000, 11418094800000, 11433823200000, 11449544400000, 11465272800000, 11480994000000, 11496722400000, 11512443600000, 11528172000000, 11544498000000, 11559621600000, 11575947600000, 11591676000000, 11607397200000, 11623125600000, 11638846800000, 11654575200000, 11670296400000, 11686024800000, 11702350800000, 11717474400000, 11733800400000, 11748924000000, 11765250000000, 11780978400000, 11796699600000, 11812428000000, 11828149200000, 11843877600000, 11859598800000, 11875327200000, 11891653200000, 11906776800000, 11923102800000, 11938831200000, 11954552400000, 11970280800000, 11986002000000, 12001730400000, 12017451600000, 12033180000000, 12048901200000, 12064629600000, 12080955600000, 12096079200000, 12112405200000, 12128133600000, 12143854800000, 12159583200000, 12175304400000, 12191032800000, 12206754000000, 12222482400000, 12238808400000, 12253932000000, 12270258000000, 12285381600000, 12301707600000, 12317436000000, 12333157200000, 12348885600000, 12364606800000, 12380335200000, 12396056400000, 12411784800000, 12428110800000, 12443234400000, 12459560400000, 12475288800000, 12491010000000, 12506738400000, 12522459600000, 12538188000000, 12553909200000, 12569637600000, 12585963600000, 12601087200000, 12617413200000, 12632536800000, 12648862800000, 12664591200000, 12680312400000, 12696040800000, 12711762000000, 12727490400000, 12743211600000, 12758940000000, 12775266000000, 12790389600000, 12806715600000, 12822444000000, 12838165200000, 12853893600000, 12869614800000, 12885343200000, 12901064400000, 12916792800000, 12932514000000, 12948242400000, 12964568400000, 12979692000000, 12996018000000, 13011746400000, 13027467600000, 13043196000000, 13058917200000, 13074645600000, 13090366800000, 13106095200000, 13122421200000, 13137544800000, 13153870800000, 13168994400000, 13185320400000, 13201048800000, 13216770000000, 13232498400000, 13248219600000, 13263948000000, 13279669200000, 13295397600000, 13311723600000, 13326847200000, 13343173200000, 13358901600000, 13374622800000, 13390351200000, 13406072400000, 13421800800000, 13437522000000, 13453250400000, 13469576400000, 13484700000000, 13501026000000, 13516149600000, 13532475600000, 13548204000000, 13563925200000, 13579653600000, 13595374800000, 13611103200000, 13626824400000, 13642552800000, 13658878800000, 13674002400000, 13690328400000, 13706056800000, 13721778000000, 13737506400000, 13753227600000, 13768956000000, 13784677200000, 13800405600000, 13816126800000, 13831855200000, 13848181200000, 13863304800000, 13879630800000, 13895359200000, 13911080400000, 13926808800000, 13942530000000, 13958258400000, 13973979600000, 13989708000000, 14006034000000, 14021157600000, 14037483600000, 14052607200000, 14068933200000, 14084661600000, 14100382800000, 14116111200000, 14131832400000, 14147560800000, 14163282000000, 14179010400000, 14195336400000, 14210460000000, 14226786000000, 14242514400000, 14258235600000, 14273964000000, 14289685200000, 14305413600000, 14321134800000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eire = DynamicTimezone(
    'Eire',
    DynamicTimezoneSpan(
      -1,
      -1521000,
      'LMT',
      TimezoneSpan.range.min,
      -2821649679,
      dst: false,
    ),
    Int64List.fromList([ -2821649679000, -1691962479000, -1680471279000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1517011200000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -733356000000, -719445600000, -699487200000, -684972000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ -1521000, 2079000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0 ]),
    [ 'DMT', 'IST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone factory = FixedTimezone(
    'Factory',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      '-00',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone gb = DynamicTimezone(
    'GB',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone gbEire = DynamicTimezone(
    'GB-Eire',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0 ]),
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone gmt = FixedTimezone(
    'GMT',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone gmtPlus0 = FixedTimezone(
    'GMT+0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone gmtMinus0 = FixedTimezone(
    'GMT-0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone gmt0 = FixedTimezone(
    'GMT0',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone greenwich = FixedTimezone(
    'Greenwich',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'GMT',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone hst = FixedTimezone(
    'HST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -36000),
      'HST',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone hongkong = DynamicTimezone(
    'Hongkong',
    DynamicTimezoneSpan(
      -1,
      27402000,
      'LMT',
      TimezoneSpan.range.min,
      -2056690800,
      dst: false,
    ),
    Int64List.fromList([ -2056690800000, -900910800000, -891579600000, -884248200000, -761209200000, -747907200000, -728541000000, -717049800000, -697091400000, -683785800000, -668061000000, -654755400000, -636611400000, -623305800000, -605161800000, -591856200000, -573712200000, -559801800000, -541657800000, -528352200000, -510211800000, -498112200000, -478762200000, -466662600000, -446707800000, -435213000000, -415258200000, -403158600000, -383808600000, -371709000000, -352359000000, -340259400000, -320909400000, -308809800000, -288855000000, -277360200000, -257405400000, -245910600000, -225955800000, -213856200000, -194506200000, -182406600000, -163056600000, -148537800000, -132816600000, -117088200000, -101367000000, -85638600000, -69312600000, -53584200000, -37863000000, -22134600000, -6413400000, 9315000000, 25036200000, 40764600000, 56485800000, 72214200000, 88540200000, 104268600000, 119989800000, 126041400000, 151439400000, 167167800000, 182889000000, 198617400000, 214338600000, 295385400000, 309292200000 ]),
    Int32List.fromList
    [ 'HKT', 'HKST', 'HKWT', 'JST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT', 'HKST', 'HKT' ],
    [ false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone iceland = DynamicTimezone(
    'Iceland',
    DynamicTimezoneSpan(
      -1,
      -968000,
      'LMT',
      TimezoneSpan.range.min,
      -1830383032,
      dst: false,
    ),
    Int64List.fromList([ -1830383032000 ]),
    Int32List.fromList([ 0 ]),
    [ 'GMT' ],
    [ false ],
  );

  static final Timezone iran = DynamicTimezone(
    'Iran',
    DynamicTimezoneSpan(
      -1,
      12344000,
      'LMT',
      TimezoneSpan.range.min,
      -1704165944,
      dst: false,
    ),
    Int64List.fromList([ -1704165944000, -1090466744000, 227820600000, 246223800000, 259617600000, 271108800000, 283982400000, 296598600000, 306531000000, 322432200000, 338499000000, 673216200000, 685481400000, 701209800000, 717103800000, 732745800000, 748639800000, 764281800000, 780175800000, 795817800000, 811711800000, 827353800000, 843247800000, 858976200000, 874870200000, 890512200000, 906406200000, 922048200000, 937942200000, 953584200000, 969478200000, 985206600000, 1001100600000, 1016742600000, 1032636600000, 1048278600000, 1064172600000, 1079814600000, 1095708600000, 1111437000000, 1127331000000, 1206045000000, 1221939000000, 1237667400000, 1253561400000, 1269203400000, 1285097400000, 1300739400000, 1316633400000, 1332275400000, 1348169400000, 1363897800000, 1379791800000, 1395433800000, 1411327800000, 1426969800000, 1442863800000, 1458505800000, 1474399800000, 1490128200000, 1506022200000, 1521664200000, 1537558200000, 1553200200000, 1569094200000, 1584736200000, 1600630200000, 1616358600000, 1632252600000, 1647894600000, 1663788600000 ]),
    Int32List.fromList([ 12344000, 12600000, 16200000, 14400000, 18000000, 14400000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000, 16200000, 12600000 ]),

    [ false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone israel = DynamicTimezone(
    'Israel',
    DynamicTimezoneSpan(
      -1,
      8454000,
      'LMT',
      TimezoneSpan.range.min,
      -2840149254,
      dst: false,
    ),
    Int64List.fromList([ -2840149254000, -1641003640000, -933638400000, -923097600000, -919036800000, -857347200000, -844300800000, -825811200000, -812678400000, -794188800000, -779846400000, -762652800000, -748310400000, -731116800000, -681955200000, -673228800000, -667958400000, -652320000000, -636422400000, -622080000000, -608947200000, -591840000000, -572486400000, -558576000000, -542851200000, -527731200000, -514425600000, -490838400000, -482976000000, -459388800000, -451526400000, -428544000000, -418262400000, -400118400000, -387417600000, 142380000000, 150843600000, 167176800000, 178664400000, 334101600000, 337730400000, 452642400000, 462319200000, 482277600000, 494370000000, 516751200000, 526424400000, 545436000000, 558478800000, 576626400000, 589323600000, 609890400000, 620773200000, 638316000000, 651618000000, 669765600000, 683672400000, 701820000000, 715726800000, 733701600000, 747176400000, 765151200000, 778021200000, 796600800000, 810075600000, 826840800000, 842821200000, 858895200000, 874184400000, 890344800000, 905029200000, 923011200000, 936313200000, 955670400000, 970783200000, 986770800000, 1001282400000, 1017356400000, 1033941600000, 1048806000000, 1065132000000, 1081292400000, 1095804000000, 1112313600000, 1128812400000, 1143763200000, 1159657200000, 1175212800000, 1189897200000, 1206662400000, 1223161200000, 1238112000000, 1254006000000, 1269561600000, 1284246000000, 1301616000000, 1317510000000, 1333065600000, 1348354800000, 1364515200000, 1382828400000, 1395964800000, 1414278000000, 1427414400000, 1445727600000, 1458864000000, 1477782000000, 1490313600000, 1509231600000, 1521763200000, 1540681200000, 1553817600000, 1572130800000, 1585267200000, 1603580400000, 1616716800000, 1635634800000, 1648166400000, 1667084400000, 1679616000000, 1698534000000, 1711670400000, 1729983600000, 1743120000000, 1761433200000, 1774569600000, 1792882800000, 1806019200000, 1824937200000, 1837468800000, 1856386800000, 1868918400000, 1887836400000, 1900972800000, 1919286000000, 1932422400000, 1950735600000, 1963872000000, 1982790000000, 1995321600000, 2014239600000, 2026771200000, 2045689200000, 2058220800000, 2077138800000, 2090275200000, 2108588400000, 2121724800000, 2140038000000, 2153174400000, 2172092400000, 2184624000000, 2203542000000, 2216073600000, 2234991600000, 2248128000000, 2266441200000, 2279577600000, 2297890800000, 2311027200000, 2329340400000, 2342476800000, 2361394800000, 2373926400000, 2392844400000, 2405376000000, 2424294000000, 2437430400000, 2455743600000, 2468880000000, 2487193200000, 2500329600000, 2519247600000, 2531779200000, 2550697200000, 2563228800000, 2582146800000, 2595283200000, 2613596400000, 2626732800000, 2645046000000, 2658182400000, 2676495600000, 2689632000000, 2708550000000, 2721081600000, 2739999600000, 2752531200000, 2771449200000, 2784585600000, 2802898800000, 2816035200000, 2834348400000, 2847484800000, 2866402800000, 2878934400000, 2897852400000, 2910384000000, 2929302000000, 2941833600000, 2960751600000, 2973888000000, 2992201200000, 3005337600000, 3023650800000, 3036787200000, 3055705200000, 3068236800000, 3087154800000, 3099686400000, 3118604400000, 3131740800000, 3150054000000, 3163190400000, 3181503600000, 3194640000000, 3212953200000, 3226089600000, 3245007600000, 3257539200000, 3276457200000, 3288988800000, 3307906800000, 3321043200000, 3339356400000, 3352492800000, 3370806000000, 3383942400000, 3402860400000, 3415392000000, 3434310000000, 3446841600000, 3465759600000, 3478896000000, 3497209200000, 3510345600000, 3528658800000, 3541795200000, 3560108400000, 3573244800000, 3592162800000, 3604694400000, 3623612400000, 3636144000000, 3655062000000, 3668198400000, 3686511600000, 3699648000000, 3717961200000, 3731097600000, 3750015600000, 3762547200000, 3781465200000, 3793996800000, 3812914800000, 3825446400000, 3844364400000, 3857500800000, 3875814000000, 3888950400000, 3907263600000, 3920400000000, 3939318000000, 3951849600000, 3970767600000, 3983299200000, 4002217200000, 4015353600000, 4033666800000, 4046803200000, 4065116400000, 4078252800000, 4096566000000, 4109702400000, 4128620400000, 4141152000000, 4160070000000, 4172601600000, 4191519600000, 4204051200000, 4222969200000, 4236105600000, 4254418800000, 4267555200000, 4285868400000, 4299004800000, 4317922800000, 4330454400000, 4349372400000, 4361904000000, 4380822000000, 4393958400000, 4412271600000, 4425408000000, 4443721200000, 4456857600000, 4475170800000, 4488307200000, 4507225200000, 4519756800000, 4538674800000, 4551206400000, 4570124400000, 4583260800000, 4601574000000, 4614710400000, 4633023600000, 4646160000000, 4665078000000, 4677609600000, 4696527600000, 4709059200000, 4727977200000, 4741113600000, 4759426800000, 4772563200000, 4790876400000, 4804012800000, 4822326000000, 4835462400000, 4854380400000, 4866912000000, 4885830000000, 4898361600000, 4917279600000, 4930416000000, 4948729200000, 4961865600000, 4980178800000, 4993315200000, 5012233200000, 5024764800000, 5043682800000, 5056214400000, 5075132400000, 5087664000000, 5106582000000, 5119718400000, 5138031600000, 5151168000000, 5169481200000, 5182617600000, 5201535600000, 5214067200000, 5232985200000, 5245516800000, 5264434800000, 5277571200000, 5295884400000, 5309020800000, 5327334000000, 5340470400000, 5358783600000, 5371920000000, 5390838000000, 5403369600000, 5422287600000, 5434819200000, 5453737200000, 5466873600000, 5485186800000, 5498323200000, 5516636400000, 5529772800000, 5548690800000, 5561222400000, 5580140400000, 5592672000000, 5611590000000, 5624726400000, 5643039600000, 5656176000000, 5674489200000, 5687625600000, 5705938800000, 5719075200000, 5737993200000, 5750524800000, 5769442800000, 5781974400000, 5800892400000, 5814028800000, 5832342000000, 5845478400000, 5863791600000, 5876928000000, 5895846000000, 5908377600000, 5927295600000, 5939827200000, 5958745200000, 5971276800000, 5990194800000, 6003331200000, 6021644400000, 6034780800000, 6053094000000, 6066230400000, 6085148400000, 6097680000000, 6116598000000, 6129129600000, 6148047600000, 6161184000000, 6179497200000, 6192633600000, 6210946800000, 6224083200000, 6242396400000, 6255532800000, 6274450800000, 6286982400000, 6305900400000, 6318432000000, 6337350000000, 6350486400000, 6368799600000, 6381936000000, 6400249200000, 6413385600000, 6432303600000, 6444835200000, 6463753200000, 6476284800000, 6495202800000, 6508339200000, 6526652400000, 6539788800000, 6558102000000, 6571238400000, 6589551600000, 6602688000000, 6621606000000, 6634137600000, 6653055600000, 6665587200000, 6684505200000, 6697641600000, 6715954800000, 6729091200000, 6747404400000, 6760540800000, 6779458800000, 6791990400000, 6810908400000, 6823440000000, 6842358000000, 6854889600000, 6873807600000, 6886944000000, 6905257200000, 6918393600000, 6936706800000, 6949843200000, 6968761200000, 6981292800000, 7000210800000, 7012742400000, 7031660400000, 7044796800000, 7063110000000, 7076246400000, 7094559600000, 7107696000000, 7126009200000, 7139145600000, 7158063600000, 7170595200000, 7189513200000, 7202044800000, 7220962800000, 7234099200000, 7252412400000, 7265548800000, 7283862000000, 7296998400000, 7315311600000, 7328448000000, 7347366000000, 7359897600000, 7378815600000, 7391347200000, 7410265200000, 7423401600000, 7441714800000, 7454851200000, 7473164400000, 7486300800000, 7504614000000, 7517750400000, 7536668400000, 7549200000000, 7568118000000, 7580649600000, 7599567600000, 7612704000000, 7631017200000, 7644153600000, 7662466800000, 7675603200000, 7694521200000, 7707052800000, 7725970800000, 7738502400000, 7757420400000, 7770556800000, 7788870000000, 7802006400000, 7820319600000, 7833456000000, 7851769200000, 7864905600000, 7883823600000, 7896355200000, 7915273200000, 7927804800000, 7946722800000, 7959859200000, 7978172400000, 7991308800000, 8009622000000, 8022758400000, 8041676400000, 8054208000000, 8073126000000, 8085657600000, 8104575600000, 8117107200000, 8136025200000, 8149161600000, 8167474800000, 8180611200000, 8198924400000, 8212060800000, 8230978800000, 8243510400000, 8262428400000, 8274960000000, 8293878000000, 8307014400000, 8325327600000, 8338464000000, 8356777200000, 8369913600000, 8388226800000, 8401363200000, 8420281200000, 8432812800000, 8451730800000, 8464262400000, 8483180400000, 8496316800000, 8514630000000, 8527766400000, 8546079600000, 8559216000000, 8578134000000, 8590665600000, 8609583600000, 8622115200000, 8641033200000, 8654169600000, 8672482800000, 8685619200000, 8703932400000, 8717068800000, 8735382000000, 8748518400000, 8767436400000, 8779968000000, 8798886000000, 8811417600000, 8830335600000, 8843472000000, 8861785200000, 8874921600000, 8893234800000, 8906371200000, 8925289200000, 8937820800000, 8956738800000, 8969270400000, 8988188400000, 9000720000000, 9019638000000, 9032774400000, 9051087600000, 9064224000000, 9082537200000, 9095673600000, 9114591600000, 9127123200000, 9146041200000, 9158572800000, 9177490800000, 9190627200000, 9208940400000, 9222076800000, 9240390000000, 9253526400000, 9271839600000, 9284976000000, 9303894000000, 9316425600000, 9335343600000, 9347875200000, 9366793200000, 9379929600000, 9398242800000, 9411379200000, 9429692400000, 9442828800000, 9461746800000, 9474278400000, 9493196400000, 9505728000000, 9524646000000, 9537782400000, 9556095600000, 9569232000000, 9587545200000, 9600681600000, 9618994800000, 9632131200000, 9651049200000, 9663580800000, 9682498800000, 9695030400000, 9713948400000, 9727084800000, 9745398000000, 9758534400000, 9776847600000, 9789984000000, 9808902000000, 9821433600000, 9840351600000, 9852883200000, 9871801200000, 9884332800000, 9903250800000, 9916387200000, 9934700400000, 9947836800000, 9966150000000, 9979286400000, 9998204400000, 10010736000000, 10029654000000, 10042185600000, 10061103600000, 10074240000000, 10092553200000, 10105689600000, 10124002800000, 10137139200000, 10155452400000, 10168588800000, 10187506800000, 10200038400000, 10218956400000, 10231488000000, 10250406000000, 10263542400000, 10281855600000, 10294992000000, 10313305200000, 10326441600000, 10345359600000, 10357891200000, 10376809200000, 10389340800000, 10408258800000, 10420790400000, 10439708400000, 10452844800000, 10471158000000, 10484294400000, 10502607600000, 10515744000000, 10534057200000, 10547193600000, 10566111600000, 10578643200000, 10597561200000, 10610092800000, 10629010800000, 10642147200000, 10660460400000, 10673596800000, 10691910000000, 10705046400000, 10723964400000, 10736496000000, 10755414000000, 10767945600000, 10786863600000, 10800000000000, 10818313200000, 10831449600000, 10849762800000, 10862899200000, 10881212400000, 10894348800000, 10913266800000, 10925798400000, 10944716400000, 10957248000000, 10976166000000, 10989302400000, 11007615600000, 11020752000000, 11039065200000, 11052201600000, 11071119600000, 11083651200000, 11102569200000, 11115100800000, 11134018800000, 11146550400000, 11165468400000, 11178604800000, 11196918000000, 11210054400000, 11228367600000, 11241504000000, 11260422000000, 11272953600000, 11291871600000, 11304403200000, 11323321200000, 11336457600000, 11354770800000, 11367907200000, 11386220400000, 11399356800000, 11417670000000, 11430806400000, 11449724400000, 11462256000000, 11481174000000, 11493705600000, 11512623600000, 11525760000000, 11544073200000, 11557209600000, 11575522800000, 11588659200000, 11607577200000, 11620108800000, 11639026800000, 11651558400000, 11670476400000, 11683612800000, 11701926000000, 11715062400000, 11733375600000, 11746512000000, 11764825200000, 11777961600000, 11796879600000, 11809411200000, 11828329200000, 11840860800000, 11859778800000, 11872915200000, 11891228400000, 11904364800000, 11922678000000, 11935814400000, 11954732400000, 11967264000000, 11986182000000, 11998713600000, 12017631600000, 12030163200000, 12049081200000, 12062217600000, 12080530800000, 12093667200000, 12111980400000, 12125116800000, 12144034800000, 12156566400000, 12175484400000, 12188016000000, 12206934000000, 12220070400000, 12238383600000, 12251520000000, 12269833200000, 12282969600000, 12301282800000, 12314419200000, 12333337200000, 12345868800000, 12364786800000, 12377318400000, 12396236400000, 12409372800000, 12427686000000, 12440822400000, 12459135600000, 12472272000000, 12491190000000, 12503721600000, 12522639600000, 12535171200000, 12554089200000, 12567225600000, 12585538800000, 12598675200000, 12616988400000, 12630124800000, 12648438000000, 12661574400000, 12680492400000, 12693024000000, 12711942000000, 12724473600000, 12743391600000, 12756528000000, 12774841200000, 12787977600000, 12806290800000, 12819427200000, 12838345200000, 12850876800000, 12869794800000, 12882326400000, 12901244400000, 12913776000000, 12932694000000, 12945830400000, 12964143600000, 12977280000000, 12995593200000, 13008729600000, 13027647600000, 13040179200000, 13059097200000, 13071628800000, 13090546800000, 13103683200000, 13121996400000, 13135132800000, 13153446000000, 13166582400000, 13184895600000, 13198032000000, 13216950000000, 13229481600000, 13248399600000, 13260931200000, 13279849200000, 13292985600000, 13311298800000, 13324435200000, 13342748400000, 13355884800000, 13374802800000, 13387334400000, 13406252400000, 13418784000000, 13437702000000, 13450838400000, 13469151600000, 13482288000000, 13500601200000, 13513737600000, 13532050800000, 13545187200000, 13564105200000, 13576636800000, 13595554800000, 13608086400000, 13627004400000, 13640140800000, 13658454000000, 13671590400000, 13689903600000, 13703040000000, 13721958000000, 13734489600000, 13753407600000, 13765939200000, 13784857200000, 13797388800000, 13816306800000, 13829443200000, 13847756400000, 13860892800000, 13879206000000, 13892342400000, 13911260400000, 13923792000000, 13942710000000, 13955241600000, 13974159600000, 13987296000000, 14005609200000 ]),
    Int32List.fromList([ 8440000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'JMT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDDT', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST', 'IDT', 'IST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone jamaica = DynamicTimezone(
    'Jamaica',
    DynamicTimezoneSpan(
      -1,
      -18430000,
      'LMT',
      TimezoneSpan.range.min,
      -2524503170,
      dst: false,
    ),
    Int64List.fromList([ -2524503170000, -1827687170000, 126687600000, 152085600000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000 ]),
    Int32List.fromList([ -18430000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'KMT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone japan = DynamicTimezone(
    'Japan',
    DynamicTimezoneSpan(
      -1,
      33539000,
      'LMT',
      TimezoneSpan.range.min,
      -2587712400,
      dst: false,
    ),
    Int64List.fromList([ -2587712400000, -683802000000, -672310800000, -654771600000, -640861200000, -620298000000, -609411600000, -588848400000, -577962000000 ]),
    Int32List.fromList([ 32400000, 36000000, 32400000, 36000000, 32400000, 36000000, 32400000, 36000000, 32400000 ]),
    [ 'JST', 'JDT', 'JST', 'JDT', 'JST', 'JDT', 'JST', 'JDT', 'JST' ],
    [ false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone kwajalein = DynamicTimezone(
    'Kwajalein',
    DynamicTimezoneSpan(
      -1,
      40160000,
      'LMT',
      TimezoneSpan.range.min,
      -2177492960,
      dst: false,
    ),
    Int64List.fromList([ -2177492960000, -1041418800000, -907408800000, -817462800000, -7988400000, 745934400000 ]),
    Int32List.fromList([ 39600000, 36000000, 32400000, 39600000, -43200000, 43200000 ]),
    [ '+11', '+10', '+09', '+11', '-12', '+12' ],
    [ false, false, false, false, false, false ],
  );

  static final Timezone libya = DynamicTimezone(
    'Libya',
    DynamicTimezoneSpan(
      -1,
      3164000,
      'LMT',
      TimezoneSpan.range.min,
      -1577926364,
      dst: false,
    ),
    Int64List.fromList([ -1577926364000, -574902000000, -568087200000, -512175600000, -504928800000, -449888400000, -441856800000, -347158800000, 378684000000, 386463600000, 402271200000, 417999600000, 433807200000, 449622000000, 465429600000, 481590000000, 496965600000, 512953200000, 528674400000, 544230000000, 560037600000, 575852400000, 591660000000, 607388400000, 623196000000, 641775600000, 844034400000, 860108400000, 875916000000, 1352505600000, 1364515200000, 1382659200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 7200000 ]),
    [ 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'EET', 'CET', 'CEST', 'EET', 'CET', 'CEST', 'EET' ],
    [ false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, false, true, false ],
  );

  static final Timezone met = DynamicTimezone(
    'MET',
    DynamicTimezoneSpan(
      -1,
      3600000,
      'MET',
      TimezoneSpan.range.min,
      -1693706400,
      dst: false,
    ),
    Int64List.fromList([ -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -766623600000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone mst = FixedTimezone(
    'MST',
    FixedTimezoneSpan(
      const LiteralOffset('+00:00', -25200),
      'MST',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone mst7mdt = DynamicTimezone(
    'MST7MDT',
    DynamicTimezoneSpan(
      -1,
      -25200000,
      'MST',
      TimezoneSpan.range.min,
      -1633273200,
      dst: false,
    ),
    Int64List.fromList([ -1633273200000, -1615132800000, -1601823600000, -1583683200000, -880210800000, -769395600000, -765388800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 126694800000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone nz = DynamicTimezone(
    'NZ',
    DynamicTimezoneSpan(
      -1,
      41944000,
      'LMT',
      TimezoneSpan.range.min,
      -3192435544,
      dst: false,
    ),
    Int64List.fromList([ -3192435544000, -1330335000000, -1320057000000, -1300699800000, -1287396000000, -1269250200000, -1255946400000, -1237800600000, -1224496800000, -1206351000000, -1192442400000, -1174901400000, -1160992800000, -1143451800000, -1125914400000, -1112607000000, -1094464800000, -1081157400000, -1063015200000, -1049707800000, -1031565600000, -1018258200000, -1000116000000, -986808600000, -968061600000, -955359000000, -936612000000, -923304600000, -757425600000, 152632800000, 162309600000, 183477600000, 194968800000, 215532000000, 226418400000, 246981600000, 257868000000, 278431200000, 289317600000, 309880800000, 320767200000, 341330400000, 352216800000, 372780000000, 384271200000, 404834400000, 415720800000, 436284000000, 447170400000, 467733600000, 478620000000, 499183200000, 510069600000, 530632800000, 541519200000, 562082400000, 573573600000, 594136800000, 605023200000, 623772000000, 637682400000, 655221600000, 669132000000, 686671200000, 700581600000, 718120800000, 732636000000, 749570400000, 764085600000, 781020000000, 795535200000, 812469600000, 826984800000, 844524000000, 858434400000, 875973600000, 889884000000, 907423200000, 921938400000, 938872800000, 953388000000, 970322400000, 984837600000, 1002376800000, 1016287200000, 1033826400000, 1047736800000, 1065276000000, 1079791200000, 1096725600000, 1111240800000, 1128175200000, 1142690400000, 1159624800000, 1174140000000, 1191074400000, 1207404000000, 1222524000000, 1238853600000, 1253973600000, 1270303200000, 1285423200000, 1301752800000, 1316872800000, 1333202400000, 1348927200000, 1365256800000, 1380376800000, 1396706400000, 1411826400000, 1428156000000, 1443276000000, 1459605600000, 1474725600000, 1491055200000, 1506175200000, 1522504800000, 1538229600000, 1554559200000, 1569679200000, 1586008800000, 1601128800000, 1617458400000, 1632578400000, 1648908000000, 1664028000000, 1680357600000, 1695477600000, 1712412000000, 1727532000000, 1743861600000, 1758981600000, 1775311200000, 1790431200000, 1806760800000, 1821880800000, 1838210400000, 1853330400000, 1869660000000, 1885384800000, 1901714400000, 1916834400000, 1933164000000, 1948284000000, 1964613600000, 1979733600000, 1996063200000, 2011183200000, 2027512800000, 2042632800000, 2058962400000, 2074687200000, 2091016800000, 2106136800000, 2122466400000, 2137586400000 ]),
    Int32List.fromList([ 41400000, 45000000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 41400000, 43200000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000, 43200000, 46800000 ]),
    [ 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZMT', 'NZST', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT', 'NZST', 'NZDT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone nzChat = DynamicTimezone(
    'NZ-CHAT',
    DynamicTimezoneSpan(
      -1,
      44028000,
      'LMT',
      TimezoneSpan.range.min,
      -3192437628,
      dst: false,
    ),
    Int64List.fromList([ -3192437628000, -757426500000, 152632800000, 162309600000, 183477600000, 194968800000, 215532000000, 226418400000, 246981600000, 257868000000, 278431200000, 289317600000, 309880800000, 320767200000, 341330400000, 352216800000, 372780000000, 384271200000, 404834400000, 415720800000, 436284000000, 447170400000, 467733600000, 478620000000, 499183200000, 510069600000, 530632800000, 541519200000, 562082400000, 573573600000, 594136800000, 605023200000, 623772000000, 637682400000, 655221600000, 669132000000, 686671200000, 700581600000, 718120800000, 732636000000, 749570400000, 764085600000, 781020000000, 795535200000, 812469600000, 826984800000, 844524000000, 858434400000, 875973600000, 889884000000, 907423200000, 921938400000, 938872800000, 953388000000, 970322400000, 984837600000, 1002376800000, 1016287200000, 1033826400000, 1047736800000, 1065276000000, 1079791200000, 1096725600000, 1111240800000, 1128175200000, 1142690400000, 1159624800000, 1174140000000, 1191074400000, 1207404000000, 1222524000000, 1238853600000, 1253973600000, 1270303200000, 1285423200000, 1301752800000, 1316872800000, 1333202400000, 1348927200000, 1365256800000, 1380376800000, 1396706400000, 1411826400000, 1428156000000, 1443276000000, 1459605600000, 1474725600000, 1491055200000, 1506175200000, 1522504800000, 1538229600000, 1554559200000, 1569679200000, 1586008800000, 1601128800000, 1617458400000, 1632578400000, 1648908000000, 1664028000000, 1680357600000, 1695477600000, 1712412000000, 1727532000000, 1743861600000, 1758981600000, 1775311200000, 1790431200000, 1806760800000, 1821880800000, 1838210400000, 1853330400000, 1869660000000, 1885384800000, 1901714400000, 1916834400000, 1933164000000, 1948284000000, 1964613600000, 1979733600000, 1996063200000, 2011183200000, 2027512800000, 2042632800000, 2058962400000, 2074687200000, 2091016800000, 2106136800000, 2122466400000, 2137586400000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone navajo = DynamicTimezone(
    'Navajo',
    DynamicTimezoneSpan(
      -1,
      -25196000,
      'LMT',
      TimezoneSpan.range.min,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -1570374000000, -1551628800000, -1538924400000, -1534089600000, -880210800000, -769395600000, -765388800000, -147884400000, -131558400000, -116434800000, -100108800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 126694800000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone prc = DynamicTimezone(
    'PRC',
    DynamicTimezoneSpan(
      -1,
      29143000,
      'LMT',
      TimezoneSpan.range.min,
      -2177481943,
      dst: false,
    ),
    Int64List.fromList([ -2177481943000, -1600675200000, -1585904400000, -933667200000, -922093200000, -908870400000, -888829200000, -881049600000, -767869200000, -745833600000, -733827600000, -716889600000, -699613200000, -683884800000, -670669200000, -652348800000, -650019600000, 515527200000, 527014800000, 545162400000, 558464400000, 577216800000, 589914000000, 608666400000, 621968400000, 640116000000, 653418000000, 671565600000, 684867600000 ]),
    Int32List.fromList([ 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone pst8pdt = DynamicTimezone(
    'PST8PDT',
    DynamicTimezoneSpan(
      -1,
      -28800000,
      'PST',
      TimezoneSpan.range.min,
      -1633269600,
      dst: false,
    ),
    Int64List.fromList([ -1633269600000, -1615129200000, -1601820000000, -1583679600000, -880207200000, -769395600000, -765385200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'PDT', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone poland = DynamicTimezone(
    'Poland',
    DynamicTimezoneSpan(
      -1,
      5040000,
      'LMT',
      TimezoneSpan.range.min,
      -2840145840,
      dst: false,
    ),
    Int64List.fromList([ -2840145840000, -1717032240000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1600473600000, -1587168000000, -1501725600000, -931734000000, -857257200000, -844556400000, -828226800000, -812502000000, -796874400000, -796608000000, -778726800000, -762660000000, -748486800000, -733273200000, -715215600000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, -397094400000, -386812800000, -371088000000, -355363200000, -334195200000, -323308800000, -307584000000, -291859200000, -271296000000, -260409600000, -239846400000, -228960000000, -208396800000, -197510400000, -176342400000, -166060800000, 220921200000, 228873600000, 243993600000, 260323200000, 276048000000, 291772800000, 307497600000, 323827200000, 338947200000, 354672000000, 370396800000, 386121600000, 401846400000, 417571200000, 433296000000, 449020800000, 465350400000, 481075200000, 496800000000, 512524800000, 528249600000, 543974400000, 559699200000, 567990000000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5040000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'WMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'EET', 'EEST', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone portugal = DynamicTimezone(
    'Portugal',
    DynamicTimezoneSpan(
      -1,
      -2205000,
      'LMT',
      TimezoneSpan.range.min,
      -1830384000,
      dst: false,
    ),
    Int64List.fromList([ -1830384000000, -1689555600000, -1677801600000, -1667437200000, -1647738000000, -1635814800000, -1616202000000, -1604365200000, -1584666000000, -1572742800000, -1553043600000, -1541206800000, -1521507600000, -1442451600000, -1426813200000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301274000000, -1284339600000, -1269824400000, -1221440400000, -1206925200000, -1191200400000, -1175475600000, -1127696400000, -1111971600000, -1096851600000, -1080522000000, -1063587600000, -1049072400000, -1033347600000, -1017622800000, -1002502800000, -986173200000, -969238800000, -950490000000, -942022800000, -922669200000, -906944400000, -891133200000, -877309200000, -873684000000, -864007200000, -857955600000, -845859600000, -842839200000, -831348000000, -825901200000, -814410000000, -810784800000, -799898400000, -794451600000, -782960400000, -779335200000, -768448800000, -763002000000, -749091600000, -733366800000, -717631200000, -701906400000, -686181600000, -670456800000, -654732000000, -639007200000, -623282400000, -607557600000, -591832800000, -575503200000, -559778400000, -544053600000, -528328800000, -512604000000, -496879200000, -481154400000, -465429600000, -449704800000, -433980000000, -417650400000, -401925600000, -386200800000, -370476000000, -354751200000, -339026400000, -323301600000, -307576800000, -291852000000, -276127200000, -260402400000, -244677600000, -228348000000, -212623200000, -196898400000, -181173600000, -165448800000, -149724000000, -133999200000, -118274400000, 212544000000, 228268800000, 243993600000, 260323200000, 276048000000, 291772800000, 307501200000, 323222400000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417578400000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone roc = DynamicTimezone(
    'ROC',
    DynamicTimezoneSpan(
      -1,
      29160000,
      'LMT',
      TimezoneSpan.range.min,
      -2335248360,
      dst: false,
    ),
    Int64List.fromList([ -2335248360000, -1017820800000, -766224000000, -745833600000, -733827600000, -716889600000, -699613200000, -683884800000, -670669200000, -652348800000, -639133200000, -620812800000, -607597200000, -589276800000, -576061200000, -562924800000, -541760400000, -528710400000, -510224400000, -497174400000, -478688400000, -465638400000, -449830800000, -434016000000, -418208400000, -402480000000, -386672400000, -370944000000, -355136400000, -339408000000, -323600400000, -302515200000, -291978000000, -270979200000, -260442000000, 133977600000, 149785200000, 165513600000, 181321200000, 299606400000, 307551600000 ]),
    Int32List.fromList([ 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000, 32400000, 28800000 ]),
    [ 'CST', 'JST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone rok = DynamicTimezone(
    'ROK',
    DynamicTimezoneSpan(
      -1,
      30472000,
      'LMT',
      TimezoneSpan.range.min,
      -1948782472,
      dst: false,
    ),
    Int64List.fromList([ -1948782472000, -1830414600000, -767350800000, -681210000000, -672228000000, -654771600000, -640864800000, -623408400000, -609415200000, -588848400000, -577965600000, -498128400000, -462702600000, -451733400000, -429784200000, -418296600000, -399544200000, -387451800000, -368094600000, -356002200000, -336645000000, -324552600000, -305195400000, -293103000000, -264933000000, 547578000000, 560883600000, 579027600000, 592333200000 ]),
    Int32List.fromList([ 30600000, 32400000, 32400000, 36000000, 32400000, 36000000, 32400000, 36000000, 32400000, 36000000, 32400000, 30600000, 34200000, 30600000, 34200000, 30600000, 34200000, 30600000, 34200000, 30600000, 34200000, 30600000, 34200000, 30600000, 32400000, 36000000, 32400000, 36000000, 32400000 ]),
    [ 'KST', 'JST', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KDT', 'KST', 'KST', 'KDT', 'KST', 'KDT', 'KST' ],
    [ false, false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false ],
  );

  static final Timezone singapore = DynamicTimezone(
    'Singapore',
    DynamicTimezoneSpan(
      -1,
      24925000,
      'LMT',
      TimezoneSpan.range.min,
      -2177477725,
      dst: false,
    ),
    Int64List.fromList([ -2177477725000, -2038200925000, -1167634800000, -1073028000000, -894180000000, -879665400000, -767005200000, 378662400000 ]),
    Int32List.fromList([ 24925000, 25200000, 26400000, 26400000, 27000000, 32400000, 27000000, 28800000 ]),
    [ 'SMT', '+07', '+0720', '+0720', '+0730', '+09', '+0730', '+08' ],
    [ false, false, true, false, false, false, false, false ],
  );

  static final Timezone turkey = DynamicTimezone(
    'Turkey',
    DynamicTimezoneSpan(
      -1,
      6952000,
      'LMT',
      TimezoneSpan.range.min,
      -2840147752,
      dst: false,
    ),
    Int64List.fromList([ -2840147752000, -1869875816000, -1693706400000, -1680490800000, -1570413600000, -1552186800000, -1538359200000, -1522551600000, -1507514400000, -1490583600000, -1440208800000, -1428030000000, -1409709600000, -1396494000000, -931053600000, -922676400000, -917834400000, -892436400000, -875844000000, -764737200000, -744343200000, -733806000000, -716436000000, -701924400000, -684986400000, -670474800000, -654141600000, -639025200000, -622087200000, -606970800000, -590032800000, -575521200000, -235620000000, -194842800000, -177732000000, -165726000000, 107910000000, 121215600000, 133920000000, 152665200000, 164678400000, 184114800000, 196214400000, 215564400000, 228873600000, 245804400000, 260323200000, 267915600000, 428454000000, 433893600000, 468111600000, 482799600000, 496710000000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 686098800000, 701823600000, 717548400000, 733273200000, 748998000000, 764118000000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1167602400000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301274000000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396227600000, 1414285200000, 1427590800000, 1446944400000, 1459040400000, 1473195600000 ]),
    Int32List.fromList([ 7016000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000 ]),
    [ 'IMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03', '+04', '+03', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone uct = FixedTimezone(
    'UCT',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone utc = FixedTimezone(
    'UTC',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone universal = FixedTimezone(
    'Universal',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

  static final Timezone wSu = DynamicTimezone(
    'W-SU',
    DynamicTimezoneSpan(
      -1,
      9017000,
      'LMT',
      TimezoneSpan.range.min,
      -2840149817,
      dst: false,
    ),
    Int64List.fromList([ -2840149817000, -1688265017000, -1656819079000, -1641353479000, -1627965079000, -1618716679000, -1596429079000, -1593820800000, -1589860800000, -1542427200000, -1539493200000, -1525323600000, -1522728000000, -1491188400000, -1247536800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 686102400000, 695779200000, 701823600000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000 ]),
    Int32List.fromList([ 9017000, 9079000, 12679000, 9079000, 16279000, 12679000, 16279000, 14400000, 10800000, 14400000, 18000000, 14400000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000 ]),
    [ 'MMT', 'MMT', 'MST', 'MMT', 'MDST', 'MST', 'MDST', 'MSD', 'MSK', 'MSD', '+05', 'MSD', 'MSK', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'MSK' ],
    [ false, false, true, false, true, true, true, true, false, true, true, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone wet = DynamicTimezone(
    'WET',
    DynamicTimezoneSpan(
      -1,
      0,
      'WET',
      TimezoneSpan.range.min,
      228877200,
      dst: false,
    ),
    Int64List.fromList([ 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone zulu = FixedTimezone(
    'Zulu',
    FixedTimezoneSpan(
      const LiteralOffset('Z', 0),
      'UTC',
      TimezoneSpan.range.min,
      TimezoneSpan.range.max,
      dst: false,
    ),
  );

}


