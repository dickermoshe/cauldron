// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Europe on Never {
  static final Timezone amsterdam = DynamicTimezone(
    'Europe/Amsterdam',
    DynamicTimezoneSpan(
      -1,
      1050000,
      'LMT',
      TimezoneSpan.range.min,
      -2840141850,
      dst: false,
    ),
    Int64List.fromList([ -2840141850000, -2450995200000, -1740355200000, -1693702800000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1613826000000, -1604278800000, -1585530000000, -1574038800000, -1552266000000, -1539997200000, -1520557200000, -1507510800000, -1490576400000, -1473642000000, -1459126800000, -1444006800000, -1427677200000, -1411952400000, -1396227600000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1191189600000, -1175464800000, -1160344800000, -1143410400000, -1127685600000, -1111960800000, -1096840800000, -1080511200000, -1063576800000, -1049061600000, -1033336800000, -1017612000000, -1002492000000, -986162400000, -969228000000, -950479200000, -942012000000, -934668000000, -857257200000, -844556400000, -828226800000, -812502000000, -799293600000, -798073200000, -781052400000, -766623600000, -745455600000, -733273200000, 220921200000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1050000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'BMT', 'WET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone andorra = DynamicTimezone(
    'Europe/Andorra',
    DynamicTimezoneSpan(
      -1,
      364000,
      'LMT',
      TimezoneSpan.range.min,
      -2177453164,
      dst: false,
    ),
    Int64List.fromList([ -2177453164000, -733881600000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone astrakhan = DynamicTimezone(
    'Europe/Astrakhan',
    DynamicTimezoneSpan(
      -1,
      11532000,
      'LMT',
      TimezoneSpan.range.min,
      -1441249932,
      dst: false,
    ),
    Int64List.fromList([ -1441249932000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591141600000, 606866400000, 622594800000, 638319600000, 654649200000, 670374000000, 701820000000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000, 1459033200000 ]),
    Int32List.fromList
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+04', '+03', '+04', '+03', '+04', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false ],
  );

  static final Timezone athens = DynamicTimezone(
    'Europe/Athens',
    DynamicTimezoneSpan(
      -1,
      5692000,
      'LMT',
      TimezoneSpan.range.min,
      -2344642492,
      dst: false,
    ),
    Int64List.fromList([ -2344642492000, -1686101632000, -1182996000000, -1178161200000, -906861600000, -904878000000, -857257200000, -844477200000, -828237600000, -812422800000, -552362400000, -541652400000, 166485600000, 186184800000, 198028800000, 213753600000, 228873600000, 244080000000, 260323200000, 275446800000, 291798000000, 307407600000, 323388000000, 338936400000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5692000, 7200000, 10800000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'AMT', 'EET', 'EEST', 'EET', 'EEST', 'CEST', 'CET', 'CEST', 'CET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone belfast = DynamicTimezone(
    'Europe/Belfast',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone belgrade = DynamicTimezone(
    'Europe/Belgrade',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone berlin = DynamicTimezone(
    'Europe/Berlin',
    DynamicTimezoneSpan(
      -1,
      3208000,
      'LMT',
      TimezoneSpan.range.min,
      -2422054408,
      dst: false,
    ),
    Int64List.fromList([ -2422054408000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -776563200000, -765936000000, -761180400000, -757386000000, -748479600000, -733273200000, -717631200000, -714610800000, -710380800000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, false, true, false, true, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone bratislava = DynamicTimezone(
    'Europe/Bratislava',
    DynamicTimezoneSpan(
      -1,
      3464000,
      'LMT',
      TimezoneSpan.range.min,
      -3786829064,
      dst: false,
    ),
    Int64List.fromList([ -3786829064000, -2469401864000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -777866400000, -765327600000, -746578800000, -733359600000, -728517600000, -721260000000, -716425200000, -701910000000, -684975600000, -670460400000, -654217200000, -639010800000, 283993200000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3464000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'PMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'GMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone brussels = DynamicTimezone(
    'Europe/Brussels',
    DynamicTimezoneSpan(
      -1,
      1050000,
      'LMT',
      TimezoneSpan.range.min,
      -2840141850,
      dst: false,
    ),
    Int64List.fromList([ -2840141850000, -2450995200000, -1740355200000, -1693702800000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1613826000000, -1604278800000, -1585530000000, -1574038800000, -1552266000000, -1539997200000, -1520557200000, -1507510800000, -1490576400000, -1473642000000, -1459126800000, -1444006800000, -1427677200000, -1411952400000, -1396227600000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1191189600000, -1175464800000, -1160344800000, -1143410400000, -1127685600000, -1111960800000, -1096840800000, -1080511200000, -1063576800000, -1049061600000, -1033336800000, -1017612000000, -1002492000000, -986162400000, -969228000000, -950479200000, -942012000000, -934668000000, -857257200000, -844556400000, -828226800000, -812502000000, -799293600000, -798073200000, -781052400000, -766623600000, -745455600000, -733273200000, 220921200000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1050000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'BMT', 'WET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone bucharest = DynamicTimezone(
    'Europe/Bucharest',
    DynamicTimezoneSpan(
      -1,
      6264000,
      'LMT',
      TimezoneSpan.range.min,
      -2469404664,
      dst: false,
    ),
    Int64List.fromList([ -2469404664000, -1213148664000, -1187056800000, -1175479200000, -1159754400000, -1144029600000, -1127700000000, -1111975200000, -1096250400000, -1080525600000, -1064800800000, -1049076000000, -1033351200000, -1017626400000, -1001901600000, -986176800000, -970452000000, -954727200000, 296604000000, 307486800000, 323816400000, 338940000000, 354672000000, 370396800000, 386121600000, 401846400000, 417571200000, 433296000000, 449020800000, 465350400000, 481075200000, 496800000000, 512524800000, 528249600000, 543974400000, 559699200000, 575424000000, 591148800000, 606873600000, 622598400000, 638323200000, 654652800000, 662680800000, 670370400000, 686095200000, 701820000000, 717544800000, 733269600000, 748994400000, 757375200000, 764719200000, 780440400000, 796168800000, 811890000000, 828223200000, 846363600000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'BMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone budapest = DynamicTimezone(
    'Europe/Budapest',
    DynamicTimezoneSpan(
      -1,
      4580000,
      'LMT',
      TimezoneSpan.range.min,
      -2498260580,
      dst: false,
    ),
    Int64List.fromList([ -2498260580000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1640998800000, -1632006000000, -1618700400000, -1600470000000, -1587250800000, -1569711600000, -1555196400000, -906775200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -778471200000, -762656400000, -749689200000, -733276800000, -717634800000, -701910000000, -686185200000, -670460400000, -654130800000, -639010800000, -492656400000, -481168800000, -461199600000, -449708400000, -428540400000, -418258800000, -397090800000, -386809200000, 323823600000, 338943600000, 354668400000, 370393200000, 386118000000, 401842800000, 417567600000, 433292400000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone busingen = DynamicTimezone(
    'Europe/Busingen',
    DynamicTimezoneSpan(
      -1,
      2048000,
      'LMT',
      TimezoneSpan.range.min,
      -3675198848,
      dst: false,
    ),
    Int64List.fromList([ -3675198848000, -2385246586000, -904435200000, -891129600000, -872985600000, -859680000000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1786000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone chisinau = DynamicTimezone(
    'Europe/Chisinau',
    DynamicTimezoneSpan(
      -1,
      6920000,
      'LMT',
      TimezoneSpan.range.min,
      -2840147720,
      dst: false,
    ),
    Int64List.fromList([ -2840147720000, -1637114100000, -1213148664000, -1187056800000, -1175479200000, -1159754400000, -1144029600000, -1127700000000, -1111975200000, -1096250400000, -1080525600000, -1064800800000, -1049076000000, -1033351200000, -1017626400000, -1001901600000, -986176800000, -970452000000, -954727200000, -927165600000, -898138800000, -857257200000, -844556400000, -828226800000, -812502000000, -800157600000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 641944800000, 654652800000, 670377600000, 686102400000, 694216800000, 701820000000, 717541200000, 733269600000, 748990800000, 764719200000, 780440400000, 796168800000, 811890000000, 828223200000, 846363600000, 859680000000, 877824000000, 891129600000, 909273600000, 922579200000, 941328000000, 954028800000, 972777600000, 985478400000, 1004227200000, 1017532800000, 1035676800000, 1048982400000, 1067126400000, 1080432000000, 1099180800000, 1111881600000, 1130630400000, 1143331200000, 1162080000000, 1174780800000, 1193529600000, 1206835200000, 1224979200000, 1238284800000, 1256428800000, 1269734400000, 1288483200000, 1301184000000, 1319932800000, 1332633600000, 1351382400000, 1364688000000, 1382832000000, 1396137600000, 1414281600000, 1427587200000, 1445731200000, 1459036800000, 1477785600000, 1490486400000, 1509235200000, 1521936000000, 1540684800000, 1553990400000, 1572134400000, 1585440000000, 1603584000000, 1616889600000, 1635638400000, 1648339200000, 1667088000000, 1679788800000, 1698537600000, 1711843200000, 1729987200000, 1743292800000, 1761436800000, 1774742400000, 1792886400000, 1806192000000, 1824940800000, 1837641600000, 1856390400000, 1869091200000, 1887840000000, 1901145600000, 1919289600000, 1932595200000, 1950739200000, 1964044800000, 1982793600000, 1995494400000, 2014243200000, 2026944000000, 2045692800000, 2058393600000, 2077142400000, 2090448000000, 2108592000000, 2121897600000, 2140041600000 ]),
    Int32List.fromList([ 6900000, 6264000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'CMT', 'BMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone copenhagen = DynamicTimezone(
    'Europe/Copenhagen',
    DynamicTimezoneSpan(
      -1,
      3208000,
      'LMT',
      TimezoneSpan.range.min,
      -2422054408,
      dst: false,
    ),
    Int64List.fromList([ -2422054408000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -776563200000, -765936000000, -761180400000, -757386000000, -748479600000, -733273200000, -717631200000, -714610800000, -710380800000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, false, true, false, true, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone dublin = DynamicTimezone(
    'Europe/Dublin',
    DynamicTimezoneSpan(
      -1,
      -1521000,
      'LMT',
      TimezoneSpan.range.min,
      -2821649679,
      dst: false,
    ),
    Int64List.fromList([ -2821649679000, -1691962479000, -1680471279000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1517011200000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -733356000000, -719445600000, -699487200000, -684972000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ -1521000, 2079000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0 ]),
    [ 'DMT', 'IST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT', 'IST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone gibraltar = DynamicTimezone(
    'Europe/Gibraltar',
    DynamicTimezoneSpan(
      -1,
      -1284000,
      'LMT',
      TimezoneSpan.range.min,
      -2821649916,
      dst: false,
    ),
    Int64List.fromList([ -2821649916000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone guernsey = DynamicTimezone(
    'Europe/Guernsey',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone helsinki = DynamicTimezone(
    'Europe/Helsinki',
    DynamicTimezoneSpan(
      -1,
      5989000,
      'LMT',
      TimezoneSpan.range.min,
      -2890258789,
      dst: false,
    ),
    Int64List.fromList([ -2890258789000, -1535938789000, -875671200000, -859773600000, 354672000000, 370396800000, 386121600000, 401846400000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone isleOfMan = DynamicTimezone(
    'Europe/Isle_of_Man',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone istanbul = DynamicTimezone(
    'Europe/Istanbul',
    DynamicTimezoneSpan(
      -1,
      6952000,
      'LMT',
      TimezoneSpan.range.min,
      -2840147752,
      dst: false,
    ),
    Int64List.fromList([ -2840147752000, -1869875816000, -1693706400000, -1680490800000, -1570413600000, -1552186800000, -1538359200000, -1522551600000, -1507514400000, -1490583600000, -1440208800000, -1428030000000, -1409709600000, -1396494000000, -931053600000, -922676400000, -917834400000, -892436400000, -875844000000, -764737200000, -744343200000, -733806000000, -716436000000, -701924400000, -684986400000, -670474800000, -654141600000, -639025200000, -622087200000, -606970800000, -590032800000, -575521200000, -235620000000, -194842800000, -177732000000, -165726000000, 107910000000, 121215600000, 133920000000, 152665200000, 164678400000, 184114800000, 196214400000, 215564400000, 228873600000, 245804400000, 260323200000, 267915600000, 428454000000, 433893600000, 468111600000, 482799600000, 496710000000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 686098800000, 701823600000, 717548400000, 733273200000, 748998000000, 764118000000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1167602400000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301274000000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396227600000, 1414285200000, 1427590800000, 1446944400000, 1459040400000, 1473195600000 ]),
    Int32List.fromList([ 7016000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000 ]),
    [ 'IMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03', '+04', '+03', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', '+03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone jersey = DynamicTimezone(
    'Europe/Jersey',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone kaliningrad = DynamicTimezone(
    'Europe/Kaliningrad',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2422056120,
      dst: false,
    ),
    Int64List.fromList([ -2422056120000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -780372000000, -778730400000, -762663600000, -749095200000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622598400000, 638323200000, 654652800000, 670377600000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 846374400000, 859680000000, 877824000000, 891129600000, 909273600000, 922579200000, 941328000000, 954028800000, 972777600000, 985478400000, 1004227200000, 1017532800000, 1035676800000, 1048982400000, 1067126400000, 1080432000000, 1099180800000, 1111881600000, 1130630400000, 1143331200000, 1162080000000, 1174780800000, 1193529600000, 1206835200000, 1224979200000, 1238284800000, 1256428800000, 1269734400000, 1288483200000, 1301184000000, 1414278000000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'EET', 'EEST', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', '+03', 'EET' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone kiev = DynamicTimezone(
    'Europe/Kiev',
    DynamicTimezoneSpan(
      -1,
      7324000,
      'LMT',
      TimezoneSpan.range.min,
      -2840148124,
      dst: false,
    ),
    Int64List.fromList([ -2840148124000, -1441159324000, -1247536800000, -892522800000, -857257200000, -844556400000, -828226800000, -825382800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 646783200000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 831934800000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 7324000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'KMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone kirov = DynamicTimezone(
    'Europe/Kirov',
    DynamicTimezoneSpan(
      -1,
      11928000,
      'LMT',
      TimezoneSpan.range.min,
      -1593820800,
      dst: false,
    ),
    Int64List.fromList([ -1593820800000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591141600000, 606866400000, 622594800000, 638319600000, 654649200000, 670374000000, 701820000000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000 ]),
    Int32List.fromList
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', 'MSD', 'MSK', 'MSD', 'MSK', '+04', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'MSK' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone kyiv = DynamicTimezone(
    'Europe/Kyiv',
    DynamicTimezoneSpan(
      -1,
      7324000,
      'LMT',
      TimezoneSpan.range.min,
      -2840148124,
      dst: false,
    ),
    Int64List.fromList([ -2840148124000, -1441159324000, -1247536800000, -892522800000, -857257200000, -844556400000, -828226800000, -825382800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 646783200000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 831934800000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 7324000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'KMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone lisbon = DynamicTimezone(
    'Europe/Lisbon',
    DynamicTimezoneSpan(
      -1,
      -2205000,
      'LMT',
      TimezoneSpan.range.min,
      -1830384000,
      dst: false,
    ),
    Int64List.fromList([ -1830384000000, -1689555600000, -1677801600000, -1667437200000, -1647738000000, -1635814800000, -1616202000000, -1604365200000, -1584666000000, -1572742800000, -1553043600000, -1541206800000, -1521507600000, -1442451600000, -1426813200000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301274000000, -1284339600000, -1269824400000, -1221440400000, -1206925200000, -1191200400000, -1175475600000, -1127696400000, -1111971600000, -1096851600000, -1080522000000, -1063587600000, -1049072400000, -1033347600000, -1017622800000, -1002502800000, -986173200000, -969238800000, -950490000000, -942022800000, -922669200000, -906944400000, -891133200000, -877309200000, -873684000000, -864007200000, -857955600000, -845859600000, -842839200000, -831348000000, -825901200000, -814410000000, -810784800000, -799898400000, -794451600000, -782960400000, -779335200000, -768448800000, -763002000000, -749091600000, -733366800000, -717631200000, -701906400000, -686181600000, -670456800000, -654732000000, -639007200000, -623282400000, -607557600000, -591832800000, -575503200000, -559778400000, -544053600000, -528328800000, -512604000000, -496879200000, -481154400000, -465429600000, -449704800000, -433980000000, -417650400000, -401925600000, -386200800000, -370476000000, -354751200000, -339026400000, -323301600000, -307576800000, -291852000000, -276127200000, -260402400000, -244677600000, -228348000000, -212623200000, -196898400000, -181173600000, -165448800000, -149724000000, -133999200000, -118274400000, 212544000000, 228268800000, 243993600000, 260323200000, 276048000000, 291772800000, 307501200000, 323222400000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417578400000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone ljubljana = DynamicTimezone(
    'Europe/Ljubljana',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone london = DynamicTimezone(
    'Europe/London',
    DynamicTimezoneSpan(
      -1,
      -75000,
      'LMT',
      TimezoneSpan.range.min,
      -3852662325,
      dst: false,
    ),
    Int64List.fromList([ -3852662325000, -1691964000000, -1680472800000, -1664143200000, -1650146400000, -1633903200000, -1617487200000, -1601848800000, -1586037600000, -1570399200000, -1552168800000, -1538344800000, -1522533600000, -1507500000000, -1490565600000, -1473631200000, -1460930400000, -1442786400000, -1428876000000, -1410732000000, -1396216800000, -1379282400000, -1364767200000, -1348437600000, -1333317600000, -1315778400000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1189980000000, -1175464800000, -1159135200000, -1143410400000, -1126476000000, -1111960800000, -1095631200000, -1080511200000, -1063576800000, -1049061600000, -1032127200000, -1017612000000, -1001282400000, -986162400000, -969228000000, -950479200000, -942012000000, -904518000000, -896050800000, -875487600000, -864601200000, -844038000000, -832546800000, -812588400000, -798073200000, -781052400000, -772066800000, -764805600000, -748476000000, -733356000000, -719445600000, -717030000000, -706748400000, -699487200000, -687996000000, -668037600000, -654732000000, -636588000000, -622072800000, -605743200000, -590623200000, -574293600000, -558568800000, -542239200000, -527119200000, -512604000000, -496274400000, -481154400000, -464220000000, -449704800000, -432165600000, -417650400000, -401320800000, -386200800000, -369266400000, -354751200000, -337816800000, -323301600000, -306972000000, -291852000000, -276732000000, -257983200000, -245282400000, -226533600000, -213228000000, -195084000000, -182383200000, -163634400000, -150933600000, -132184800000, -119484000000, -100735200000, -88034400000, -68680800000, -59004000000, -37242000000, 57722400000, 69818400000, 89172000000, 101268000000, 120621600000, 132717600000, 152071200000, 164167200000, 183520800000, 196221600000, 214970400000, 227671200000, 246420000000, 259120800000, 278474400000, 290570400000, 309924000000, 322020000000, 341373600000, 354675600000, 372819600000, 386125200000, 404269200000, 417574800000, 435718800000, 449024400000, 467773200000, 481078800000, 499222800000, 512528400000, 530672400000, 543978000000, 562122000000, 575427600000, 593571600000, 606877200000, 625626000000, 638326800000, 657075600000, 670381200000, 688525200000, 701830800000, 719974800000, 733280400000, 751424400000, 764730000000, 782874000000, 796179600000, 814323600000, 820454400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BDST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT', 'BST', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, true, true, true, true, true, true, true, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone luxembourg = DynamicTimezone(
    'Europe/Luxembourg',
    DynamicTimezoneSpan(
      -1,
      1050000,
      'LMT',
      TimezoneSpan.range.min,
      -2840141850,
      dst: false,
    ),
    Int64List.fromList([ -2840141850000, -2450995200000, -1740355200000, -1693702800000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1613826000000, -1604278800000, -1585530000000, -1574038800000, -1552266000000, -1539997200000, -1520557200000, -1507510800000, -1490576400000, -1473642000000, -1459126800000, -1444006800000, -1427677200000, -1411952400000, -1396227600000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301263200000, -1284328800000, -1269813600000, -1253484000000, -1238364000000, -1221429600000, -1206914400000, -1191189600000, -1175464800000, -1160344800000, -1143410400000, -1127685600000, -1111960800000, -1096840800000, -1080511200000, -1063576800000, -1049061600000, -1033336800000, -1017612000000, -1002492000000, -986162400000, -969228000000, -950479200000, -942012000000, -934668000000, -857257200000, -844556400000, -828226800000, -812502000000, -799293600000, -798073200000, -781052400000, -766623600000, -745455600000, -733273200000, 220921200000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1050000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'BMT', 'WET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone madrid = DynamicTimezone(
    'Europe/Madrid',
    DynamicTimezoneSpan(
      -1,
      -884000,
      'LMT',
      TimezoneSpan.range.min,
      -2177452800,
      dst: false,
    ),
    Int64List.fromList([ -2177452800000, -1631926800000, -1616889600000, -1601168400000, -1585353600000, -1442451600000, -1427673600000, -1379293200000, -1364774400000, -1348448400000, -1333324800000, -1316390400000, -1301270400000, -1284339600000, -1269820800000, -1026954000000, -1017619200000, -1001898000000, -999482400000, -986090400000, -954115200000, -940208400000, -873079200000, -862621200000, -842839200000, -828320400000, -811389600000, -796870800000, -779940000000, -765421200000, -748490400000, -733971600000, -652327200000, -639018000000, 135122400000, 150246000000, 166572000000, 181695600000, 196812000000, 212540400000, 228866400000, 243990000000, 260326800000, 276051600000, 283993200000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WEMT', 'WEST', 'WET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone malta = DynamicTimezone(
    'Europe/Malta',
    DynamicTimezoneSpan(
      -1,
      3484000,
      'LMT',
      TimezoneSpan.range.min,
      -2403478684,
      dst: false,
    ),
    Int64List.fromList([ -2403478684000, -1690765200000, -1680487200000, -1664758800000, -1648951200000, -1635123600000, -1616896800000, -1604278800000, -1585533600000, -1571014800000, -1555293600000, -932432400000, -857257200000, -844556400000, -828226800000, -812588400000, -798073200000, -781052400000, -766717200000, -750898800000, -733359600000, -719456400000, -701917200000, -689209200000, -670460400000, -114051600000, -103168800000, -81997200000, -71715600000, -50547600000, -40266000000, -18493200000, -8211600000, 12956400000, 23238000000, 43801200000, 54687600000, 75855600000, 86742000000, 102380400000, 118105200000, 135730800000, 148518000000, 167187600000, 180489600000, 198637200000, 211939200000, 230086800000, 243388800000, 261536400000, 274838400000, 292986000000, 306288000000, 323312400000, 338342400000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone mariehamn = DynamicTimezone(
    'Europe/Mariehamn',
    DynamicTimezoneSpan(
      -1,
      5989000,
      'LMT',
      TimezoneSpan.range.min,
      -2890258789,
      dst: false,
    ),
    Int64List.fromList([ -2890258789000, -1535938789000, -875671200000, -859773600000, 354672000000, 370396800000, 386121600000, 401846400000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'HMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone minsk = DynamicTimezone(
    'Europe/Minsk',
    DynamicTimezoneSpan(
      -1,
      6616000,
      'LMT',
      TimezoneSpan.range.min,
      -2840147416,
      dst: false,
    ),
    Int64List.fromList([ -2840147416000, -1441158600000, -1247536800000, -899780400000, -857257200000, -844556400000, -828226800000, -812502000000, -804650400000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 631141200000, 670374000000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 846374400000, 859680000000, 877824000000, 891129600000, 909273600000, 922579200000, 941328000000, 954028800000, 972777600000, 985478400000, 1004227200000, 1017532800000, 1035676800000, 1048982400000, 1067126400000, 1080432000000, 1099180800000, 1111881600000, 1130630400000, 1143331200000, 1162080000000, 1174780800000, 1193529600000, 1206835200000, 1224979200000, 1238284800000, 1256428800000, 1269734400000, 1288483200000, 1301184000000 ]),
    Int32List.fromList([ 6600000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000 ]),
    [ 'MMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', '+03' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final Timezone monaco = DynamicTimezone(
    'Europe/Monaco',
    DynamicTimezoneSpan(
      -1,
      561000,
      'LMT',
      TimezoneSpan.range.min,
      -2486592561,
      dst: false,
    ),
    Int64List.fromList([ -2486592561000, -1855958961000, -1689814800000, -1680397200000, -1665363600000, -1648342800000, -1635123600000, -1616893200000, -1604278800000, -1585443600000, -1574038800000, -1552266000000, -1539997200000, -1520557200000, -1507510800000, -1490576400000, -1470618000000, -1459126800000, -1444006800000, -1427677200000, -1411952400000, -1396227600000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301274000000, -1284339600000, -1269824400000, -1253494800000, -1238374800000, -1221440400000, -1206925200000, -1191200400000, -1175475600000, -1160355600000, -1143421200000, -1127696400000, -1111971600000, -1096851600000, -1080522000000, -1063587600000, -1049072400000, -1033347600000, -1017622800000, -1002502800000, -986173200000, -969238800000, -950490000000, -942012000000, -932436000000, -857257200000, -844556400000, -828226800000, -812502000000, -800071200000, -796266000000, -781052400000, -766623600000, 196819200000, 212540400000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 561000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'PMT', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'WEMT', 'WEST', 'WEMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone moscow = DynamicTimezone(
    'Europe/Moscow',
    DynamicTimezoneSpan(
      -1,
      9017000,
      'LMT',
      TimezoneSpan.range.min,
      -2840149817,
      dst: false,
    ),
    Int64List.fromList([ -2840149817000, -1688265017000, -1656819079000, -1641353479000, -1627965079000, -1618716679000, -1596429079000, -1593820800000, -1589860800000, -1542427200000, -1539493200000, -1525323600000, -1522728000000, -1491188400000, -1247536800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 686102400000, 695779200000, 701823600000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000 ]),
    Int32List.fromList([ 9017000, 9079000, 12679000, 9079000, 16279000, 12679000, 16279000, 14400000, 10800000, 14400000, 18000000, 14400000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000 ]),
    [ 'MMT', 'MMT', 'MST', 'MMT', 'MDST', 'MST', 'MDST', 'MSD', 'MSK', 'MSD', '+05', 'MSD', 'MSK', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'MSK' ],
    [ false, false, true, false, true, true, true, true, false, true, true, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone nicosia = DynamicTimezone(
    'Europe/Nicosia',
    DynamicTimezoneSpan(
      -1,
      8008000,
      'LMT',
      TimezoneSpan.range.min,
      -1518920008,
      dst: false,
    ),
    Int64List.fromList([ -1518920008000, 166572000000, 182293200000, 200959200000, 213829200000, 228866400000, 243982800000, 260316000000, 276123600000, 291765600000, 307486800000, 323820000000, 338936400000, 354664800000, 370386000000, 386114400000, 401835600000, 417564000000, 433285200000, 449013600000, 465339600000, 481068000000, 496789200000, 512517600000, 528238800000, 543967200000, 559688400000, 575416800000, 591138000000, 606866400000, 622587600000, 638316000000, 654642000000, 670370400000, 686091600000, 701820000000, 717541200000, 733269600000, 748990800000, 764719200000, 780440400000, 796168800000, 811890000000, 828223200000, 843944400000, 859672800000, 875394000000, 891122400000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone oslo = DynamicTimezone(
    'Europe/Oslo',
    DynamicTimezoneSpan(
      -1,
      3208000,
      'LMT',
      TimezoneSpan.range.min,
      -2422054408,
      dst: false,
    ),
    Int64List.fromList([ -2422054408000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -776563200000, -765936000000, -761180400000, -757386000000, -748479600000, -733273200000, -717631200000, -714610800000, -710380800000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, false, true, false, true, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone paris = DynamicTimezone(
    'Europe/Paris',
    DynamicTimezoneSpan(
      -1,
      561000,
      'LMT',
      TimezoneSpan.range.min,
      -2486592561,
      dst: false,
    ),
    Int64List.fromList([ -2486592561000, -1855958961000, -1689814800000, -1680397200000, -1665363600000, -1648342800000, -1635123600000, -1616893200000, -1604278800000, -1585443600000, -1574038800000, -1552266000000, -1539997200000, -1520557200000, -1507510800000, -1490576400000, -1470618000000, -1459126800000, -1444006800000, -1427677200000, -1411952400000, -1396227600000, -1379293200000, -1364778000000, -1348448400000, -1333328400000, -1316394000000, -1301274000000, -1284339600000, -1269824400000, -1253494800000, -1238374800000, -1221440400000, -1206925200000, -1191200400000, -1175475600000, -1160355600000, -1143421200000, -1127696400000, -1111971600000, -1096851600000, -1080522000000, -1063587600000, -1049072400000, -1033347600000, -1017622800000, -1002502800000, -986173200000, -969238800000, -950490000000, -942012000000, -932436000000, -857257200000, -844556400000, -828226800000, -812502000000, -800071200000, -796266000000, -781052400000, -766623600000, 196819200000, 212540400000, 228877200000, 243997200000, 260326800000, 276051600000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 561000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'PMT', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'WET', 'WEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'WEMT', 'WEST', 'WEMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone podgorica = DynamicTimezone(
    'Europe/Podgorica',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone prague = DynamicTimezone(
    'Europe/Prague',
    DynamicTimezoneSpan(
      -1,
      3464000,
      'LMT',
      TimezoneSpan.range.min,
      -3786829064,
      dst: false,
    ),
    Int64List.fromList([ -3786829064000, -2469401864000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -777866400000, -765327600000, -746578800000, -733359600000, -728517600000, -721260000000, -716425200000, -701910000000, -684975600000, -670460400000, -654217200000, -639010800000, 283993200000, 291776400000, 307501200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3464000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 0, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'PMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'GMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone riga = DynamicTimezone(
    'Europe/Riga',
    DynamicTimezoneSpan(
      -1,
      5794000,
      'LMT',
      TimezoneSpan.range.min,
      -2840146594,
      dst: false,
    ),
    Int64List.fromList([ -2840146594000, -1632008194000, -1618702594000, -1601681794000, -1597275394000, -1377308194000, -928029600000, -899521200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -795834000000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622598400000, 638323200000, 654652800000, 670377600000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 843955200000, 853797600000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 951775200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5794000, 9394000, 5794000, 9394000, 5794000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'RMT', 'LST', 'RMT', 'LST', 'RMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, true, false, true, false, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone rome = DynamicTimezone(
    'Europe/Rome',
    DynamicTimezoneSpan(
      -1,
      2996000,
      'LMT',
      TimezoneSpan.range.min,
      -3252098996,
      dst: false,
    ),
    Int64List.fromList([ -3252098996000, -2403565200000, -1690765200000, -1680487200000, -1664758800000, -1648951200000, -1635123600000, -1616896800000, -1604278800000, -1585533600000, -1571014800000, -1555293600000, -932432400000, -857257200000, -844556400000, -830311200000, -828226800000, -812502000000, -807156000000, -798073200000, -781052400000, -766717200000, -750898800000, -733359600000, -719456400000, -701917200000, -689209200000, -670460400000, -114051600000, -103168800000, -81997200000, -71715600000, -50547600000, -40266000000, -18493200000, -8211600000, 12956400000, 23238000000, 43801200000, 54687600000, 75855600000, 86742000000, 107910000000, 118191600000, 138754800000, 149641200000, 170809200000, 181090800000, 202258800000, 212540400000, 233103600000, 243990000000, 265158000000, 276044400000, 296607600000, 307494000000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone samara = DynamicTimezone(
    'Europe/Samara',
    DynamicTimezoneSpan(
      -1,
      12020000,
      'LMT',
      TimezoneSpan.range.min,
      -1593820800,
      dst: false,
    ),
    Int64List.fromList([ -1593820800000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591141600000, 606866400000, 622594800000, 638319600000, 654649200000, 670374000000, 686102400000, 687916800000, 701820000000, 717544800000, 733269600000, 748994400000, 764719200000, 780444000000, 796168800000, 811893600000, 828223200000, 846367200000, 859672800000, 877816800000, 891122400000, 909266400000, 922572000000, 941320800000, 954021600000, 972770400000, 985471200000, 1004220000000, 1017525600000, 1035669600000, 1048975200000, 1067119200000, 1080424800000, 1099173600000, 1111874400000, 1130623200000, 1143324000000, 1162072800000, 1174773600000, 1193522400000, 1206828000000, 1224972000000, 1238277600000, 1256421600000, 1269727200000, 1288479600000, 1301180400000 ]),
    Int32List.fromList
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+04', '+03', '+04', '+03', '+03', '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+04', '+03', '+04' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final Timezone sanMarino = DynamicTimezone(
    'Europe/San_Marino',
    DynamicTimezoneSpan(
      -1,
      2996000,
      'LMT',
      TimezoneSpan.range.min,
      -3252098996,
      dst: false,
    ),
    Int64List.fromList([ -3252098996000, -2403565200000, -1690765200000, -1680487200000, -1664758800000, -1648951200000, -1635123600000, -1616896800000, -1604278800000, -1585533600000, -1571014800000, -1555293600000, -932432400000, -857257200000, -844556400000, -830311200000, -828226800000, -812502000000, -807156000000, -798073200000, -781052400000, -766717200000, -750898800000, -733359600000, -719456400000, -701917200000, -689209200000, -670460400000, -114051600000, -103168800000, -81997200000, -71715600000, -50547600000, -40266000000, -18493200000, -8211600000, 12956400000, 23238000000, 43801200000, 54687600000, 75855600000, 86742000000, 107910000000, 118191600000, 138754800000, 149641200000, 170809200000, 181090800000, 202258800000, 212540400000, 233103600000, 243990000000, 265158000000, 276044400000, 296607600000, 307494000000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone sarajevo = DynamicTimezone(
    'Europe/Sarajevo',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone saratov = DynamicTimezone(
    'Europe/Saratov',
    DynamicTimezoneSpan(
      -1,
      11058000,
      'LMT',
      TimezoneSpan.range.min,
      -1593820800,
      dst: false,
    ),
    Int64List.fromList([ -1593820800000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 701820000000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000, 1480806000000 ]),
    Int32List.fromList
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false ],
  );

  static final Timezone simferopol = DynamicTimezone(
    'Europe/Simferopol',
    DynamicTimezoneSpan(
      -1,
      8184000,
      'LMT',
      TimezoneSpan.range.min,
      -2840148984,
      dst: false,
    ),
    Int64List.fromList([ -2840148984000, -1441160160000, -1247536800000, -888894000000, -857257200000, -844556400000, -828226800000, -812502000000, -811648800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 631141200000, 646786800000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 767739600000, 780447600000, 796172400000, 811897200000, 828219600000, 846374400000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396137600000, 1414274400000 ]),
    Int32List.fromList([ 8160000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 14400000, 10800000 ]),
    [ 'SMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'MSK', 'MSK' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final Timezone skopje = DynamicTimezone(
    'Europe/Skopje',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone sofia = DynamicTimezone(
    'Europe/Sofia',
    DynamicTimezoneSpan(
      -1,
      5596000,
      'LMT',
      TimezoneSpan.range.min,
      -2840146396,
      dst: false,
    ),
    Int64List.fromList([ -2840146396000, -2369527016000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -781048800000, 291762000000, 307576800000, 323816400000, 339026400000, 355266000000, 370393200000, 386715600000, 401846400000, 417571200000, 433296000000, 449020800000, 465350400000, 481075200000, 496800000000, 512524800000, 528249600000, 543974400000, 559699200000, 575424000000, 591148800000, 606873600000, 622598400000, 638323200000, 654652800000, 662680800000, 670370400000, 686091600000, 701820000000, 717541200000, 733269600000, 748990800000, 764719200000, 780440400000, 796168800000, 811890000000, 828223200000, 846363600000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 7016000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'IMT', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone stockholm = DynamicTimezone(
    'Europe/Stockholm',
    DynamicTimezoneSpan(
      -1,
      3208000,
      'LMT',
      TimezoneSpan.range.min,
      -2422054408,
      dst: false,
    ),
    Int64List.fromList([ -2422054408000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -776563200000, -765936000000, -761180400000, -757386000000, -748479600000, -733273200000, -717631200000, -714610800000, -710380800000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, false, true, false, true, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone tallinn = DynamicTimezone(
    'Europe/Tallinn',
    DynamicTimezoneSpan(
      -1,
      5940000,
      'LMT',
      TimezoneSpan.range.min,
      -2840146740,
      dst: false,
    ),
    Int64List.fromList([ -2840146740000, -1638322740000, -1632006000000, -1618700400000, -1593824400000, -1535938740000, -927943200000, -892954800000, -857257200000, -844556400000, -828226800000, -812502000000, -797652000000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622598400000, 638323200000, 654652800000, 670377600000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 846374400000, 859680000000, 877824000000, 891129600000, 906411600000, 909277200000, 922582800000, 941331600000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5940000, 3600000, 7200000, 3600000, 5940000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'TMT', 'CET', 'CEST', 'CET', 'TMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone tirane = DynamicTimezone(
    'Europe/Tirane',
    DynamicTimezoneSpan(
      -1,
      4760000,
      'LMT',
      TimezoneSpan.range.min,
      -1767230360,
      dst: false,
    ),
    Int64List.fromList([ -1767230360000, -932346000000, -857257200000, -844556400000, -843519600000, 136854000000, 149896800000, 168130800000, 181432800000, 199839600000, 213141600000, 231894000000, 244591200000, 263257200000, 276040800000, 294706800000, 307490400000, 326156400000, 339458400000, 357087600000, 370389600000, 389142000000, 402444000000, 419468400000, 433807200000, 449622000000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone tiraspol = DynamicTimezone(
    'Europe/Tiraspol',
    DynamicTimezoneSpan(
      -1,
      6920000,
      'LMT',
      TimezoneSpan.range.min,
      -2840147720,
      dst: false,
    ),
    Int64List.fromList([ -2840147720000, -1637114100000, -1213148664000, -1187056800000, -1175479200000, -1159754400000, -1144029600000, -1127700000000, -1111975200000, -1096250400000, -1080525600000, -1064800800000, -1049076000000, -1033351200000, -1017626400000, -1001901600000, -986176800000, -970452000000, -954727200000, -927165600000, -898138800000, -857257200000, -844556400000, -828226800000, -812502000000, -800157600000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 641944800000, 654652800000, 670377600000, 686102400000, 694216800000, 701820000000, 717541200000, 733269600000, 748990800000, 764719200000, 780440400000, 796168800000, 811890000000, 828223200000, 846363600000, 859680000000, 877824000000, 891129600000, 909273600000, 922579200000, 941328000000, 954028800000, 972777600000, 985478400000, 1004227200000, 1017532800000, 1035676800000, 1048982400000, 1067126400000, 1080432000000, 1099180800000, 1111881600000, 1130630400000, 1143331200000, 1162080000000, 1174780800000, 1193529600000, 1206835200000, 1224979200000, 1238284800000, 1256428800000, 1269734400000, 1288483200000, 1301184000000, 1319932800000, 1332633600000, 1351382400000, 1364688000000, 1382832000000, 1396137600000, 1414281600000, 1427587200000, 1445731200000, 1459036800000, 1477785600000, 1490486400000, 1509235200000, 1521936000000, 1540684800000, 1553990400000, 1572134400000, 1585440000000, 1603584000000, 1616889600000, 1635638400000, 1648339200000, 1667088000000, 1679788800000, 1698537600000, 1711843200000, 1729987200000, 1743292800000, 1761436800000, 1774742400000, 1792886400000, 1806192000000, 1824940800000, 1837641600000, 1856390400000, 1869091200000, 1887840000000, 1901145600000, 1919289600000, 1932595200000, 1950739200000, 1964044800000, 1982793600000, 1995494400000, 2014243200000, 2026944000000, 2045692800000, 2058393600000, 2077142400000, 2090448000000, 2108592000000, 2121897600000, 2140041600000 ]),
    Int32List.fromList([ 6900000, 6264000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'CMT', 'BMT', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone ulyanovsk = DynamicTimezone(
    'Europe/Ulyanovsk',
    DynamicTimezoneSpan(
      -1,
      11616000,
      'LMT',
      TimezoneSpan.range.min,
      -1593820800,
      dst: false,
    ),
    Int64List.fromList([ -1593820800000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591141600000, 606866400000, 622594800000, 638319600000, 654649200000, 670374000000, 686102400000, 695779200000, 701823600000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000, 1459033200000 ]),
    Int32List.fromList([ 10800000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 18000000, 14400000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000 ]),
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+04', '+03', '+04', '+03', '+03', '+02', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04', '+03', '+04' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false ],
  );

  static final Timezone uzhgorod = DynamicTimezone(
    'Europe/Uzhgorod',
    DynamicTimezoneSpan(
      -1,
      7324000,
      'LMT',
      TimezoneSpan.range.min,
      -2840148124,
      dst: false,
    ),
    Int64List.fromList([ -2840148124000, -1441159324000, -1247536800000, -892522800000, -857257200000, -844556400000, -828226800000, -825382800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 646783200000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 831934800000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 7324000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'KMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vaduz = DynamicTimezone(
    'Europe/Vaduz',
    DynamicTimezoneSpan(
      -1,
      2048000,
      'LMT',
      TimezoneSpan.range.min,
      -3675198848,
      dst: false,
    ),
    Int64List.fromList([ -3675198848000, -2385246586000, -904435200000, -891129600000, -872985600000, -859680000000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1786000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vatican = DynamicTimezone(
    'Europe/Vatican',
    DynamicTimezoneSpan(
      -1,
      2996000,
      'LMT',
      TimezoneSpan.range.min,
      -3252098996,
      dst: false,
    ),
    Int64List.fromList([ -3252098996000, -2403565200000, -1690765200000, -1680487200000, -1664758800000, -1648951200000, -1635123600000, -1616896800000, -1604278800000, -1585533600000, -1571014800000, -1555293600000, -932432400000, -857257200000, -844556400000, -830311200000, -828226800000, -812502000000, -807156000000, -798073200000, -781052400000, -766717200000, -750898800000, -733359600000, -719456400000, -701917200000, -689209200000, -670460400000, -114051600000, -103168800000, -81997200000, -71715600000, -50547600000, -40266000000, -18493200000, -8211600000, 12956400000, 23238000000, 43801200000, 54687600000, 75855600000, 86742000000, 107910000000, 118191600000, 138754800000, 149641200000, 170809200000, 181090800000, 202258800000, 212540400000, 233103600000, 243990000000, 265158000000, 276044400000, 296607600000, 307494000000, 315529200000, 323830800000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList
    [ 'RMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vienna = DynamicTimezone(
    'Europe/Vienna',
    DynamicTimezoneSpan(
      -1,
      3921000,
      'LMT',
      TimezoneSpan.range.min,
      -2422055121,
      dst: false,
    ),
    Int64List.fromList([ -2422055121000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1577926800000, -1569711600000, -1555801200000, -938905200000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -781052400000, -780188400000, -757386000000, -748479600000, -733273200000, -717634800000, -701910000000, -684975600000, -670460400000, 323823600000, 338940000000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone vilnius = DynamicTimezone(
    'Europe/Vilnius',
    DynamicTimezoneSpan(
      -1,
      6076000,
      'LMT',
      TimezoneSpan.range.min,
      -2840146876,
      dst: false,
    ),
    Int64List.fromList([ -2840146876000, -1672536240000, -1585100136000, -1561251600000, -1553565600000, -928198800000, -900126000000, -857257200000, -844556400000, -828226800000, -812502000000, -802144800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622598400000, 638323200000, 654652800000, 670377600000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 846374400000, 859680000000, 877824000000, 883605600000, 891133200000, 909277200000, 922582800000, 941331600000, 1041372000000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5040000, 5736000, 3600000, 7200000, 3600000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 7200000, 7200000, 3600000, 7200000, 7200000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'WMT', 'KMT', 'CET', 'EET', 'CET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EET', 'CEST', 'CET', 'CEST', 'EET', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone volgograd = DynamicTimezone(
    'Europe/Volgograd',
    DynamicTimezoneSpan(
      -1,
      10660000,
      'LMT',
      TimezoneSpan.range.min,
      -1577761060,
      dst: false,
    ),
    Int64List.fromList([ -1577761060000, -1247540400000, 354916800000, 370724400000, 386452800000, 402260400000, 417988800000, 433796400000, 449611200000, 465343200000, 481068000000, 496792800000, 512517600000, 528242400000, 543967200000, 559692000000, 575416800000, 591145200000, 606870000000, 622594800000, 638319600000, 654649200000, 670374000000, 701820000000, 717548400000, 733273200000, 748998000000, 764722800000, 780447600000, 796172400000, 811897200000, 828226800000, 846370800000, 859676400000, 877820400000, 891126000000, 909270000000, 922575600000, 941324400000, 954025200000, 972774000000, 985474800000, 1004223600000, 1017529200000, 1035673200000, 1048978800000, 1067122800000, 1080428400000, 1099177200000, 1111878000000, 1130626800000, 1143327600000, 1162076400000, 1174777200000, 1193526000000, 1206831600000, 1224975600000, 1238281200000, 1256425200000, 1269730800000, 1288479600000, 1301180400000, 1414274400000, 1540681200000, 1609020000000 ]),
    Int32List.fromList
    [ '+03', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', '+05', '+04', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', '+04', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSK', 'MSK', '+04', 'MSK' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, false ],
  );

  static final Timezone warsaw = DynamicTimezone(
    'Europe/Warsaw',
    DynamicTimezoneSpan(
      -1,
      5040000,
      'LMT',
      TimezoneSpan.range.min,
      -2840145840,
      dst: false,
    ),
    Int64List.fromList([ -2840145840000, -1717032240000, -1693706400000, -1680483600000, -1663455600000, -1650150000000, -1632006000000, -1618700400000, -1600473600000, -1587168000000, -1501725600000, -931734000000, -857257200000, -844556400000, -828226800000, -812502000000, -796874400000, -796608000000, -778726800000, -762660000000, -748486800000, -733273200000, -715215600000, -701910000000, -684975600000, -670460400000, -654130800000, -639010800000, -397094400000, -386812800000, -371088000000, -355363200000, -334195200000, -323308800000, -307584000000, -291859200000, -271296000000, -260409600000, -239846400000, -228960000000, -208396800000, -197510400000, -176342400000, -166060800000, 220921200000, 228873600000, 243993600000, 260323200000, 276048000000, 291772800000, 307497600000, 323827200000, 338947200000, 354672000000, 370396800000, 386121600000, 401846400000, 417571200000, 433296000000, 449020800000, 465350400000, 481075200000, 496800000000, 512524800000, 528249600000, 543974400000, 559699200000, 567990000000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 5040000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),
    [ 'WMT', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'EET', 'EEST', 'EET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET', 'CEST', 'CET' ],
    [ false, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone zagreb = DynamicTimezone(
    'Europe/Zagreb',
    DynamicTimezoneSpan(
      -1,
      4920000,
      'LMT',
      TimezoneSpan.range.min,
      -2713915320,
      dst: false,
    ),
    Int64List.fromList([ -2713915320000, -905824800000, -857257200000, -844556400000, -828226800000, -812502000000, -796777200000, -788922000000, -777942000000, -766623600000, 407199600000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone zaporozhye = DynamicTimezone(
    'Europe/Zaporozhye',
    DynamicTimezoneSpan(
      -1,
      7324000,
      'LMT',
      TimezoneSpan.range.min,
      -2840148124,
      dst: false,
    ),
    Int64List.fromList([ -2840148124000, -1441159324000, -1247536800000, -892522800000, -857257200000, -844556400000, -828226800000, -825382800000, 354920400000, 370728000000, 386456400000, 402264000000, 417992400000, 433800000000, 449614800000, 465346800000, 481071600000, 496796400000, 512521200000, 528246000000, 543970800000, 559695600000, 575420400000, 591145200000, 606870000000, 622594800000, 638319600000, 646783200000, 686102400000, 701827200000, 717552000000, 733276800000, 749001600000, 764726400000, 780451200000, 796176000000, 811900800000, 828230400000, 831934800000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 7324000, 7200000, 10800000, 7200000, 3600000, 7200000, 3600000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 14400000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000, 10800000, 7200000 ]),
    [ 'KMT', 'EET', 'MSK', 'CEST', 'CET', 'CEST', 'CET', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'MSK', 'MSD', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET', 'EEST', 'EET' ],
    [ false, false, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone zurich = DynamicTimezone(
    'Europe/Zurich',
    DynamicTimezoneSpan(
      -1,
      2048000,
      'LMT',
      TimezoneSpan.range.min,
      -3675198848,
      dst: false,
    ),
    Int64List.fromList([ -3675198848000, -2385246586000, -904435200000, -891129600000, -872985600000, -859680000000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ 1786000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000, 7200000, 3600000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


