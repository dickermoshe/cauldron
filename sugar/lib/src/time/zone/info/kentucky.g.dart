// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Kentucky on Never {
  static final Timezone louisville = DynamicTimezone(
    'America/Kentucky/Louisville',
    DynamicTimezoneSpan(
      -1,
      -20582000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -1535904000, -1525280400, -905097600, -891795600, -880214400, -769395600, -765392400, -747251940, -744224400, -620841600, -608144400, -589392000, -576090000, -557942400, -544640400, -526492800, -513190800, -495043200, -481741200, -463593600, -450291600, -431539200, -415818000, -400089600, -384368400, -368640000, -352918800, -337190400, -321469200, -305740800, -289414800, -273686400, -266432400, -52938000, -37216800, -21488400, -5767200, 9961200, 25682400, 41410800, 57736800, 73465200, 89186400, 104914800, 120636000, 126687600, 152089200, 162370800, 183535200, 199263600, 215589600, 230713200, 247039200, 262767600, 278488800, 294217200, 309938400, 325666800, 341388000, 357116400, 372837600, 388566000, 404892000, 420015600, 436341600, 452070000, 467791200, 483519600, 499240800, 514969200, 530690400, 544604400, 562140000, 576054000, 594194400, 607503600, 625644000, 638953200, 657093600, 671007600, 688543200, 702457200, 719992800, 733906800, 752047200, 765356400, 783496800, 796806000, 814946400, 828860400, 846396000, 860310000, 877845600, 891759600, 909295200, 923209200, 941349600, 954658800, 972799200, 986108400, 1004248800, 1018162800, 1035698400, 1049612400, 1067148000, 1081062000, 1099202400, 1112511600, 1130652000, 1143961200, 1162101600, 1173596400 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final Timezone monticello = DynamicTimezone(
    'America/Kentucky/Monticello',
    DynamicTimezoneSpan(
      -1,
      -20364000000,
      'LMT',
      TimezoneSpan.range.min.value,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200, -1633276800, -1615136400, -1601827200, -1583686800, -880214400, -769395600, -765392400, -52934400, -37213200, -21484800, -5763600, 9964800, 25686000, 41414400, 57740400, 73468800, 89190000, 104918400, 120639600, 126691200, 152089200, 162374400, 183538800, 199267200, 215593200, 230716800, 247042800, 262771200, 278492400, 294220800, 309942000, 325670400, 341391600, 357120000, 372841200, 388569600, 404895600, 420019200, 436345200, 452073600, 467794800, 483523200, 499244400, 514972800, 530694000, 544608000, 562143600, 576057600, 594198000, 607507200, 625647600, 638956800, 657097200, 671011200, 688546800, 702460800, 719996400, 733910400, 752050800, 765360000, 783500400, 796809600, 814950000, 828864000, 846399600, 860313600, 877849200, 891763200, 909298800, 923212800, 941353200, 954662400, 972802800, 986108400, 1004248800, 1018162800, 1035698400, 1049612400, 1067148000, 1081062000, 1099202400, 1112511600, 1130652000, 1143961200, 1162101600, 1173596400 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

}


