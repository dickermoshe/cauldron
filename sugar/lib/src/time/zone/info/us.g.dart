// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Us on Never {
  static final Timezone alaska = DynamicTimezone(
    'US/Alaska',
    DynamicTimezoneSpan(
      -1,
      50424000,
      'LMT',
      TimezoneSpan.range.min,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188951224000, -880200000000, -769395600000, -765378000000, -86882400000, -21470400000, -5749200000, 9979200000, 25700400000, 41428800000, 57754800000, 73483200000, 89204400000, 104932800000, 120654000000, 126705600000, 152103600000, 162388800000, 183553200000, 199281600000, 215607600000, 230731200000, 247057200000, 262785600000, 278506800000, 294235200000, 309956400000, 325684800000, 341406000000, 357134400000, 372855600000, 388584000000, 404910000000, 420033600000, 436359600000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -35976000, -36000000, -32400000, -32400000, -36000000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'AST', 'AWT', 'APT', 'AST', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone aleutian = DynamicTimezone(
    'US/Aleutian',
    DynamicTimezoneSpan(
      -1,
      44002000,
      'LMT',
      TimezoneSpan.range.min,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188944802000, -880196400000, -769395600000, -765374400000, -86878800000, -21466800000, -5745600000, 9982800000, 25704000000, 41432400000, 57758400000, 73486800000, 89208000000, 104936400000, 120657600000, 126709200000, 152107200000, 162392400000, 183556800000, 199285200000, 215611200000, 230734800000, 247060800000, 262789200000, 278510400000, 294238800000, 309960000000, 325688400000, 341409600000, 357138000000, 372859200000, 388587600000, 404913600000, 420037200000, 436363200000, 439034400000, 452088000000, 467809200000, 483537600000, 499258800000, 514987200000, 530708400000, 544622400000, 562158000000, 576072000000, 594212400000, 607521600000, 625662000000, 638971200000, 657111600000, 671025600000, 688561200000, 702475200000, 720010800000, 733924800000, 752065200000, 765374400000, 783514800000, 796824000000, 814964400000, 828878400000, 846414000000, 860328000000, 877863600000, 891777600000, 909313200000, 923227200000, 941367600000, 954676800000, 972817200000, 986126400000, 1004266800000, 1018180800000, 1035716400000, 1049630400000, 1067166000000, 1081080000000, 1099220400000, 1112529600000, 1130670000000, 1143979200000, 1162119600000, 1173614400000, 1194174000000, 1205064000000, 1225623600000, 1236513600000, 1257073200000, 1268568000000, 1289127600000, 1300017600000, 1320577200000, 1331467200000, 1352026800000, 1362916800000, 1383476400000, 1394366400000, 1414926000000, 1425816000000, 1446375600000, 1457870400000, 1478430000000, 1489320000000, 1509879600000, 1520769600000, 1541329200000, 1552219200000, 1572778800000, 1583668800000, 1604228400000, 1615723200000, 1636282800000, 1647172800000, 1667732400000, 1678622400000, 1699182000000, 1710072000000, 1730631600000, 1741521600000, 1762081200000, 1772971200000, 1793530800000, 1805025600000, 1825585200000, 1836475200000, 1857034800000, 1867924800000, 1888484400000, 1899374400000, 1919934000000, 1930824000000, 1951383600000, 1962878400000, 1983438000000, 1994328000000, 2014887600000, 2025777600000, 2046337200000, 2057227200000, 2077786800000, 2088676800000, 2109236400000, 2120126400000, 2140686000000 ]),
    Int32List.fromList([ -42398000, -39600000, -36000000, -36000000, -39600000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -36000000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000 ]),
    [ 'LMT', 'NST', 'NWT', 'NPT', 'NST', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'AHST', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone arizona = DynamicTimezone(
    'US/Arizona',
    DynamicTimezoneSpan(
      -1,
      -26898000,
      'LMT',
      TimezoneSpan.range.min,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -880210800000, -820519140000, -812653140000, -796845540000, -84380400000, -68659200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MST', 'MWT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone central = DynamicTimezone(
    'US/Central',
    DynamicTimezoneSpan(
      -1,
      -21036000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -1563724800000, -1551632400000, -1538928000000, -1520182800000, -1504454400000, -1491757200000, -1473004800000, -1459702800000, -1441555200000, -1428253200000, -1410105600000, -1396803600000, -1378656000000, -1365354000000, -1347206400000, -1333904400000, -1315152000000, -1301850000000, -1283702400000, -1270400400000, -1252252800000, -1238950800000, -1220803200000, -1207501200000, -1189353600000, -1176051600000, -1157299200000, -1144602000000, -1125849600000, -1112547600000, -1094400000000, -1081098000000, -1067788800000, -1045414800000, -1031500800000, -1018198800000, -1000051200000, -986749200000, -967996800000, -955299600000, -936547200000, -923245200000, -905097600000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -384368400000, -368640000000, -352918800000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -257965200000, -242236800000, -226515600000, -210787200000, -195066000000, -179337600000, -163616400000, -147888000000, -131562000000, -116438400000, -100112400000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eastIndiana = DynamicTimezone(
    'US/East-Indiana',
    DynamicTimezoneSpan(
      -1,
      -20678000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -900259200000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -386787600000, -368640000000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eastern = DynamicTimezone(
    'US/Eastern',
    DynamicTimezoneSpan(
      -1,
      -17762000,
      'LMT',
      TimezoneSpan.range.min,
      -2717650800,
      dst: false,
    ),
    Int64List.fromList([ -2717650800000, -1633280400000, -1615140000000, -1601830800000, -1583690400000, -1570381200000, -1551636000000, -1536512400000, -1523210400000, -1504458000000, -1491760800000, -1473008400000, -1459706400000, -1441558800000, -1428256800000, -1410109200000, -1396807200000, -1378659600000, -1365357600000, -1347210000000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1189357200000, -1176055200000, -1157302800000, -1144605600000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -923248800000, -905101200000, -891799200000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715798800000, -702496800000, -684349200000, -671047200000, -652899600000, -639597600000, -620845200000, -608148000000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -447271200000, -431542800000, -415821600000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 126687600000, 152085600000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone hawaii = DynamicTimezone(
    'US/Hawaii',
    DynamicTimezoneSpan(
      -1,
      -37886000,
      'LMT',
      TimezoneSpan.range.min,
      -2334101314,
      dst: false,
    ),
    Int64List.fromList([ -2334101314000, -1157283000000, -1155436200000, -880198200000, -769395600000, -765376200000, -712150200000 ]),
    Int32List.fromList([ -37800000, -34200000, -37800000, -34200000, -34200000, -37800000, -36000000 ]),
    [ 'HST', 'HDT', 'HST', 'HWT', 'HPT', 'HST', 'HST' ],
    [ false, true, false, true, true, false, false ],
  );

  static final Timezone indianaStarke = DynamicTimezone(
    'US/Indiana-Starke',
    DynamicTimezoneSpan(
      -1,
      -20790000,
      'LMT',
      TimezoneSpan.range.min,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -257965200000, -242236800000, -195066000000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone michigan = DynamicTimezone(
    'US/Michigan',
    DynamicTimezoneSpan(
      -1,
      -19931000,
      'LMT',
      TimezoneSpan.range.min,
      -2051202469,
      dst: false,
    ),
    Int64List.fromList([ -2051202469000, -1724083200000, -880218000000, -769395600000, -765396000000, -684349200000, -671047200000, -80506740000, -68666400000, -52938000000, -37216800000, 104914800000, 120636000000, 126687600000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -14400000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone mountain = DynamicTimezone(
    'US/Mountain',
    DynamicTimezoneSpan(
      -1,
      -25196000,
      'LMT',
      TimezoneSpan.range.min,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -1570374000000, -1551628800000, -1538924400000, -1534089600000, -880210800000, -769395600000, -765388800000, -147884400000, -131558400000, -116434800000, -100108800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 126694800000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone pacific = DynamicTimezone(
    'US/Pacific',
    DynamicTimezoneSpan(
      -1,
      -28378000,
      'LMT',
      TimezoneSpan.range.min,
      -2717640000,
      dst: false,
    ),
    Int64List.fromList([ -2717640000000, -1633269600000, -1615129200000, -1601820000000, -1583679600000, -880207200000, -769395600000, -765385200000, -687967140000, -662655600000, -620838000000, -608137200000, -589388400000, -576082800000, -557938800000, -544633200000, -526489200000, -513183600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, -273682800000, -260982000000, -242233200000, -226508400000, -210783600000, -195058800000, -179334000000, -163609200000, -147884400000, -131554800000, -116434800000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList([ -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000 ]),
    [ 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone samoa = DynamicTimezone(
    'US/Samoa',
    DynamicTimezoneSpan(
      -1,
      45432000,
      'LMT',
      TimezoneSpan.range.min,
      -2445424632,
      dst: false,
    ),
    Int64List.fromList([ -2445424632000, -1861879032000 ]),
    Int32List.fromList([ -40968000, -39600000 ]),
    [ 'LMT', 'SST' ],
    [ false, false ],
  );

}


