// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Canada on Never {
  static final Timezone atlantic = DynamicTimezone(
    'Canada/Atlantic',
    DynamicTimezoneSpan(
      -1,
      -15264000000,
      'LMT',
      TimezoneSpan.range.min,
      -2131645536,
      dst: false,
    ),
    Int64List.fromList([ -2131645536, -1696276800, -1680469200, -1632074400, -1615143600, -1566763200, -1557090000, -1535486400, -1524949200, -1504468800, -1493413200, -1472414400, -1461963600, -1440964800, -1429390800, -1409515200, -1396731600, -1376856000, -1366491600, -1346616000, -1333832400, -1313956800, -1303678800, -1282507200, -1272661200, -1251057600, -1240088400, -1219608000, -1207429200, -1188763200, -1175979600, -1157313600, -1143925200, -1124049600, -1113771600, -1091390400, -1081026000, -1059854400, -1050786000, -1030910400, -1018126800, -999460800, -986677200, -965592000, -955227600, -935956800, -923173200, -904507200, -891723600, -880221600, -769395600, -765399600, -747252000, -733950000, -715802400, -702500400, -684352800, -671050800, -652903200, -639601200, -589399200, -576097200, -557949600, -544647600, -526500000, -513198000, -495050400, -481748400, -431546400, -418244400, -400096800, -386794800, -368647200, -355345200, -337197600, -323895600, -242244000, -226522800, -210794400, -195073200, -179344800, -163623600, -147895200, -131569200, -116445600, -100119600, -84391200, -68670000, -52941600, -37220400, -21492000, -5770800, 9957600, 25678800, 41407200, 57733200, 73461600, 89182800, 104911200, 120632400, 136360800, 152082000, 167810400, 183531600, 199260000, 215586000, 230709600, 247035600, 262764000, 278485200, 294213600, 309934800, 325663200, 341384400, 357112800, 372834000, 388562400, 404888400, 420012000, 436338000, 452066400, 467787600, 483516000, 499237200, 514965600, 530686800, 544600800, 562136400, 576050400, 594190800, 607500000, 625640400, 638949600, 657090000, 671004000, 688539600, 702453600, 719989200, 733903200, 752043600, 765352800, 783493200, 796802400, 814942800, 828856800, 846392400, 860306400, 877842000, 891756000, 909291600, 923205600, 941346000, 954655200, 972795600, 986104800, 1004245200, 1018159200, 1035694800, 1049608800, 1067144400, 1081058400, 1099198800, 1112508000, 1130648400, 1143957600, 1162098000, 1173592800, 1194152400, 1205042400, 1225602000, 1236492000, 1257051600, 1268546400, 1289106000, 1299996000, 1320555600, 1331445600, 1352005200, 1362895200, 1383454800, 1394344800, 1414904400, 1425794400, 1446354000, 1457848800, 1478408400, 1489298400, 1509858000, 1520748000, 1541307600, 1552197600, 1572757200, 1583647200, 1604206800, 1615701600, 1636261200, 1647151200, 1667710800, 1678600800, 1699160400, 1710050400, 1730610000, 1741500000, 1762059600, 1772949600, 1793509200, 1805004000, 1825563600, 1836453600, 1857013200, 1867903200, 1888462800, 1899352800, 1919912400, 1930802400, 1951362000, 1962856800, 1983416400, 1994306400, 2014866000, 2025756000, 2046315600, 2057205600, 2077765200, 2088655200, 2109214800, 2120104800, 2140664400 ]),
    Int8List.fromList([ -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4, -3, -4 ]),
    3600000000,
    [ 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'AWT', 'APT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone central = DynamicTimezone(
    'Canada/Central',
    DynamicTimezoneSpan(
      -1,
      -23316000000,
      'LMT',
      TimezoneSpan.range.min,
      -2602258284,
      dst: false,
    ),
    Int64List.fromList([ -2602258284, -1694368800, -1681671600, -1632067200, -1615136400, -1029686400, -1018198800, -880214400, -769395600, -765392400, -746035200, -732733200, -715795200, -702493200, -684345600, -671043600, -652896000, -639594000, -620755200, -607626000, -589392000, -576090000, -557942400, -544640400, -526492800, -513190800, -495043200, -481741200, -463593600, -450291600, -431539200, -418237200, -400089600, -386787600, -368640000, -355338000, -337190400, -321469200, -305740800, -292438800, -210787200, -198090000, -116438400, -100108800, -84384000, -68659200, -52934400, -37209600, -21484800, -5760000, 9964800, 25689600, 41414400, 57744000, 73468800, 89193600, 104918400, 120643200, 136368000, 152092800, 167817600, 183542400, 199267200, 215596800, 230716800, 247046400, 262771200, 278496000, 294220800, 309945600, 325670400, 341395200, 357120000, 372844800, 388569600, 404899200, 420019200, 436348800, 452073600, 467798400, 483523200, 499248000, 514972800, 530697600, 544608000, 562147200, 576057600, 594201600, 607507200, 625651200, 638956800, 657100800, 671011200, 688550400, 702460800, 720000000, 733910400, 752054400, 765360000, 783504000, 796809600, 814953600, 828864000, 846403200, 860313600, 877852800, 891763200, 909302400, 923212800, 941356800, 954662400, 972806400, 986112000, 1004256000, 1018166400, 1035705600, 1049616000, 1067155200, 1081065600, 1099209600, 1112515200, 1130659200, 1136095200, 1143964800, 1162105200, 1173600000, 1194159600, 1205049600, 1225609200, 1236499200, 1257058800, 1268553600, 1289113200, 1300003200, 1320562800, 1331452800, 1352012400, 1362902400, 1383462000, 1394352000, 1414911600, 1425801600, 1446361200, 1457856000, 1478415600, 1489305600, 1509865200, 1520755200, 1541314800, 1552204800, 1572764400, 1583654400, 1604214000, 1615708800, 1636268400, 1647158400, 1667718000, 1678608000, 1699167600, 1710057600, 1730617200, 1741507200, 1762066800, 1772956800, 1793516400, 1805011200, 1825570800, 1836460800, 1857020400, 1867910400, 1888470000, 1899360000, 1919919600, 1930809600, 1951369200, 1962864000, 1983423600, 1994313600, 2014873200, 2025763200, 2046322800, 2057212800, 2077772400, 2088662400, 2109222000, 2120112000, 2140671600 ]),
    Int8List.fromList([ -6, -5, -6, -5, -6, -5, -6, -5, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6, -5, -6 ]),
    3600000000,
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eastern = DynamicTimezone(
    'Canada/Eastern',
    DynamicTimezoneSpan(
      -1,
      -19052000000,
      'LMT',
      TimezoneSpan.range.min,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148, -1632070800, -1615140000, -1601753400, -1583697600, -1567357200, -1554667200, -1534698000, -1524074400, -1503248400, -1492365600, -1471798800, -1460916000, -1440954000, -1428861600, -1409504400, -1397412000, -1378054800, -1365962400, -1346605200, -1333908000, -1315155600, -1301853600, -1283706000, -1270404000, -1252256400, -1238954400, -1220806800, -1207504800, -1188752400, -1176055200, -1157302800, -1144000800, -1125853200, -1112551200, -1094403600, -1081101600, -1062954000, -1049652000, -1031504400, -1018202400, -1000054800, -986752800, -968000400, -955303200, -936550800, -880218000, -769395600, -765396000, -747248400, -733946400, -715806000, -702504000, -684356400, -671054400, -652906800, -634161600, -620845200, -602704800, -589395600, -576093600, -557946000, -544644000, -526496400, -513194400, -495046800, -481744800, -463597200, -450295200, -431542800, -418240800, -400093200, -384372000, -368643600, -352922400, -337194000, -321472800, -305744400, -289418400, -273690000, -257968800, -242240400, -226519200, -210790800, -195069600, -179341200, -163620000, -147891600, -131565600, -116442000, -100116000, -84387600, -68666400, -52938000, -37216800, -21488400, -5767200, 9961200, 25682400, 41410800, 57736800, 73465200, 89186400, 104914800, 120636000, 136364400, 152085600, 167814000, 183535200, 199263600, 215589600, 230713200, 247039200, 262767600, 278488800, 294217200, 309938400, 325666800, 341388000, 357116400, 372837600, 388566000, 404892000, 420015600, 436341600, 452070000, 467791200, 483519600, 499240800, 514969200, 530690400, 544604400, 562140000, 576054000, 594194400, 607503600, 625644000, 638953200, 657093600, 671007600, 688543200, 702457200, 719992800, 733906800, 752047200, 765356400, 783496800, 796806000, 814946400, 828860400, 846396000, 860310000, 877845600, 891759600, 909295200, 923209200, 941349600, 954658800, 972799200, 986108400, 1004248800, 1018162800, 1035698400, 1049612400, 1067148000, 1081062000, 1099202400, 1112511600, 1130652000, 1143961200, 1162101600, 1173596400, 1194156000, 1205046000, 1225605600, 1236495600, 1257055200, 1268550000, 1289109600, 1299999600, 1320559200, 1331449200, 1352008800, 1362898800, 1383458400, 1394348400, 1414908000, 1425798000, 1446357600, 1457852400, 1478412000, 1489302000, 1509861600, 1520751600, 1541311200, 1552201200, 1572760800, 1583650800, 1604210400, 1615705200, 1636264800, 1647154800, 1667714400, 1678604400, 1699164000, 1710054000, 1730613600, 1741503600, 1762063200, 1772953200, 1793512800, 1805007600, 1825567200, 1836457200, 1857016800, 1867906800, 1888466400, 1899356400, 1919916000, 1930806000, 1951365600, 1962860400, 1983420000, 1994310000, 2014869600, 2025759600, 2046319200, 2057209200, 2077768800, 2088658800, 2109218400, 2120108400, 2140668000 ]),
    Int8List.fromList([ -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -4, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5, -4, -5 ]),
    3600000000,
    [ 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EWT', 'EPT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone mountain = DynamicTimezone(
    'Canada/Mountain',
    DynamicTimezoneSpan(
      -1,
      -27232000000,
      'LMT',
      TimezoneSpan.range.min,
      -1998663968,
      dst: false,
    ),
    Int64List.fromList([ -1998663968, -1632063600, -1615132800, -1600614000, -1596816000, -1567954800, -1551628800, -1536505200, -1523203200, -1504450800, -1491753600, -1473001200, -1459699200, -880210800, -769395600, -765388800, -715791600, -702489600, 73472400, 89193600, 104922000, 120643200, 136371600, 152092800, 167821200, 183542400, 199270800, 215596800, 230720400, 247046400, 262774800, 278496000, 294224400, 309945600, 325674000, 341395200, 357123600, 372844800, 388573200, 404899200, 420022800, 436348800, 452077200, 467798400, 483526800, 499248000, 514976400, 530697600, 544611600, 562147200, 576061200, 594201600, 607510800, 625651200, 638960400, 657100800, 671014800, 688550400, 702464400, 720000000, 733914000, 752054400, 765363600, 783504000, 796813200, 814953600, 828867600, 846403200, 860317200, 877852800, 891766800, 909302400, 923216400, 941356800, 954666000, 972806400, 986115600, 1004256000, 1018170000, 1035705600, 1049619600, 1067155200, 1081069200, 1099209600, 1112518800, 1130659200, 1143968400, 1162108800, 1173603600, 1194163200, 1205053200, 1225612800, 1236502800, 1257062400, 1268557200, 1289116800, 1300006800, 1320566400, 1331456400, 1352016000, 1362906000, 1383465600, 1394355600, 1414915200, 1425805200, 1446364800, 1457859600, 1478419200, 1489309200, 1509868800, 1520758800, 1541318400, 1552208400, 1572768000, 1583658000, 1604217600, 1615712400, 1636272000, 1647162000, 1667721600, 1678611600, 1699171200, 1710061200, 1730620800, 1741510800, 1762070400, 1772960400, 1793520000, 1805014800, 1825574400, 1836464400, 1857024000, 1867914000, 1888473600, 1899363600, 1919923200, 1930813200, 1951372800, 1962867600, 1983427200, 1994317200, 2014876800, 2025766800, 2046326400, 2057216400, 2077776000, 2088666000, 2109225600, 2120115600, 2140675200 ]),
    Int8List.fromList([ -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7 ]),
    3600000000,
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone newfoundland = DynamicTimezone(
    'Canada/Newfoundland',
    DynamicTimezoneSpan(
      -1,
      -12652000000,
      'LMT',
      TimezoneSpan.range.min,
      -2713897748,
      dst: false,
    ),
    Int64List.fromList([ -2713897748, -1664130548, -1650137348, -1632076148, -1615145348, -1598650148, -1590100148, -1567286948, -1551565748, -1535837348, -1520116148, -1503782948, -1488666548, -1472333348, -1457216948, -1440883748, -1425767348, -1409434148, -1394317748, -1377984548, -1362263348, -1346534948, -1330813748, -1314480548, -1299364148, -1283030948, -1267914548, -1251581348, -1236464948, -1220131748, -1205015348, -1188682148, -1172960948, -1156627748, -1141511348, -1125178148, -1110061748, -1096921748, -1093728600, -1078612200, -1061670600, -1048973400, -1030221000, -1017523800, -998771400, -986074200, -966717000, -954624600, -935267400, -922570200, -903817800, -891120600, -872368200, -769395600, -765401400, -746044200, -733347000, -714594600, -701897400, -683145000, -670447800, -651695400, -638998200, -619641000, -606943800, -589401000, -576099000, -557951400, -544649400, -526501800, -513199800, -495052200, -481750200, -463602600, -450300600, -431548200, -418246200, -400098600, -386796600, -368649000, -355347000, -337199400, -323897400, -305749800, -289423800, -273695400, -257974200, -242245800, -226524600, -210796200, -195075000, -179346600, -163625400, -147897000, -131571000, -116447400, -100121400, -84393000, -68671800, -52943400, -37222200, -21493800, -5772600, 9955800, 25677000, 41405400, 57731400, 73459800, 89181000, 104909400, 120630600, 136359000, 152080200, 167808600, 183529800, 199258200, 215584200, 230707800, 247033800, 262762200, 278483400, 294211800, 309933000, 325661400, 341382600, 357111000, 372832200, 388560600, 404886600, 420010200, 436336200, 452064600, 467785800, 483514200, 499235400, 514963800, 530685000, 544591860, 562127460, 576041460, 594178260, 607491060, 625631460, 638940660, 657081060, 670995060, 688530660, 702444660, 719980260, 733894260, 752034660, 765343860, 783484260, 796793460, 814933860, 828847860, 846383460, 860297460, 877833060, 891747060, 909282660, 923196660, 941337060, 954646260, 972786660, 986095860, 1004236260, 1018150260, 1035685860, 1049599860, 1067135460, 1081049460, 1099189860, 1112499060, 1130639460, 1143948660, 1162089060, 1173583860, 1194143460, 1205033460, 1225593060, 1236483060, 1257042660, 1268537460, 1289097060, 1299987060, 1320553800, 1331443800, 1352003400, 1362893400, 1383453000, 1394343000, 1414902600, 1425792600, 1446352200, 1457847000, 1478406600, 1489296600, 1509856200, 1520746200, 1541305800, 1552195800, 1572755400, 1583645400, 1604205000, 1615699800, 1636259400, 1647149400, 1667709000, 1678599000, 1699158600, 1710048600, 1730608200, 1741498200, 1762057800, 1772947800, 1793507400, 1805002200, 1825561800, 1836451800, 1857011400, 1867901400, 1888461000, 1899351000, 1919910600, 1930800600, 1951360200, 1962855000, 1983414600, 1994304600, 2014864200, 2025754200, 2046313800, 2057203800, 2077763400, 2088653400, 2109213000, 2120103000, 2140662600 ]),
    Int32List.fromList([ -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -9052, -12652, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -5400, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600, -9000, -12600 ]),
    1000000,
    [ 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NWT', 'NPT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone pacific = DynamicTimezone(
    'Canada/Pacific',
    DynamicTimezoneSpan(
      -1,
      -29548000000,
      'LMT',
      TimezoneSpan.range.min,
      -2713880852,
      dst: false,
    ),
    Int64List.fromList([ -2713880852, -1632060000, -1615129200, -880207200, -769395600, -765385200, -747237600, -733935600, -715788000, -702486000, -684338400, -671036400, -652888800, -639586800, -620834400, -608137200, -589384800, -576082800, -557935200, -544633200, -526485600, -513183600, -495036000, -481734000, -463586400, -450284400, -431532000, -418230000, -400082400, -386780400, -368632800, -355330800, -337183200, -323881200, -305733600, -292431600, -273679200, -260982000, -242229600, -226508400, -210780000, -195058800, -179330400, -163609200, -147880800, -131554800, -116431200, -100105200, -84376800, -68655600, -52927200, -37206000, -21477600, -5756400, 9972000, 25693200, 41421600, 57747600, 73476000, 89197200, 104925600, 120646800, 136375200, 152096400, 167824800, 183546000, 199274400, 215600400, 230724000, 247050000, 262778400, 278499600, 294228000, 309949200, 325677600, 341398800, 357127200, 372848400, 388576800, 404902800, 420026400, 436352400, 452080800, 467802000, 483530400, 499251600, 514980000, 530701200, 544615200, 562150800, 576064800, 594205200, 607514400, 625654800, 638964000, 657104400, 671018400, 688554000, 702468000, 720003600, 733917600, 752058000, 765367200, 783507600, 796816800, 814957200, 828871200, 846406800, 860320800, 877856400, 891770400, 909306000, 923220000, 941360400, 954669600, 972810000, 986119200, 1004259600, 1018173600, 1035709200, 1049623200, 1067158800, 1081072800, 1099213200, 1112522400, 1130662800, 1143972000, 1162112400, 1173607200, 1194166800, 1205056800, 1225616400, 1236506400, 1257066000, 1268560800, 1289120400, 1300010400, 1320570000, 1331460000, 1352019600, 1362909600, 1383469200, 1394359200, 1414918800, 1425808800, 1446368400, 1457863200, 1478422800, 1489312800, 1509872400, 1520762400, 1541322000, 1552212000, 1572771600, 1583661600, 1604221200, 1615716000, 1636275600, 1647165600, 1667725200, 1678615200, 1699174800, 1710064800, 1730624400, 1741514400, 1762074000, 1772964000, 1793523600, 1805018400, 1825578000, 1836468000, 1857027600, 1867917600, 1888477200, 1899367200, 1919926800, 1930816800, 1951376400, 1962871200, 1983430800, 1994320800, 2014880400, 2025770400, 2046330000, 2057220000, 2077779600, 2088669600, 2109229200, 2120119200, 2140678800 ]),
    Int8List.fromList([ -8, -7, -8, -7, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8 ]),
    3600000000,
    [ 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone saskatchewan = DynamicTimezone(
    'Canada/Saskatchewan',
    DynamicTimezoneSpan(
      -1,
      -25116000000,
      'LMT',
      TimezoneSpan.range.min,
      -2030202084,
      dst: false,
    ),
    Int64List.fromList([ -2030202084, -1632063600, -1615132800, -1251651600, -1238349600, -1220202000, -1206900000, -1188752400, -1175450400, -1156698000, -1144000800, -1125248400, -1111946400, -1032714000, -1016992800, -1001264400, -986148000, -969814800, -954093600, -937760400, -922039200, -906310800, -890589600, -880210800, -769395600, -765388800, -748450800, -732729600, -715791600, -702489600, -684342000, -671040000, -652892400, -639590400, -620838000, -608140800, -589388400, -576086400, -557938800, -544636800, -526489200, -513187200, -495039600, -481737600, -463590000, -450288000, -431535600, -418233600, -400086000, -386784000, -337186800, -321465600, -305737200 ]),
    Int8List.fromList([ -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6, -7, -6 ]),
    3600000000,
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final Timezone yukon = DynamicTimezone(
    'Canada/Yukon',
    DynamicTimezoneSpan(
      -1,
      -32412000000,
      'LMT',
      TimezoneSpan.range.min,
      -2188997988,
      dst: false,
    ),
    Int64List.fromList([ -2188997988, -1632056400, -1615125600, -1596978000, -1583164800, -880203600, -769395600, -765381600, -147884400, -131554800, -121273200, 325677600, 341398800, 357127200, 372848400, 388576800, 404902800, 420026400, 436352400, 452080800, 467802000, 483530400, 499251600, 514980000, 530701200, 544615200, 562150800, 576064800, 594205200, 607514400, 625654800, 638964000, 657104400, 671018400, 688554000, 702468000, 720003600, 733917600, 752058000, 765367200, 783507600, 796816800, 814957200, 828871200, 846406800, 860320800, 877856400, 891770400, 909306000, 923220000, 941360400, 954669600, 972810000, 986119200, 1004259600, 1018173600, 1035709200, 1049623200, 1067158800, 1081072800, 1099213200, 1112522400, 1130662800, 1143972000, 1162112400, 1173607200, 1194166800, 1205056800, 1225616400, 1236506400, 1257066000, 1268560800, 1289120400, 1300010400, 1320570000, 1331460000, 1352019600, 1362909600, 1383469200, 1394359200, 1414918800, 1425808800, 1446368400, 1457863200, 1478422800, 1489312800, 1509872400, 1520762400, 1541322000, 1552212000, 1572771600, 1583661600, 1604214000 ]),
    Int8List.fromList([ -9, -8, -9, -8, -9, -8, -8, -9, -7, -9, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -8, -7, -7 ]),
    3600000000,
    [ 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YWT', 'YPT', 'YST', 'YDDT', 'YST', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'MST' ],
    [ false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


