// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/generate_timezones.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone.dart';
import 'package:sugar/src/time/zone/fixed_timezone.dart';
import 'package:sugar/src/time/zone/timezone.dart';
import 'package:sugar/src/time/zone/timezone_span.dart';

extension Canada on Never {
  static final Timezone atlantic = DynamicTimezone(
    'Canada/Atlantic',
    DynamicTimezoneSpan(
      -1,
      -15264000,
      'LMT',
      TimezoneSpan.range.min,
      -2131645536,
      dst: false,
    ),
    Int64List.fromList([ -2131645536000, -1696276800000, -1680469200000, -1632074400000, -1615143600000, -1566763200000, -1557090000000, -1535486400000, -1524949200000, -1504468800000, -1493413200000, -1472414400000, -1461963600000, -1440964800000, -1429390800000, -1409515200000, -1396731600000, -1376856000000, -1366491600000, -1346616000000, -1333832400000, -1313956800000, -1303678800000, -1282507200000, -1272661200000, -1251057600000, -1240088400000, -1219608000000, -1207429200000, -1188763200000, -1175979600000, -1157313600000, -1143925200000, -1124049600000, -1113771600000, -1091390400000, -1081026000000, -1059854400000, -1050786000000, -1030910400000, -1018126800000, -999460800000, -986677200000, -965592000000, -955227600000, -935956800000, -923173200000, -904507200000, -891723600000, -880221600000, -769395600000, -765399600000, -747252000000, -733950000000, -715802400000, -702500400000, -684352800000, -671050800000, -652903200000, -639601200000, -589399200000, -576097200000, -557949600000, -544647600000, -526500000000, -513198000000, -495050400000, -481748400000, -431546400000, -418244400000, -400096800000, -386794800000, -368647200000, -355345200000, -337197600000, -323895600000, -242244000000, -226522800000, -210794400000, -195073200000, -179344800000, -163623600000, -147895200000, -131569200000, -116445600000, -100119600000, -84391200000, -68670000000, -52941600000, -37220400000, -21492000000, -5770800000, 9957600000, 25678800000, 41407200000, 57733200000, 73461600000, 89182800000, 104911200000, 120632400000, 136360800000, 152082000000, 167810400000, 183531600000, 199260000000, 215586000000, 230709600000, 247035600000, 262764000000, 278485200000, 294213600000, 309934800000, 325663200000, 341384400000, 357112800000, 372834000000, 388562400000, 404888400000, 420012000000, 436338000000, 452066400000, 467787600000, 483516000000, 499237200000, 514965600000, 530686800000, 544600800000, 562136400000, 576050400000, 594190800000, 607500000000, 625640400000, 638949600000, 657090000000, 671004000000, 688539600000, 702453600000, 719989200000, 733903200000, 752043600000, 765352800000, 783493200000, 796802400000, 814942800000, 828856800000, 846392400000, 860306400000, 877842000000, 891756000000, 909291600000, 923205600000, 941346000000, 954655200000, 972795600000, 986104800000, 1004245200000, 1018159200000, 1035694800000, 1049608800000, 1067144400000, 1081058400000, 1099198800000, 1112508000000, 1130648400000, 1143957600000, 1162098000000, 1173592800000, 1194152400000, 1205042400000, 1225602000000, 1236492000000, 1257051600000, 1268546400000, 1289106000000, 1299996000000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList
    [ 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'AWT', 'APT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone central = DynamicTimezone(
    'Canada/Central',
    DynamicTimezoneSpan(
      -1,
      -23316000,
      'LMT',
      TimezoneSpan.range.min,
      -2602258284,
      dst: false,
    ),
    Int64List.fromList([ -2602258284000, -1694368800000, -1681671600000, -1632067200000, -1615136400000, -1029686400000, -1018198800000, -880214400000, -769395600000, -765392400000, -746035200000, -732733200000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620755200000, -607626000000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -292438800000, -210787200000, -198090000000, -116438400000, -100108800000, -84384000000, -68659200000, -52934400000, -37209600000, -21484800000, -5760000000, 9964800000, 25689600000, 41414400000, 57744000000, 73468800000, 89193600000, 104918400000, 120643200000, 136368000000, 152092800000, 167817600000, 183542400000, 199267200000, 215596800000, 230716800000, 247046400000, 262771200000, 278496000000, 294220800000, 309945600000, 325670400000, 341395200000, 357120000000, 372844800000, 388569600000, 404899200000, 420019200000, 436348800000, 452073600000, 467798400000, 483523200000, 499248000000, 514972800000, 530697600000, 544608000000, 562147200000, 576057600000, 594201600000, 607507200000, 625651200000, 638956800000, 657100800000, 671011200000, 688550400000, 702460800000, 720000000000, 733910400000, 752054400000, 765360000000, 783504000000, 796809600000, 814953600000, 828864000000, 846403200000, 860313600000, 877852800000, 891763200000, 909302400000, 923212800000, 941356800000, 954662400000, 972806400000, 986112000000, 1004256000000, 1018166400000, 1035705600000, 1049616000000, 1067155200000, 1081065600000, 1099209600000, 1112515200000, 1130659200000, 1136095200000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone eastern = DynamicTimezone(
    'Canada/Eastern',
    DynamicTimezoneSpan(
      -1,
      -19052000,
      'LMT',
      TimezoneSpan.range.min,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -14400000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone mountain = DynamicTimezone(
    'Canada/Mountain',
    DynamicTimezoneSpan(
      -1,
      -27232000,
      'LMT',
      TimezoneSpan.range.min,
      -1998663968,
      dst: false,
    ),
    Int64List.fromList([ -1998663968000, -1632063600000, -1615132800000, -1600614000000, -1596816000000, -1567954800000, -1551628800000, -1536505200000, -1523203200000, -1504450800000, -1491753600000, -1473001200000, -1459699200000, -880210800000, -769395600000, -765388800000, -715791600000, -702489600000, 73472400000, 89193600000, 104922000000, 120643200000, 136371600000, 152092800000, 167821200000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone newfoundland = DynamicTimezone(
    'Canada/Newfoundland',
    DynamicTimezoneSpan(
      -1,
      -12652000,
      'LMT',
      TimezoneSpan.range.min,
      -2713897748,
      dst: false,
    ),
    Int64List.fromList([ -2713897748000, -1664130548000, -1650137348000, -1632076148000, -1615145348000, -1598650148000, -1590100148000, -1567286948000, -1551565748000, -1535837348000, -1520116148000, -1503782948000, -1488666548000, -1472333348000, -1457216948000, -1440883748000, -1425767348000, -1409434148000, -1394317748000, -1377984548000, -1362263348000, -1346534948000, -1330813748000, -1314480548000, -1299364148000, -1283030948000, -1267914548000, -1251581348000, -1236464948000, -1220131748000, -1205015348000, -1188682148000, -1172960948000, -1156627748000, -1141511348000, -1125178148000, -1110061748000, -1096921748000, -1093728600000, -1078612200000, -1061670600000, -1048973400000, -1030221000000, -1017523800000, -998771400000, -986074200000, -966717000000, -954624600000, -935267400000, -922570200000, -903817800000, -891120600000, -872368200000, -769395600000, -765401400000, -746044200000, -733347000000, -714594600000, -701897400000, -683145000000, -670447800000, -651695400000, -638998200000, -619641000000, -606943800000, -589401000000, -576099000000, -557951400000, -544649400000, -526501800000, -513199800000, -495052200000, -481750200000, -463602600000, -450300600000, -431548200000, -418246200000, -400098600000, -386796600000, -368649000000, -355347000000, -337199400000, -323897400000, -305749800000, -289423800000, -273695400000, -257974200000, -242245800000, -226524600000, -210796200000, -195075000000, -179346600000, -163625400000, -147897000000, -131571000000, -116447400000, -100121400000, -84393000000, -68671800000, -52943400000, -37222200000, -21493800000, -5772600000, 9955800000, 25677000000, 41405400000, 57731400000, 73459800000, 89181000000, 104909400000, 120630600000, 136359000000, 152080200000, 167808600000, 183529800000, 199258200000, 215584200000, 230707800000, 247033800000, 262762200000, 278483400000, 294211800000, 309933000000, 325661400000, 341382600000, 357111000000, 372832200000, 388560600000, 404886600000, 420010200000, 436336200000, 452064600000, 467785800000, 483514200000, 499235400000, 514963800000, 530685000000, 544591860000, 562127460000, 576041460000, 594178260000, 607491060000, 625631460000, 638940660000, 657081060000, 670995060000, 688530660000, 702444660000, 719980260000, 733894260000, 752034660000, 765343860000, 783484260000, 796793460000, 814933860000, 828847860000, 846383460000, 860297460000, 877833060000, 891747060000, 909282660000, 923196660000, 941337060000, 954646260000, 972786660000, 986095860000, 1004236260000, 1018150260000, 1035685860000, 1049599860000, 1067135460000, 1081049460000, 1099189860000, 1112499060000, 1130639460000, 1143948660000, 1162089060000, 1173583860000, 1194143460000, 1205033460000, 1225593060000, 1236483060000, 1257042660000, 1268537460000, 1289097060000, 1299987060000, 1320553800000, 1331443800000, 1352003400000, 1362893400000, 1383453000000, 1394343000000, 1414902600000, 1425792600000, 1446352200000, 1457847000000, 1478406600000, 1489296600000, 1509856200000, 1520746200000, 1541305800000, 1552195800000, 1572755400000, 1583645400000, 1604205000000, 1615699800000, 1636259400000, 1647149400000, 1667709000000, 1678599000000, 1699158600000, 1710048600000, 1730608200000, 1741498200000, 1762057800000, 1772947800000, 1793507400000, 1805002200000, 1825561800000, 1836451800000, 1857011400000, 1867901400000, 1888461000000, 1899351000000, 1919910600000, 1930800600000, 1951360200000, 1962855000000, 1983414600000, 1994304600000, 2014864200000, 2025754200000, 2046313800000, 2057203800000, 2077763400000, 2088653400000, 2109213000000, 2120103000000, 2140662600000 ]),
    Int32List.fromList([ -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -5400000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000 ]),
    [ 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NWT', 'NPT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone pacific = DynamicTimezone(
    'Canada/Pacific',
    DynamicTimezoneSpan(
      -1,
      -29548000,
      'LMT',
      TimezoneSpan.range.min,
      -2713880852,
      dst: false,
    ),
    Int64List.fromList([ -2713880852000, -1632060000000, -1615129200000, -880207200000, -769395600000, -765385200000, -747237600000, -733935600000, -715788000000, -702486000000, -684338400000, -671036400000, -652888800000, -639586800000, -620834400000, -608137200000, -589384800000, -576082800000, -557935200000, -544633200000, -526485600000, -513183600000, -495036000000, -481734000000, -463586400000, -450284400000, -431532000000, -418230000000, -400082400000, -386780400000, -368632800000, -355330800000, -337183200000, -323881200000, -305733600000, -292431600000, -273679200000, -260982000000, -242229600000, -226508400000, -210780000000, -195058800000, -179330400000, -163609200000, -147880800000, -131554800000, -116431200000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 136375200000, 152096400000, 167824800000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final Timezone saskatchewan = DynamicTimezone(
    'Canada/Saskatchewan',
    DynamicTimezoneSpan(
      -1,
      -25116000,
      'LMT',
      TimezoneSpan.range.min,
      -2030202084,
      dst: false,
    ),
    Int64List.fromList([ -2030202084000, -1632063600000, -1615132800000, -1251651600000, -1238349600000, -1220202000000, -1206900000000, -1188752400000, -1175450400000, -1156698000000, -1144000800000, -1125248400000, -1111946400000, -1032714000000, -1016992800000, -1001264400000, -986148000000, -969814800000, -954093600000, -937760400000, -922039200000, -906310800000, -890589600000, -880210800000, -769395600000, -765388800000, -748450800000, -732729600000, -715791600000, -702489600000, -684342000000, -671040000000, -652892400000, -639590400000, -620838000000, -608140800000, -589388400000, -576086400000, -557938800000, -544636800000, -526489200000, -513187200000, -495039600000, -481737600000, -463590000000, -450288000000, -431535600000, -418233600000, -400086000000, -386784000000, -337186800000, -321465600000, -305737200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final Timezone yukon = DynamicTimezone(
    'Canada/Yukon',
    DynamicTimezoneSpan(
      -1,
      -32412000,
      'LMT',
      TimezoneSpan.range.min,
      -2188997988,
      dst: false,
    ),
    Int64List.fromList([ -2188997988000, -1632056400000, -1615125600000, -1596978000000, -1583164800000, -880203600000, -769395600000, -765381600000, -147884400000, -131554800000, -121273200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604214000000 ]),
    Int32List.fromList([ -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -28800000, -32400000, -25200000, -32400000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -25200000 ]),
    [ 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YWT', 'YPT', 'YST', 'YDDT', 'YST', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'MST' ],
    [ false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


