// GENERATED CODE - DO NOT MODIFY BY HAND
//
// **************************************************************************
// Generated by: sugar/tool/timezone/main.dart
// **************************************************************************
// 
// ignore_for_file: type=lint

import 'dart:typed_data';

import 'package:sugar/src/time/offset.dart';
import 'package:sugar/src/time/zone/dynamic_timezone_rules.dart';
import 'package:sugar/src/time/zone/fixed_timezone_rules.dart';
import 'package:sugar/src/time/zone/timezone_rules.dart';

extension America on Never {
  static final TimezoneRules adak = DynamicTimezoneRules(
    'America/Adak',
    DynamicTimezone(
      -1,
      44002000,
      'America/Adak',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188944802000, -880196400000, -769395600000, -765374400000, -86878800000, -21466800000, -5745600000, 9982800000, 25704000000, 41432400000, 57758400000, 73486800000, 89208000000, 104936400000, 120657600000, 126709200000, 152107200000, 162392400000, 183556800000, 199285200000, 215611200000, 230734800000, 247060800000, 262789200000, 278510400000, 294238800000, 309960000000, 325688400000, 341409600000, 357138000000, 372859200000, 388587600000, 404913600000, 420037200000, 436363200000, 439034400000, 452088000000, 467809200000, 483537600000, 499258800000, 514987200000, 530708400000, 544622400000, 562158000000, 576072000000, 594212400000, 607521600000, 625662000000, 638971200000, 657111600000, 671025600000, 688561200000, 702475200000, 720010800000, 733924800000, 752065200000, 765374400000, 783514800000, 796824000000, 814964400000, 828878400000, 846414000000, 860328000000, 877863600000, 891777600000, 909313200000, 923227200000, 941367600000, 954676800000, 972817200000, 986126400000, 1004266800000, 1018180800000, 1035716400000, 1049630400000, 1067166000000, 1081080000000, 1099220400000, 1112529600000, 1130670000000, 1143979200000, 1162119600000, 1173614400000, 1194174000000, 1205064000000, 1225623600000, 1236513600000, 1257073200000, 1268568000000, 1289127600000, 1300017600000, 1320577200000, 1331467200000, 1352026800000, 1362916800000, 1383476400000, 1394366400000, 1414926000000, 1425816000000, 1446375600000, 1457870400000, 1478430000000, 1489320000000, 1509879600000, 1520769600000, 1541329200000, 1552219200000, 1572778800000, 1583668800000, 1604228400000, 1615723200000, 1636282800000, 1647172800000, 1667732400000, 1678622400000, 1699182000000, 1710072000000, 1730631600000, 1741521600000, 1762081200000, 1772971200000, 1793530800000, 1805025600000, 1825585200000, 1836475200000, 1857034800000, 1867924800000, 1888484400000, 1899374400000, 1919934000000, 1930824000000, 1951383600000, 1962878400000, 1983438000000, 1994328000000, 2014887600000, 2025777600000, 2046337200000, 2057227200000, 2077786800000, 2088676800000, 2109236400000, 2120126400000, 2140686000000 ]),
    Int32List.fromList([ -42398000, -39600000, -36000000, -36000000, -39600000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -36000000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000 ]),
    [ 'LMT', 'NST', 'NWT', 'NPT', 'NST', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'AHST', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules anchorage = DynamicTimezoneRules(
    'America/Anchorage',
    DynamicTimezone(
      -1,
      50424000,
      'America/Anchorage',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188951224000, -880200000000, -769395600000, -765378000000, -86882400000, -21470400000, -5749200000, 9979200000, 25700400000, 41428800000, 57754800000, 73483200000, 89204400000, 104932800000, 120654000000, 126705600000, 152103600000, 162388800000, 183553200000, 199281600000, 215607600000, 230731200000, 247057200000, 262785600000, 278506800000, 294235200000, 309956400000, 325684800000, 341406000000, 357134400000, 372855600000, 388584000000, 404910000000, 420033600000, 436359600000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -35976000, -36000000, -32400000, -32400000, -36000000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'AST', 'AWT', 'APT', 'AST', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'AHST', 'AHDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules anguilla = DynamicTimezoneRules(
    'America/Anguilla',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Anguilla',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules antigua = DynamicTimezoneRules(
    'America/Antigua',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Antigua',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules araguaina = DynamicTimezoneRules(
    'America/Araguaina',
    DynamicTimezone(
      -1,
      -11568000,
      'America/Araguaina',
      'LMT',
      null,
      -1767214032,
      dst: false,
    ),
    Int64List.fromList([ -1767214032000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 813726000000, 824004000000, 844570800000, 856058400000, 876106800000, 888717600000, 908074800000, 919562400000, 938919600000, 951616800000, 970974000000, 982461600000, 1003028400000, 1013911200000, 1036292400000, 1045360800000, 1350788400000, 1361066400000 ]),
    Int32List.fromList
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules aruba = DynamicTimezoneRules(
    'America/Aruba',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Aruba',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules asuncion = DynamicTimezoneRules(
    'America/Asuncion',
    DynamicTimezone(
      -1,
      -13840000,
      'America/Asuncion',
      'LMT',
      null,
      -2524507760,
      dst: false,
    ),
    Int64List.fromList([ -2524507760000, -1206389360000, 86760000000, 134017200000, 181368000000, 194497200000, 212990400000, 226033200000, 244526400000, 257569200000, 276062400000, 291783600000, 307598400000, 323406000000, 339220800000, 354942000000, 370756800000, 386478000000, 402292800000, 418014000000, 433828800000, 449636400000, 465451200000, 481172400000, 496987200000, 512708400000, 528523200000, 544244400000, 560059200000, 575866800000, 591681600000, 607402800000, 625032000000, 638938800000, 654753600000, 670474800000, 686721600000, 699418800000, 718257600000, 733546800000, 749448000000, 762318000000, 780984000000, 793767600000, 812520000000, 825649200000, 844574400000, 856666800000, 876024000000, 888721200000, 907473600000, 920775600000, 938923200000, 952225200000, 970372800000, 983674800000, 1002427200000, 1018148400000, 1030852800000, 1049598000000, 1062907200000, 1081047600000, 1097985600000, 1110682800000, 1129435200000, 1142132400000, 1160884800000, 1173582000000, 1192939200000, 1205031600000, 1224388800000, 1236481200000, 1255838400000, 1270954800000, 1286078400000, 1302404400000, 1317528000000, 1333854000000, 1349582400000, 1364094000000, 1381032000000, 1395543600000, 1412481600000, 1426993200000, 1443931200000, 1459047600000, 1475380800000, 1490497200000, 1506830400000, 1521946800000, 1538884800000, 1553396400000, 1570334400000, 1584846000000, 1601784000000, 1616900400000, 1633233600000, 1648350000000, 1664683200000, 1679799600000, 1696132800000, 1711249200000, 1728187200000, 1742698800000, 1759636800000, 1774148400000, 1791086400000, 1806202800000, 1822536000000, 1837652400000, 1853985600000, 1869102000000, 1886040000000, 1900551600000, 1917489600000, 1932001200000, 1948939200000, 1964055600000, 1980388800000, 1995505200000, 2011838400000, 2026954800000, 2043288000000, 2058404400000, 2075342400000, 2089854000000, 2106792000000, 2121303600000, 2138241600000 ]),
    Int32List.fromList([ -13840000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000 ]),

    [ false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules atikokan = DynamicTimezoneRules(
    'America/Atikokan',
    DynamicTimezone(
      -1,
      -19088000,
      'America/Atikokan',
      'LMT',
      null,
      -2524502512,
      dst: false,
    ),
    Int64List.fromList([ -2524502512000, -1946918424000 ]),
    Int32List.fromList([ -19176000, -18000000 ]),
    [ 'CMT', 'EST' ],
    [ false, false ],
  );

  static final TimezoneRules atka = DynamicTimezoneRules(
    'America/Atka',
    DynamicTimezone(
      -1,
      44002000,
      'America/Atka',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188944802000, -880196400000, -769395600000, -765374400000, -86878800000, -21466800000, -5745600000, 9982800000, 25704000000, 41432400000, 57758400000, 73486800000, 89208000000, 104936400000, 120657600000, 126709200000, 152107200000, 162392400000, 183556800000, 199285200000, 215611200000, 230734800000, 247060800000, 262789200000, 278510400000, 294238800000, 309960000000, 325688400000, 341409600000, 357138000000, 372859200000, 388587600000, 404913600000, 420037200000, 436363200000, 439034400000, 452088000000, 467809200000, 483537600000, 499258800000, 514987200000, 530708400000, 544622400000, 562158000000, 576072000000, 594212400000, 607521600000, 625662000000, 638971200000, 657111600000, 671025600000, 688561200000, 702475200000, 720010800000, 733924800000, 752065200000, 765374400000, 783514800000, 796824000000, 814964400000, 828878400000, 846414000000, 860328000000, 877863600000, 891777600000, 909313200000, 923227200000, 941367600000, 954676800000, 972817200000, 986126400000, 1004266800000, 1018180800000, 1035716400000, 1049630400000, 1067166000000, 1081080000000, 1099220400000, 1112529600000, 1130670000000, 1143979200000, 1162119600000, 1173614400000, 1194174000000, 1205064000000, 1225623600000, 1236513600000, 1257073200000, 1268568000000, 1289127600000, 1300017600000, 1320577200000, 1331467200000, 1352026800000, 1362916800000, 1383476400000, 1394366400000, 1414926000000, 1425816000000, 1446375600000, 1457870400000, 1478430000000, 1489320000000, 1509879600000, 1520769600000, 1541329200000, 1552219200000, 1572778800000, 1583668800000, 1604228400000, 1615723200000, 1636282800000, 1647172800000, 1667732400000, 1678622400000, 1699182000000, 1710072000000, 1730631600000, 1741521600000, 1762081200000, 1772971200000, 1793530800000, 1805025600000, 1825585200000, 1836475200000, 1857034800000, 1867924800000, 1888484400000, 1899374400000, 1919934000000, 1930824000000, 1951383600000, 1962878400000, 1983438000000, 1994328000000, 2014887600000, 2025777600000, 2046337200000, 2057227200000, 2077786800000, 2088676800000, 2109236400000, 2120126400000, 2140686000000 ]),
    Int32List.fromList([ -42398000, -39600000, -36000000, -36000000, -39600000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -36000000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000, -32400000, -36000000 ]),
    [ 'LMT', 'NST', 'NWT', 'NPT', 'NST', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'AHST', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST', 'HDT', 'HST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules bahia = DynamicTimezoneRules(
    'America/Bahia',
    DynamicTimezone(
      -1,
      -9244000,
      'America/Bahia',
      'LMT',
      null,
      -1767216356,
      dst: false,
    ),
    Int64List.fromList([ -1767216356000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 656478000000, 666756000000, 687927600000, 697600800000, 719982000000, 728445600000, 750826800000, 761709600000, 782276400000, 793159200000, 813726000000, 824004000000, 844570800000, 856058400000, 876106800000, 888717600000, 908074800000, 919562400000, 938919600000, 951616800000, 970974000000, 982461600000, 1003028400000, 1013911200000, 1036292400000, 1045360800000, 1318734000000, 1330221600000 ]),
    Int32List.fromList
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules bahiaBanderas = DynamicTimezoneRules(
    'America/Bahia_Banderas',
    DynamicTimezone(
      -1,
      -25260000,
      'America/Bahia_Banderas',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -873828000000, -661539600000, 28800000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1270371600000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1428220800000, 1445756400000, 1459670400000, 1477810800000, 1491120000000, 1509260400000, 1522569600000, 1540710000000, 1554624000000, 1572159600000, 1586073600000, 1603609200000, 1617523200000, 1635663600000, 1648972800000, 1667113200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -28800000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'MST', 'PST', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules barbados = DynamicTimezoneRules(
    'America/Barbados',
    DynamicTimezone(
      -1,
      -14309000,
      'America/Barbados',
      'LMT',
      null,
      -1841256091,
      dst: false,
    ),
    Int64List.fromList([ -1841256091000, -874263600000, -862682400000, -841604400000, -830714400000, -820526400000, -811882800000, -798660000000, -788904000000, 234943200000, 244616400000, 261554400000, 276066000000, 293004000000, 307515600000, 325058400000, 338706000000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -14400000, -12600000, -14400000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ 'AST', 'ADT', 'AST', 'ADT', 'AST', 'AST', '-0330', 'AST', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, true, false, false, true, false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules belem = DynamicTimezoneRules(
    'America/Belem',
    DynamicTimezone(
      -1,
      -11636000,
      'America/Belem',
      'LMT',
      null,
      -1767213964,
      dst: false,
    ),
    Int64List.fromList([ -1767213964000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000 ]),
    Int32List.fromList([ -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules belize = DynamicTimezoneRules(
    'America/Belize',
    DynamicTimezone(
      -1,
      -21168000,
      'America/Belize',
      'LMT',
      null,
      -1822500432,
      dst: false,
    ),
    Int64List.fromList([ -1822500432000, -1616954400000, -1606069800000, -1585504800000, -1574015400000, -1554055200000, -1542565800000, -1522605600000, -1511116200000, -1490551200000, -1479666600000, -1459101600000, -1448217000000, -1427652000000, -1416162600000, -1396202400000, -1384713000000, -1364752800000, -1353263400000, -1333303200000, -1321813800000, -1301248800000, -1290364200000, -1269799200000, -1258914600000, -1238349600000, -1226860200000, -1206900000000, -1195410600000, -1175450400000, -1163961000000, -1143396000000, -1132511400000, -1111946400000, -1101061800000, -1080496800000, -1069612200000, -1049047200000, -1037557800000, -1017597600000, -1006108200000, -986148000000, -974658600000, -954093600000, -943209000000, -922644000000, -911759400000, -891194400000, -879705000000, -868212000000, -769395600000, -758746800000, -701892000000, -690402600000, -670442400000, -658953000000, -638992800000, -627503400000, -606938400000, -596053800000, -575488800000, -564604200000, -544039200000, -532549800000, -512589600000, -501100200000, -481140000000, -469650600000, -449690400000, -438201000000, -417636000000, -406751400000, -386186400000, -375301800000, -354736800000, -343247400000, -323287200000, -311797800000, -291837600000, -280348200000, -259783200000, -248898600000, -228333600000, -217449000000, -196884000000, -185999400000, -165434400000, -153945000000, -133984800000, -122495400000, -102535200000, -91045800000, -70480800000, -59596200000, 123919200000, 129618000000, 409039200000, 413874000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules blancSablon = DynamicTimezoneRules(
    'America/Blanc-Sablon',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Blanc-Sablon',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules boaVista = DynamicTimezoneRules(
    'America/Boa_Vista',
    DynamicTimezone(
      -1,
      -14560000,
      'America/Boa_Vista',
      'LMT',
      null,
      -1767211040,
      dst: false,
    ),
    Int64List.fromList([ -1767211040000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000, 938923200000, 951620400000, 970977600000, 971578800000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules bogota = DynamicTimezoneRules(
    'America/Bogota',
    DynamicTimezone(
      -1,
      -17776000,
      'America/Bogota',
      'LMT',
      null,
      -2707671824,
      dst: false,
    ),
    Int64List.fromList([ -2707671824000, -1739041424000, 704869200000, 729057600000 ]),
    Int32List.fromList([ -17776000, -18000000, -14400000, -18000000 ]),
    [ 'BMT', '-05', '-04', '-05' ],
    [ false, false, true, false ],
  );

  static final TimezoneRules boise = DynamicTimezoneRules(
    'America/Boise',
    DynamicTimezone(
      -1,
      -27889000,
      'America/Boise',
      'LMT',
      null,
      -2717640000,
      dst: false,
    ),
    Int64List.fromList([ -2717640000000, -1633269600000, -1615129200000, -1601820000000, -1583679600000, -1471788000000, -880210800000, -769395600000, -765388800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 129114000000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList([ -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'PST', 'PDT', 'PST', 'PDT', 'PST', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules buenosAires = DynamicTimezoneRules(
    'America/Buenos_Aires',
    DynamicTimezone(
      -1,
      -14028000,
      'America/Buenos_Aires',
      'LMT',
      null,
      -2372097972,
      dst: false,
    ),
    Int64List.fromList([ -2372097972000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 656478000000, 667965600000, 687927600000, 699415200000, 719377200000, 731469600000, 938919600000, 952052400000, 1198983600000, 1205632800000, 1224385200000, 1237082400000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -10800000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-03', '-03', '-02', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules cambridgeBay = DynamicTimezoneRules(
    'America/Cambridge_Bay',
    DynamicTimezone(
      -1,
      0,
      'America/Cambridge_Bay',
      '-00',
      null,
      -1577923200,
      dst: false,
    ),
    Int64List.fromList([ -1577923200000, -880210800000, -769395600000, -765388800000, 73472400000, 89193600000, 104922000000, 120643200000, 136371600000, 152092800000, 167821200000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954662400000, 972802800000, 973400400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'CST', 'CDT', 'EST', 'CST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules campoGrande = DynamicTimezoneRules(
    'America/Campo_Grande',
    DynamicTimezone(
      -1,
      -13108000,
      'America/Campo_Grande',
      'LMT',
      null,
      -1767212492,
      dst: false,
    ),
    Int64List.fromList([ -1767212492000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000, 592977600000, 602046000000, 624427200000, 634705200000, 656481600000, 666759600000, 687931200000, 697604400000, 719985600000, 728449200000, 750830400000, 761713200000, 782280000000, 793162800000, 813729600000, 824007600000, 844574400000, 856062000000, 876110400000, 888721200000, 908078400000, 919566000000, 938923200000, 951620400000, 970977600000, 982465200000, 1003032000000, 1013914800000, 1036296000000, 1045364400000, 1066536000000, 1076814000000, 1099368000000, 1108868400000, 1129435200000, 1140318000000, 1162699200000, 1172372400000, 1192334400000, 1203217200000, 1224388800000, 1234666800000, 1255838400000, 1266721200000, 1287288000000, 1298170800000, 1318737600000, 1330225200000, 1350792000000, 1361070000000, 1382241600000, 1392519600000, 1413691200000, 1424574000000, 1445140800000, 1456023600000, 1476590400000, 1487473200000, 1508040000000, 1518922800000, 1541304000000, 1550372400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules cancun = DynamicTimezoneRules(
    'America/Cancun',
    DynamicTimezone(
      -1,
      -20824000,
      'America/Cancun',
      'LMT',
      null,
      -1514743200,
      dst: false,
    ),
    Int64List.fromList([ -1514743200000, 377935200000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 902037600000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1270368000000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1422777600000 ]),
    Int32List.fromList([ -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000 ]),
    [ 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST' ],
    [ false, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules caracas = DynamicTimezoneRules(
    'America/Caracas',
    DynamicTimezone(
      -1,
      -16064000,
      'America/Caracas',
      'LMT',
      null,
      -2524505536,
      dst: false,
    ),
    Int64List.fromList([ -2524505536000, -1826739140000, -157750200000, 1197183600000, 1462086000000 ]),
    Int32List.fromList([ -16060000, -16200000, -14400000, -16200000, -14400000 ]),
    [ 'CMT', '-0430', '-04', '-0430', '-04' ],
    [ false, false, false, false, false ],
  );

  static final TimezoneRules catamarca = DynamicTimezoneRules(
    'America/Catamarca',
    DynamicTimezone(
      -1,
      -15788000,
      'America/Catamarca',
      'LMT',
      null,
      -2372096212,
      dst: false,
    ),
    Int64List.fromList([ -2372096212000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 656478000000, 667965600000, 687931200000, 699415200000, 719377200000, 731469600000, 938919600000, 952052400000, 1086058800000, 1087704000000, 1198983600000, 1205632800000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -14400000, -7200000, -10800000, -7200000, -10800000, -10800000, -10800000, -14400000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-04', '-02', '-03', '-02', '-03', '-03', '-03', '-04', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false ],
  );

  static final TimezoneRules cayenne = DynamicTimezoneRules(
    'America/Cayenne',
    DynamicTimezone(
      -1,
      -12560000,
      'America/Cayenne',
      'LMT',
      null,
      -1846269040,
      dst: false,
    ),
    Int64List.fromList([ -1846269040000, -71092800000 ]),
    Int32List.fromList([ -14400000, -10800000 ]),
    [ '-04', '-03' ],
    [ false, false ],
  );

  static final TimezoneRules cayman = DynamicTimezoneRules(
    'America/Cayman',
    DynamicTimezone(
      -1,
      -19088000,
      'America/Cayman',
      'LMT',
      null,
      -2524502512,
      dst: false,
    ),
    Int64List.fromList([ -2524502512000, -1946918424000 ]),
    Int32List.fromList([ -19176000, -18000000 ]),
    [ 'CMT', 'EST' ],
    [ false, false ],
  );

  static final TimezoneRules chicago = DynamicTimezoneRules(
    'America/Chicago',
    DynamicTimezone(
      -1,
      -21036000,
      'America/Chicago',
      'LMT',
      null,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -1563724800000, -1551632400000, -1538928000000, -1520182800000, -1504454400000, -1491757200000, -1473004800000, -1459702800000, -1441555200000, -1428253200000, -1410105600000, -1396803600000, -1378656000000, -1365354000000, -1347206400000, -1333904400000, -1315152000000, -1301850000000, -1283702400000, -1270400400000, -1252252800000, -1238950800000, -1220803200000, -1207501200000, -1189353600000, -1176051600000, -1157299200000, -1144602000000, -1125849600000, -1112547600000, -1094400000000, -1081098000000, -1067788800000, -1045414800000, -1031500800000, -1018198800000, -1000051200000, -986749200000, -967996800000, -955299600000, -936547200000, -923245200000, -905097600000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -384368400000, -368640000000, -352918800000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -257965200000, -242236800000, -226515600000, -210787200000, -195066000000, -179337600000, -163616400000, -147888000000, -131562000000, -116438400000, -100112400000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules chihuahua = DynamicTimezoneRules(
    'America/Chihuahua',
    DynamicTimezone(
      -1,
      -25460000,
      'America/Chihuahua',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, 828864000000, 846399600000, 860313600000, 877849200000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1270371600000, 1288512000000, 1301821200000, 1319961600000, 1333270800000, 1351411200000, 1365325200000, 1382860800000, 1396774800000, 1414310400000, 1428224400000, 1445760000000, 1459674000000, 1477814400000, 1491123600000, 1509264000000, 1522573200000, 1540713600000, 1554627600000, 1572163200000, 1586077200000, 1603612800000, 1617526800000, 1635667200000, 1648976400000, 1667116800000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -18000000, -21600000, -18000000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'CST' ],
    [ false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules ciudadJuarez = DynamicTimezoneRules(
    'America/Ciudad_Juarez',
    DynamicTimezone(
      -1,
      -25556000,
      'America/Ciudad_Juarez',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, 828864000000, 846399600000, 860313600000, 877849200000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667116800000, 1669788000000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -18000000, -21600000, -18000000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'CST', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules coralHarbour = DynamicTimezoneRules(
    'America/Coral_Harbour',
    DynamicTimezone(
      -1,
      -19088000,
      'America/Coral_Harbour',
      'LMT',
      null,
      -2524502512,
      dst: false,
    ),
    Int64List.fromList([ -2524502512000, -1946918424000 ]),
    Int32List.fromList([ -19176000, -18000000 ]),
    [ 'CMT', 'EST' ],
    [ false, false ],
  );

  static final TimezoneRules cordoba = DynamicTimezoneRules(
    'America/Cordoba',
    DynamicTimezone(
      -1,
      -15408000,
      'America/Cordoba',
      'LMT',
      null,
      -2372096592,
      dst: false,
    ),
    Int64List.fromList([ -2372096592000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 656478000000, 667965600000, 687931200000, 699415200000, 719377200000, 731469600000, 938919600000, 952052400000, 1198983600000, 1205632800000, 1224385200000, 1237082400000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -14400000, -7200000, -10800000, -7200000, -10800000, -10800000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-04', '-02', '-03', '-02', '-03', '-03', '-03', '-02', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules costaRica = DynamicTimezoneRules(
    'America/Costa_Rica',
    DynamicTimezone(
      -1,
      -20173000,
      'America/Costa_Rica',
      'LMT',
      null,
      -2524501427,
      dst: false,
    ),
    Int64List.fromList([ -2524501427000, -1545071027000, 288770400000, 297234000000, 320220000000, 328683600000, 664264800000, 678344400000, 695714400000, 700635600000 ]),
    Int32List.fromList([ -20173000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'SJMT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules creston = DynamicTimezoneRules(
    'America/Creston',
    DynamicTimezone(
      -1,
      -26898000,
      'America/Creston',
      'LMT',
      null,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -880210800000, -820519140000, -812653140000, -796845540000, -84380400000, -68659200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MST', 'MWT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules cuiaba = DynamicTimezoneRules(
    'America/Cuiaba',
    DynamicTimezone(
      -1,
      -13460000,
      'America/Cuiaba',
      'LMT',
      null,
      -1767212140,
      dst: false,
    ),
    Int64List.fromList([ -1767212140000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000, 592977600000, 602046000000, 624427200000, 634705200000, 656481600000, 666759600000, 687931200000, 697604400000, 719985600000, 728449200000, 750830400000, 761713200000, 782280000000, 793162800000, 813729600000, 824007600000, 844574400000, 856062000000, 876110400000, 888721200000, 908078400000, 919566000000, 938923200000, 951620400000, 970977600000, 982465200000, 1003032000000, 1013914800000, 1036296000000, 1045364400000, 1099368000000, 1108868400000, 1129435200000, 1140318000000, 1162699200000, 1172372400000, 1192334400000, 1203217200000, 1224388800000, 1234666800000, 1255838400000, 1266721200000, 1287288000000, 1298170800000, 1318737600000, 1330225200000, 1350792000000, 1361070000000, 1382241600000, 1392519600000, 1413691200000, 1424574000000, 1445140800000, 1456023600000, 1476590400000, 1487473200000, 1508040000000, 1518922800000, 1541304000000, 1550372400000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules curacao = DynamicTimezoneRules(
    'America/Curacao',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Curacao',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules danmarkshavn = DynamicTimezoneRules(
    'America/Danmarkshavn',
    DynamicTimezone(
      -1,
      -4480000,
      'America/Danmarkshavn',
      'LMT',
      null,
      -1686091520,
      dst: false,
    ),
    Int64List.fromList([ -1686091520000, 323845200000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 820465200000 ]),
    Int32List.fromList([ -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, 0 ]),
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', 'GMT' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules dawson = DynamicTimezoneRules(
    'America/Dawson',
    DynamicTimezone(
      -1,
      -33460000,
      'America/Dawson',
      'LMT',
      null,
      -2188996940,
      dst: false,
    ),
    Int64List.fromList([ -2188996940000, -1632056400000, -1615125600000, -1596978000000, -1583164800000, -880203600000, -769395600000, -765381600000, -147884400000, -131554800000, 120646800000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604214000000 ]),
    Int32List.fromList([ -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -28800000, -32400000, -25200000, -32400000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -25200000 ]),
    [ 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YWT', 'YPT', 'YST', 'YDDT', 'YST', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'MST' ],
    [ false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules dawsonCreek = DynamicTimezoneRules(
    'America/Dawson_Creek',
    DynamicTimezone(
      -1,
      -28856000,
      'America/Dawson_Creek',
      'LMT',
      null,
      -2713881544,
      dst: false,
    ),
    Int64List.fromList([ -2713881544000, -1632060000000, -1615129200000, -880207200000, -769395600000, -765385200000, -715788000000, -702486000000, -684338400000, -671036400000, -652888800000, -639586800000, -620834400000, -608137200000, -589384800000, -576082800000, -557935200000, -544633200000, -526485600000, -513183600000, -495036000000, -481734000000, -463586400000, -450284400000, -431532000000, -418230000000, -400082400000, -386780400000, -368632800000, -355330800000, -337183200000, -323881200000, -305733600000, -292431600000, -273679200000, -260982000000, -242229600000, -226508400000, -210780000000, -195058800000, -179330400000, -163609200000, -147880800000, -131554800000, -116431200000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 84013200000 ]),
    Int32List.fromList([ -28800000, -25200000, -28800000, -25200000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -25200000 ]),
    [ 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'MST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules denver = DynamicTimezoneRules(
    'America/Denver',
    DynamicTimezone(
      -1,
      -25196000,
      'America/Denver',
      'LMT',
      null,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -1570374000000, -1551628800000, -1538924400000, -1534089600000, -880210800000, -769395600000, -765388800000, -147884400000, -131558400000, -116434800000, -100108800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 126694800000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules detroit = DynamicTimezoneRules(
    'America/Detroit',
    DynamicTimezone(
      -1,
      -19931000,
      'America/Detroit',
      'LMT',
      null,
      -2051202469,
      dst: false,
    ),
    Int64List.fromList([ -2051202469000, -1724083200000, -880218000000, -769395600000, -765396000000, -684349200000, -671047200000, -80506740000, -68666400000, -52938000000, -37216800000, 104914800000, 120636000000, 126687600000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -14400000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules dominica = DynamicTimezoneRules(
    'America/Dominica',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Dominica',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules edmonton = DynamicTimezoneRules(
    'America/Edmonton',
    DynamicTimezone(
      -1,
      -27232000,
      'America/Edmonton',
      'LMT',
      null,
      -1998663968,
      dst: false,
    ),
    Int64List.fromList([ -1998663968000, -1632063600000, -1615132800000, -1600614000000, -1596816000000, -1567954800000, -1551628800000, -1536505200000, -1523203200000, -1504450800000, -1491753600000, -1473001200000, -1459699200000, -880210800000, -769395600000, -765388800000, -715791600000, -702489600000, 73472400000, 89193600000, 104922000000, 120643200000, 136371600000, 152092800000, 167821200000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules eirunepe = DynamicTimezoneRules(
    'America/Eirunepe',
    DynamicTimezone(
      -1,
      -16768000,
      'America/Eirunepe',
      'LMT',
      null,
      -1767208832,
      dst: false,
    ),
    Int64List.fromList([ -1767208832000, -1206950400000, -1191355200000, -1175367600000, -1159819200000, -633812400000, -622062000000, -602276400000, -591825600000, -570740400000, -560203200000, -539118000000, -531345600000, -191358000000, -184190400000, -155156400000, -150062400000, -128890800000, -121118400000, -99946800000, -89582400000, -68410800000, -57960000000, 499755600000, 511243200000, 530600400000, 540273600000, 562136400000, 571204800000, 750834000000, 761716800000, 1214283600000, 1384056000000 ]),
    Int32List.fromList([ -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final TimezoneRules elSalvador = DynamicTimezoneRules(
    'America/El_Salvador',
    DynamicTimezone(
      -1,
      -21408000,
      'America/El_Salvador',
      'LMT',
      null,
      -1546279392,
      dst: false,
    ),
    Int64List.fromList([ -1546279392000, 547020000000, 559717200000, 578469600000, 591166800000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false ],
  );

  static final TimezoneRules ensenada = DynamicTimezoneRules(
    'America/Ensenada',
    DynamicTimezone(
      -1,
      -28084000,
      'America/Ensenada',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1451667600000, -1343062800000, -1234803600000, -1222963200000, -1207242000000, -873820800000, -769395600000, -761677200000, -686073600000, -661539600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1175421600000, 1193562000000, 1207476000000, 1225011600000, 1238925600000, 1256461200000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'MST', 'PST', 'MST', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, false, false, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules fortNelson = DynamicTimezoneRules(
    'America/Fort_Nelson',
    DynamicTimezone(
      -1,
      -29447000,
      'America/Fort_Nelson',
      'LMT',
      null,
      -2713880953,
      dst: false,
    ),
    Int64List.fromList([ -2713880953000, -1632060000000, -1615129200000, -880207200000, -769395600000, -765385200000, -715788000000, -702486000000, -684338400000, -671036400000, -652888800000, -639586800000, -620834400000, -608137200000, -589384800000, -576082800000, -557935200000, -544633200000, -526485600000, -513183600000, -495036000000, -481734000000, -463586400000, -450284400000, -431532000000, -418230000000, -400082400000, -386780400000, -368632800000, -355330800000, -337183200000, -323881200000, -305733600000, -292431600000, -273679200000, -260982000000, -242229600000, -226508400000, -210780000000, -195058800000, -179330400000, -163609200000, -147880800000, -131554800000, -116431200000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 136375200000, 152096400000, 167824800000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000 ]),
    Int32List.fromList
    [ 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'MST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules fortWayne = DynamicTimezoneRules(
    'America/Fort_Wayne',
    DynamicTimezone(
      -1,
      -20678000,
      'America/Fort_Wayne',
      'LMT',
      null,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -900259200000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -386787600000, -368640000000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules fortaleza = DynamicTimezoneRules(
    'America/Fortaleza',
    DynamicTimezone(
      -1,
      -9240000,
      'America/Fortaleza',
      'LMT',
      null,
      -1767216360,
      dst: false,
    ),
    Int64List.fromList([ -1767216360000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 938919600000, 951616800000, 970974000000, 972180000000, 1003028400000, 1013911200000 ]),
    Int32List.fromList([ -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules glaceBay = DynamicTimezoneRules(
    'America/Glace_Bay',
    DynamicTimezone(
      -1,
      -14388000,
      'America/Glace_Bay',
      'LMT',
      null,
      -2131646412,
      dst: false,
    ),
    Int64List.fromList([ -2131646412000, -1632074400000, -1615143600000, -880221600000, -769395600000, -765399600000, -526500000000, -513198000000, 73461600000, 89182800000, 104911200000, 120632400000, 136360800000, 152082000000, 167810400000, 183531600000, 199260000000, 215586000000, 230709600000, 247035600000, 262764000000, 278485200000, 294213600000, 309934800000, 325663200000, 341384400000, 357112800000, 372834000000, 388562400000, 404888400000, 420012000000, 436338000000, 452066400000, 467787600000, 483516000000, 499237200000, 514965600000, 530686800000, 544600800000, 562136400000, 576050400000, 594190800000, 607500000000, 625640400000, 638949600000, 657090000000, 671004000000, 688539600000, 702453600000, 719989200000, 733903200000, 752043600000, 765352800000, 783493200000, 796802400000, 814942800000, 828856800000, 846392400000, 860306400000, 877842000000, 891756000000, 909291600000, 923205600000, 941346000000, 954655200000, 972795600000, 986104800000, 1004245200000, 1018159200000, 1035694800000, 1049608800000, 1067144400000, 1081058400000, 1099198800000, 1112508000000, 1130648400000, 1143957600000, 1162098000000, 1173592800000, 1194152400000, 1205042400000, 1225602000000, 1236492000000, 1257051600000, 1268546400000, 1289106000000, 1299996000000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList
    [ 'AST', 'ADT', 'AST', 'AWT', 'APT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules godthab = DynamicTimezoneRules(
    'America/Godthab',
    DynamicTimezone(
      -1,
      -12416000,
      'America/Godthab',
      'LMT',
      null,
      -1686083584,
      dst: false,
    ),
    Int64List.fromList([ -1686083584000, 323845200000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000, 2153350800000, 2172099600000, 2184800400000, 2203549200000, 2216250000000, 2234998800000, 2248304400000, 2266448400000, 2279754000000, 2297898000000, 2311203600000, 2329347600000, 2342653200000, 2361402000000, 2374102800000, 2392851600000, 2405552400000, 2424301200000, 2437606800000, 2455750800000, 2469056400000, 2487200400000, 2500506000000, 2519254800000, 2531955600000, 2550704400000, 2563405200000, 2582154000000, 2595459600000, 2613603600000, 2626909200000, 2645053200000, 2658358800000, 2676502800000, 2689808400000, 2708557200000, 2721258000000, 2740006800000, 2752707600000, 2771456400000, 2784762000000, 2802906000000, 2816211600000, 2834355600000, 2847661200000, 2866410000000, 2879110800000, 2897859600000, 2910560400000, 2929309200000, 2942010000000, 2960758800000, 2974064400000, 2992208400000, 3005514000000, 3023658000000, 3036963600000, 3055712400000, 3068413200000, 3087162000000, 3099862800000, 3118611600000, 3131917200000, 3150061200000, 3163366800000, 3181510800000, 3194816400000, 3212960400000, 3226266000000, 3245014800000, 3257715600000, 3276464400000, 3289165200000, 3307914000000, 3321219600000, 3339363600000, 3352669200000, 3370813200000, 3384118800000, 3402867600000, 3415568400000, 3434317200000, 3447018000000, 3465766800000, 3479072400000, 3497216400000, 3510522000000, 3528666000000, 3541971600000, 3560115600000, 3573421200000, 3592170000000, 3604870800000, 3623619600000, 3636320400000, 3655069200000, 3668374800000, 3686518800000, 3699824400000, 3717968400000, 3731274000000, 3750022800000, 3762723600000, 3781472400000, 3794173200000, 3812922000000, 3825622800000, 3844371600000, 3857677200000, 3875821200000, 3889126800000, 3907270800000, 3920576400000, 3939325200000, 3952026000000, 3970774800000, 3983475600000, 4002224400000, 4015530000000, 4033674000000, 4046979600000, 4065123600000, 4078429200000, 4096573200000, 4109878800000, 4128627600000, 4141328400000, 4160077200000, 4172778000000, 4191526800000, 4204227600000, 4222976400000, 4236282000000, 4254426000000, 4267731600000, 4285875600000, 4299181200000, 4317930000000, 4330630800000, 4349379600000, 4362080400000, 4380829200000, 4394134800000, 4412278800000, 4425584400000, 4443728400000, 4457034000000, 4475178000000, 4488483600000, 4507232400000, 4519933200000, 4538682000000, 4551382800000, 4570131600000, 4583437200000, 4601581200000, 4614886800000, 4633030800000, 4646336400000, 4665085200000, 4677786000000, 4696534800000, 4709235600000, 4727984400000, 4741290000000, 4759434000000, 4772739600000, 4790883600000, 4804189200000, 4822333200000, 4835638800000, 4854387600000, 4867088400000, 4885837200000, 4898538000000, 4917286800000, 4930592400000, 4948736400000, 4962042000000, 4980186000000, 4993491600000, 5012240400000, 5024941200000, 5043690000000, 5056390800000, 5075139600000, 5087840400000, 5106589200000, 5119894800000, 5138038800000, 5151344400000, 5169488400000, 5182794000000, 5201542800000, 5214243600000, 5232992400000, 5245693200000, 5264442000000, 5277747600000, 5295891600000, 5309197200000, 5327341200000, 5340646800000, 5358790800000, 5372096400000, 5390845200000, 5403546000000, 5422294800000, 5434995600000, 5453744400000, 5467050000000, 5485194000000, 5498499600000, 5516643600000, 5529949200000, 5548698000000, 5561398800000, 5580147600000, 5592848400000, 5611597200000, 5624902800000, 5643046800000, 5656352400000, 5674496400000, 5687802000000, 5705946000000, 5719251600000, 5738000400000, 5750701200000, 5769450000000, 5782150800000, 5800899600000, 5814205200000, 5832349200000, 5845654800000, 5863798800000, 5877104400000, 5895853200000, 5908554000000, 5927302800000, 5940003600000, 5958752400000, 5971453200000, 5990202000000, 6003507600000, 6021651600000, 6034957200000, 6053101200000, 6066406800000, 6085155600000, 6097856400000, 6116605200000, 6129306000000, 6148054800000, 6161360400000, 6179504400000, 6192810000000, 6210954000000, 6224259600000, 6242403600000, 6255709200000, 6274458000000, 6287158800000, 6305907600000, 6318608400000, 6337357200000, 6350662800000, 6368806800000, 6382112400000, 6400256400000, 6413562000000, 6432310800000, 6445011600000, 6463760400000, 6476461200000, 6495210000000, 6508515600000, 6526659600000, 6539965200000, 6558109200000, 6571414800000, 6589558800000, 6602864400000, 6621613200000, 6634314000000, 6653062800000, 6665763600000, 6684512400000, 6697818000000, 6715962000000, 6729267600000, 6747411600000, 6760717200000, 6779466000000, 6792166800000, 6810915600000, 6823616400000, 6842365200000, 6855066000000, 6873814800000, 6887120400000, 6905264400000, 6918570000000, 6936714000000, 6950019600000, 6968768400000, 6981469200000, 7000218000000, 7012918800000, 7031667600000, 7044973200000, 7063117200000, 7076422800000, 7094566800000, 7107872400000, 7126016400000, 7139322000000, 7158070800000, 7170771600000, 7189520400000, 7202221200000, 7220970000000, 7234275600000, 7252419600000, 7265725200000, 7283869200000, 7297174800000, 7315318800000, 7328624400000, 7347373200000, 7360074000000, 7378822800000, 7391523600000, 7410272400000, 7423578000000, 7441722000000, 7455027600000, 7473171600000, 7486477200000, 7504621200000, 7517926800000, 7536675600000, 7549376400000, 7568125200000, 7580826000000, 7599574800000, 7612880400000, 7631024400000, 7644330000000, 7662474000000, 7675779600000, 7694528400000, 7707229200000, 7725978000000, 7738678800000, 7757427600000, 7770733200000, 7788877200000, 7802182800000, 7820326800000, 7833632400000, 7851776400000, 7865082000000, 7883830800000, 7896531600000, 7915280400000, 7927981200000, 7946730000000, 7960035600000, 7978179600000, 7991485200000, 8009629200000, 8022934800000, 8041683600000, 8054384400000, 8073133200000, 8085834000000, 8104582800000, 8117283600000, 8136032400000, 8149338000000, 8167482000000, 8180787600000, 8198931600000, 8212237200000, 8230986000000, 8243686800000, 8262435600000, 8275136400000, 8293885200000, 8307190800000, 8325334800000, 8338640400000, 8356784400000, 8370090000000, 8388234000000, 8401539600000, 8420288400000, 8432989200000, 8451738000000, 8464438800000, 8483187600000, 8496493200000, 8514637200000, 8527942800000, 8546086800000, 8559392400000, 8578141200000, 8590842000000, 8609590800000, 8622291600000, 8641040400000, 8654346000000, 8672490000000, 8685795600000, 8703939600000, 8717245200000, 8735389200000, 8748694800000, 8767443600000, 8780144400000, 8798893200000, 8811594000000, 8830342800000, 8843648400000, 8861792400000, 8875098000000, 8893242000000, 8906547600000, 8925296400000, 8937997200000, 8956746000000, 8969446800000, 8988195600000, 9000896400000, 9019645200000, 9032950800000, 9051094800000, 9064400400000, 9082544400000, 9095850000000, 9114598800000, 9127299600000, 9146048400000, 9158749200000, 9177498000000, 9190803600000, 9208947600000, 9222253200000, 9240397200000, 9253702800000, 9271846800000, 9285152400000, 9303901200000, 9316602000000, 9335350800000, 9348051600000, 9366800400000, 9380106000000, 9398250000000, 9411555600000, 9429699600000, 9443005200000, 9461754000000, 9474454800000, 9493203600000, 9505904400000, 9524653200000, 9537958800000, 9556102800000, 9569408400000, 9587552400000, 9600858000000, 9619002000000, 9632307600000, 9651056400000, 9663757200000, 9682506000000, 9695206800000, 9713955600000, 9727261200000, 9745405200000, 9758710800000, 9776854800000, 9790160400000, 9808909200000, 9821610000000, 9840358800000, 9853059600000, 9871808400000, 9884509200000, 9903258000000, 9916563600000, 9934707600000, 9948013200000, 9966157200000, 9979462800000, 9998211600000, 10010912400000, 10029661200000, 10042362000000, 10061110800000, 10074416400000, 10092560400000, 10105866000000, 10124010000000, 10137315600000, 10155459600000, 10168765200000, 10187514000000, 10200214800000, 10218963600000, 10231664400000, 10250413200000, 10263718800000, 10281862800000, 10295168400000, 10313312400000, 10326618000000, 10345366800000, 10358067600000, 10376816400000, 10389517200000, 10408266000000, 10420966800000, 10439715600000, 10453021200000, 10471165200000, 10484470800000, 10502614800000, 10515920400000, 10534064400000, 10547370000000, 10566118800000, 10578819600000, 10597568400000, 10610269200000, 10629018000000, 10642323600000, 10660467600000, 10673773200000, 10691917200000, 10705222800000, 10723971600000, 10736672400000, 10755421200000, 10768122000000, 10786870800000, 10800176400000, 10818320400000, 10831626000000, 10849770000000, 10863075600000, 10881219600000, 10894525200000, 10913274000000, 10925974800000, 10944723600000, 10957424400000, 10976173200000, 10989478800000, 11007622800000, 11020928400000, 11039072400000, 11052378000000, 11071126800000, 11083827600000, 11102576400000, 11115277200000, 11134026000000, 11146726800000, 11165475600000, 11178781200000, 11196925200000, 11210230800000, 11228374800000, 11241680400000, 11260429200000, 11273130000000, 11291878800000, 11304579600000, 11323328400000, 11336634000000, 11354778000000, 11368083600000, 11386227600000, 11399533200000, 11417677200000, 11430982800000, 11449731600000, 11462432400000, 11481181200000, 11493882000000, 11512630800000, 11525936400000, 11544080400000, 11557386000000, 11575530000000, 11588835600000, 11607584400000, 11620285200000, 11639034000000, 11651734800000, 11670483600000, 11683789200000, 11701933200000, 11715238800000, 11733382800000, 11746688400000, 11764832400000, 11778138000000, 11796886800000, 11809587600000, 11828336400000, 11841037200000, 11859786000000, 11873091600000, 11891235600000, 11904541200000, 11922685200000, 11935990800000, 11954739600000, 11967440400000, 11986189200000, 11998890000000, 12017638800000, 12030339600000, 12049088400000, 12062394000000, 12080538000000, 12093843600000, 12111987600000, 12125293200000, 12144042000000, 12156742800000, 12175491600000, 12188192400000, 12206941200000, 12220246800000, 12238390800000, 12251696400000, 12269840400000, 12283146000000, 12301290000000, 12314595600000, 12333344400000, 12346045200000, 12364794000000, 12377494800000, 12396243600000, 12409549200000, 12427693200000, 12440998800000, 12459142800000, 12472448400000, 12491197200000, 12503898000000, 12522646800000, 12535347600000, 12554096400000, 12567402000000, 12585546000000, 12598851600000, 12616995600000, 12630301200000, 12648445200000, 12661750800000, 12680499600000, 12693200400000, 12711949200000, 12724650000000, 12743398800000, 12756704400000, 12774848400000, 12788154000000, 12806298000000, 12819603600000, 12838352400000, 12851053200000, 12869802000000, 12882502800000, 12901251600000, 12913952400000, 12932701200000, 12946006800000, 12964150800000, 12977456400000, 12995600400000, 13008906000000, 13027654800000, 13040355600000, 13059104400000, 13071805200000, 13090554000000, 13103859600000, 13122003600000, 13135309200000, 13153453200000, 13166758800000, 13184902800000, 13198208400000, 13216957200000, 13229658000000, 13248406800000, 13261107600000, 13279856400000, 13293162000000, 13311306000000, 13324611600000, 13342755600000, 13356061200000, 13374810000000, 13387510800000, 13406259600000, 13418960400000, 13437709200000, 13451014800000, 13469158800000, 13482464400000, 13500608400000, 13513914000000, 13532058000000, 13545363600000, 13564112400000, 13576813200000, 13595562000000, 13608262800000, 13627011600000, 13640317200000, 13658461200000, 13671766800000, 13689910800000, 13703216400000, 13721965200000, 13734666000000, 13753414800000, 13766115600000, 13784864400000, 13797565200000, 13816314000000, 13829619600000, 13847763600000, 13861069200000, 13879213200000, 13892518800000, 13911267600000, 13923968400000, 13942717200000, 13955418000000, 13974166800000, 13987472400000, 14005616400000, 14018922000000, 14037066000000, 14050371600000, 14068515600000, 14081821200000, 14100570000000, 14113270800000, 14132019600000, 14144720400000, 14163469200000, 14176774800000, 14194918800000, 14208224400000, 14226368400000, 14239674000000, 14258422800000, 14271123600000, 14289872400000, 14302573200000, 14321322000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules gooseBay = DynamicTimezoneRules(
    'America/Goose_Bay',
    DynamicTimezone(
      -1,
      -14500000,
      'America/Goose_Bay',
      'LMT',
      null,
      -2713895900,
      dst: false,
    ),
    Int64List.fromList([ -2713895900000, -1632076148000, -1615145348000, -1096921748000, -1061670600000, -1048973400000, -1030221000000, -1017523800000, -998771400000, -986074200000, -966717000000, -954624600000, -935267400000, -922570200000, -903817800000, -891120600000, -872368200000, -769395600000, -765401400000, -746044200000, -733347000000, -714594600000, -701897400000, -683145000000, -670447800000, -651695400000, -638998200000, -619641000000, -606943800000, -589401000000, -576099000000, -557951400000, -544649400000, -526501800000, -513199800000, -495052200000, -481750200000, -463602600000, -450300600000, -431548200000, -418246200000, -400098600000, -386796600000, -368649000000, -355347000000, -337199400000, -323897400000, -305749800000, -289423800000, -273695400000, -257974200000, -242245800000, -226524600000, -210796200000, -195075000000, -179346600000, -163625400000, -147897000000, -131571000000, -119903400000, -116445600000, -100119600000, -84391200000, -68670000000, -52941600000, -37220400000, -21492000000, -5770800000, 9957600000, 25678800000, 41407200000, 57733200000, 73461600000, 89182800000, 104911200000, 120632400000, 136360800000, 152082000000, 167810400000, 183531600000, 199260000000, 215586000000, 230709600000, 247035600000, 262764000000, 278485200000, 294213600000, 309934800000, 325663200000, 341384400000, 357112800000, 372834000000, 388562400000, 404888400000, 420012000000, 436338000000, 452066400000, 467787600000, 483516000000, 499237200000, 514965600000, 530686800000, 544593660000, 562129260000, 576043260000, 594180060000, 607492860000, 625633260000, 638942460000, 657082860000, 670996860000, 688532460000, 702446460000, 719982060000, 733896060000, 752036460000, 765345660000, 783486060000, 796795260000, 814935660000, 828849660000, 846385260000, 860299260000, 877834860000, 891748860000, 909284460000, 923198460000, 941338860000, 954648060000, 972788460000, 986097660000, 1004238060000, 1018152060000, 1035687660000, 1049601660000, 1067137260000, 1081051260000, 1099191660000, 1112500860000, 1130641260000, 1143950460000, 1162090860000, 1173585660000, 1194145260000, 1205035260000, 1225594860000, 1236484860000, 1257044460000, 1268539260000, 1289098860000, 1299988860000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList([ -12652000, -9052000, -12652000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -7200000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ 'NST', 'NDT', 'NST', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NWT', 'NPT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADDT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules grandTurk = DynamicTimezoneRules(
    'America/Grand_Turk',
    DynamicTimezone(
      -1,
      -17072000,
      'America/Grand_Turk',
      'LMT',
      null,
      -2524504528,
      dst: false,
    ),
    Int64List.fromList([ -2524504528000, -1827687170000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -18430000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules grenada = DynamicTimezoneRules(
    'America/Grenada',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Grenada',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules guadeloupe = DynamicTimezoneRules(
    'America/Guadeloupe',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Guadeloupe',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules guatemala = DynamicTimezoneRules(
    'America/Guatemala',
    DynamicTimezone(
      -1,
      -21724000,
      'America/Guatemala',
      'LMT',
      null,
      -1617040676,
      dst: false,
    ),
    Int64List.fromList([ -1617040676000, 123055200000, 130914000000, 422344800000, 433054800000, 669708000000, 684219600000, 1146376800000, 1159678800000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules guayaquil = DynamicTimezoneRules(
    'America/Guayaquil',
    DynamicTimezone(
      -1,
      -19160000,
      'America/Guayaquil',
      'LMT',
      null,
      -2524502440,
      dst: false,
    ),
    Int64List.fromList([ -2524502440000, -1230749160000, 722926800000, 728884800000 ]),
    Int32List.fromList([ -18840000, -18000000, -14400000, -18000000 ]),
    [ 'QMT', '-05', '-04', '-05' ],
    [ false, false, true, false ],
  );

  static final TimezoneRules guyana = DynamicTimezoneRules(
    'America/Guyana',
    DynamicTimezone(
      -1,
      -13959000,
      'America/Guyana',
      'LMT',
      null,
      -1843589241,
      dst: false,
    ),
    Int64List.fromList([ -1843589241000, -1730577600000, 176096700000, 701841600000 ]),
    Int32List.fromList([ -14400000, -13500000, -10800000, -14400000 ]),
    [ '-04', '-0345', '-03', '-04' ],
    [ false, false, false, false ],
  );

  static final TimezoneRules halifax = DynamicTimezoneRules(
    'America/Halifax',
    DynamicTimezone(
      -1,
      -15264000,
      'America/Halifax',
      'LMT',
      null,
      -2131645536,
      dst: false,
    ),
    Int64List.fromList([ -2131645536000, -1696276800000, -1680469200000, -1632074400000, -1615143600000, -1566763200000, -1557090000000, -1535486400000, -1524949200000, -1504468800000, -1493413200000, -1472414400000, -1461963600000, -1440964800000, -1429390800000, -1409515200000, -1396731600000, -1376856000000, -1366491600000, -1346616000000, -1333832400000, -1313956800000, -1303678800000, -1282507200000, -1272661200000, -1251057600000, -1240088400000, -1219608000000, -1207429200000, -1188763200000, -1175979600000, -1157313600000, -1143925200000, -1124049600000, -1113771600000, -1091390400000, -1081026000000, -1059854400000, -1050786000000, -1030910400000, -1018126800000, -999460800000, -986677200000, -965592000000, -955227600000, -935956800000, -923173200000, -904507200000, -891723600000, -880221600000, -769395600000, -765399600000, -747252000000, -733950000000, -715802400000, -702500400000, -684352800000, -671050800000, -652903200000, -639601200000, -589399200000, -576097200000, -557949600000, -544647600000, -526500000000, -513198000000, -495050400000, -481748400000, -431546400000, -418244400000, -400096800000, -386794800000, -368647200000, -355345200000, -337197600000, -323895600000, -242244000000, -226522800000, -210794400000, -195073200000, -179344800000, -163623600000, -147895200000, -131569200000, -116445600000, -100119600000, -84391200000, -68670000000, -52941600000, -37220400000, -21492000000, -5770800000, 9957600000, 25678800000, 41407200000, 57733200000, 73461600000, 89182800000, 104911200000, 120632400000, 136360800000, 152082000000, 167810400000, 183531600000, 199260000000, 215586000000, 230709600000, 247035600000, 262764000000, 278485200000, 294213600000, 309934800000, 325663200000, 341384400000, 357112800000, 372834000000, 388562400000, 404888400000, 420012000000, 436338000000, 452066400000, 467787600000, 483516000000, 499237200000, 514965600000, 530686800000, 544600800000, 562136400000, 576050400000, 594190800000, 607500000000, 625640400000, 638949600000, 657090000000, 671004000000, 688539600000, 702453600000, 719989200000, 733903200000, 752043600000, 765352800000, 783493200000, 796802400000, 814942800000, 828856800000, 846392400000, 860306400000, 877842000000, 891756000000, 909291600000, 923205600000, 941346000000, 954655200000, 972795600000, 986104800000, 1004245200000, 1018159200000, 1035694800000, 1049608800000, 1067144400000, 1081058400000, 1099198800000, 1112508000000, 1130648400000, 1143957600000, 1162098000000, 1173592800000, 1194152400000, 1205042400000, 1225602000000, 1236492000000, 1257051600000, 1268546400000, 1289106000000, 1299996000000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList
    [ 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'AWT', 'APT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules havana = DynamicTimezoneRules(
    'America/Havana',
    DynamicTimezone(
      -1,
      -19768000,
      'America/Havana',
      'LMT',
      null,
      -2524501832,
      dst: false,
    ),
    Int64List.fromList([ -2524501832000, -1402813824000, -1311534000000, -1300996800000, -933534000000, -925675200000, -902084400000, -893620800000, -870030000000, -862171200000, -775681200000, -767822400000, -744231600000, -736372800000, -144702000000, -134251200000, -113425200000, -102542400000, -86295600000, -72907200000, -54154800000, -41457600000, -21495600000, -5774400000, 9954000000, 25675200000, 41403600000, 57729600000, 73458000000, 87364800000, 104907600000, 118900800000, 136357200000, 150436800000, 167806800000, 183528000000, 199256400000, 215582400000, 230706000000, 247032000000, 263365200000, 276667200000, 290581200000, 308721600000, 322030800000, 340171200000, 358318800000, 371620800000, 389768400000, 403070400000, 421218000000, 434520000000, 452667600000, 466574400000, 484117200000, 498024000000, 511333200000, 529473600000, 542782800000, 560923200000, 574837200000, 592372800000, 606286800000, 623822400000, 638946000000, 655876800000, 671000400000, 687330000000, 702450000000, 718779600000, 733899600000, 750229200000, 765349200000, 781678800000, 796798800000, 813128400000, 828853200000, 844578000000, 860302800000, 876632400000, 891147600000, 909291600000, 922597200000, 941346000000, 954651600000, 972795600000, 986101200000, 1004245200000, 1018155600000, 1035694800000, 1049605200000, 1067144400000, 1080450000000, 1162098000000, 1173589200000, 1193547600000, 1205643600000, 1224997200000, 1236488400000, 1256446800000, 1268542800000, 1288501200000, 1300597200000, 1321160400000, 1333256400000, 1352005200000, 1362891600000, 1383454800000, 1394341200000, 1414904400000, 1425790800000, 1446354000000, 1457845200000, 1478408400000, 1489294800000, 1509858000000, 1520744400000, 1541307600000, 1552194000000, 1572757200000, 1583643600000, 1604206800000, 1615698000000, 1636261200000, 1647147600000, 1667710800000, 1678597200000, 1699160400000, 1710046800000, 1730610000000, 1741496400000, 1762059600000, 1772946000000, 1793509200000, 1805000400000, 1825563600000, 1836450000000, 1857013200000, 1867899600000, 1888462800000, 1899349200000, 1919912400000, 1930798800000, 1951362000000, 1962853200000, 1983416400000, 1994302800000, 2014866000000, 2025752400000, 2046315600000, 2057202000000, 2077765200000, 2088651600000, 2109214800000, 2120101200000, 2140664400000 ]),
    Int32List.fromList([ -19776000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules hermosillo = DynamicTimezoneRules(
    'America/Hermosillo',
    DynamicTimezone(
      -1,
      -26632000,
      'America/Hermosillo',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -873828000000, -661539600000, 28800000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -28800000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'MST', 'PST', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, false, false, true, false, false, false, false, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules indianapolis = DynamicTimezoneRules(
    'America/Indianapolis',
    DynamicTimezone(
      -1,
      -20678000,
      'America/Indianapolis',
      'LMT',
      null,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -900259200000, -891795600000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -386787600000, -368640000000, -21488400000, -5767200000, 9961200000, 25682400000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules inuvik = DynamicTimezoneRules(
    'America/Inuvik',
    DynamicTimezone(
      -1,
      0,
      'America/Inuvik',
      '-00',
      null,
      -536457600,
      dst: false,
    ),
    Int64List.fromList([ -536457600000, 73476000000, 89197200000, 104925600000, 120646800000, 136375200000, 152096400000, 167824800000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList([ -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules iqaluit = DynamicTimezoneRules(
    'America/Iqaluit',
    DynamicTimezone(
      -1,
      0,
      'America/Iqaluit',
      '-00',
      null,
      -865296000,
      dst: false,
    ),
    Int64List.fromList([ -865296000000, -769395600000, -765396000000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954662400000, 972802800000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList
    [ 'EWT', 'EPT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules jamaica = DynamicTimezoneRules(
    'America/Jamaica',
    DynamicTimezone(
      -1,
      -18430000,
      'America/Jamaica',
      'LMT',
      null,
      -2524503170,
      dst: false,
    ),
    Int64List.fromList([ -2524503170000, -1827687170000, 126687600000, 152085600000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000 ]),
    Int32List.fromList([ -18430000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'KMT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules jujuy = DynamicTimezoneRules(
    'America/Jujuy',
    DynamicTimezone(
      -1,
      -15672000,
      'America/Jujuy',
      'LMT',
      null,
      -2372096328,
      dst: false,
    ),
    Int64List.fromList([ -2372096328000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 657086400000, 669178800000, 686721600000, 699415200000, 719377200000, 731469600000, 938919600000, 952052400000, 1198983600000, 1205632800000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -14400000, -10800000, -14400000, -7200000, -10800000, -7200000, -10800000, -10800000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-04', '-03', '-04', '-02', '-03', '-02', '-03', '-03', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules juneau = DynamicTimezoneRules(
    'America/Juneau',
    DynamicTimezone(
      -1,
      54139000,
      'America/Juneau',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188954939000, -880207200000, -769395600000, -765385200000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341402400000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -32261000, -28800000, -25200000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -28800000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'YDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules knoxIn = DynamicTimezoneRules(
    'America/Knox_IN',
    DynamicTimezone(
      -1,
      -20790000,
      'America/Knox_IN',
      'LMT',
      null,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -447267600000, -431539200000, -415818000000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -257965200000, -242236800000, -195066000000, -84384000000, -68662800000, -52934400000, -37213200000, -21484800000, -5763600000, 9964800000, 25686000000, 41414400000, 57740400000, 73468800000, 89190000000, 104918400000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 1143961200000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules kralendijk = DynamicTimezoneRules(
    'America/Kralendijk',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Kralendijk',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules laPaz = DynamicTimezoneRules(
    'America/La_Paz',
    DynamicTimezone(
      -1,
      -16356000,
      'America/La_Paz',
      'LMT',
      null,
      -2524505244,
      dst: false,
    ),
    Int64List.fromList([ -2524505244000, -1205954844000, -1192307244000 ]),
    Int32List.fromList([ -16356000, -12756000, -14400000 ]),
    [ 'CMT', 'BST', '-04' ],
    [ false, true, false ],
  );

  static final TimezoneRules lima = DynamicTimezoneRules(
    'America/Lima',
    DynamicTimezone(
      -1,
      -18492000,
      'America/Lima',
      'LMT',
      null,
      -2524503108,
      dst: false,
    ),
    Int64List.fromList([ -2524503108000, -1938538284000, -1009825200000, -1002052800000, -986756400000, -971035200000, -955306800000, -939585600000, 504939600000, 512712000000, 536475600000, 544248000000, 631170000000, 638942400000, 757400400000, 765172800000 ]),
    Int32List.fromList([ -18516000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'LMT', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules losAngeles = DynamicTimezoneRules(
    'America/Los_Angeles',
    DynamicTimezone(
      -1,
      -28378000,
      'America/Los_Angeles',
      'LMT',
      null,
      -2717640000,
      dst: false,
    ),
    Int64List.fromList([ -2717640000000, -1633269600000, -1615129200000, -1601820000000, -1583679600000, -880207200000, -769395600000, -765385200000, -687967140000, -662655600000, -620838000000, -608137200000, -589388400000, -576082800000, -557938800000, -544633200000, -526489200000, -513183600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, -273682800000, -260982000000, -242233200000, -226508400000, -210783600000, -195058800000, -179334000000, -163609200000, -147884400000, -131554800000, -116434800000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules louisville = DynamicTimezoneRules(
    'America/Louisville',
    DynamicTimezone(
      -1,
      -20582000,
      'America/Louisville',
      'LMT',
      null,
      -2717647200,
      dst: false,
    ),
    Int64List.fromList([ -2717647200000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -1535904000000, -1525280400000, -905097600000, -891795600000, -880214400000, -769395600000, -765392400000, -747251940000, -744224400000, -620841600000, -608144400000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -450291600000, -431539200000, -415818000000, -400089600000, -384368400000, -368640000000, -352918800000, -337190400000, -321469200000, -305740800000, -289414800000, -273686400000, -266432400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 126687600000, 152089200000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -18000000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'CDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST', 'EDT', 'EST' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules lowerPrinces = DynamicTimezoneRules(
    'America/Lower_Princes',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Lower_Princes',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules maceio = DynamicTimezoneRules(
    'America/Maceio',
    DynamicTimezone(
      -1,
      -8572000,
      'America/Maceio',
      'LMT',
      null,
      -1767217028,
      dst: false,
    ),
    Int64List.fromList([ -1767217028000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 813726000000, 824004000000, 938919600000, 951616800000, 970974000000, 972180000000, 1003028400000, 1013911200000 ]),
    Int32List.fromList([ -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules managua = DynamicTimezoneRules(
    'America/Managua',
    DynamicTimezone(
      -1,
      -20708000,
      'America/Managua',
      'LMT',
      null,
      -2524500892,
      dst: false,
    ),
    Int64List.fromList([ -2524500892000, -1121105688000, 105084000000, 161758800000, 290584800000, 299134800000, 322034400000, 330584400000, 694260000000, 717310800000, 725868000000, 852094800000, 1113112800000, 1128229200000, 1146384000000, 1159682400000 ]),
    Int32List.fromList([ -20712000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'MMT', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, false, true, false, true, false, false, false, false, false, true, false, true, false ],
  );

  static final TimezoneRules manaus = DynamicTimezoneRules(
    'America/Manaus',
    DynamicTimezone(
      -1,
      -14404000,
      'America/Manaus',
      'LMT',
      null,
      -1767211196,
      dst: false,
    ),
    Int64List.fromList([ -1767211196000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000, 750830400000, 761713200000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules marigot = DynamicTimezoneRules(
    'America/Marigot',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Marigot',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules martinique = DynamicTimezoneRules(
    'America/Martinique',
    DynamicTimezone(
      -1,
      -14660000,
      'America/Martinique',
      'LMT',
      null,
      -2524506940,
      dst: false,
    ),
    Int64List.fromList([ -2524506940000, -1851537340000, 323841600000, 338958000000 ]),
    Int32List.fromList([ -14660000, -14400000, -10800000, -14400000 ]),
    [ 'FFMT', 'AST', 'ADT', 'AST' ],
    [ false, false, true, false ],
  );

  static final TimezoneRules matamoros = DynamicTimezoneRules(
    'America/Matamoros',
    DynamicTimezone(
      -1,
      -23400000,
      'America/Matamoros',
      'LMT',
      null,
      -1514743200,
      dst: false,
    ),
    Int64List.fromList([ -1514743200000, 568015200000, 576057600000, 594198000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules mazatlan = DynamicTimezoneRules(
    'America/Mazatlan',
    DynamicTimezone(
      -1,
      -25540000,
      'America/Mazatlan',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -873828000000, -661539600000, 28800000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1270371600000, 1288512000000, 1301821200000, 1319961600000, 1333270800000, 1351411200000, 1365325200000, 1382860800000, 1396774800000, 1414310400000, 1428224400000, 1445760000000, 1459674000000, 1477814400000, 1491123600000, 1509264000000, 1522573200000, 1540713600000, 1554627600000, 1572163200000, 1586077200000, 1603612800000, 1617526800000, 1635667200000, 1648976400000, 1667116800000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -28800000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'MST', 'PST', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, false, false, true, false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules mendoza = DynamicTimezoneRules(
    'America/Mendoza',
    DynamicTimezone(
      -1,
      -16516000,
      'America/Mendoza',
      'LMT',
      null,
      -2372095484,
      dst: false,
    ),
    Int64List.fromList([ -2372095484000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 655963200000, 667796400000, 687499200000, 699418800000, 719380800000, 731469600000, 938919600000, 952052400000, 1085281200000, 1096171200000, 1198983600000, 1205632800000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -14400000, -10800000, -14400000, -10800000, -14400000, -7200000, -10800000, -10800000, -10800000, -14400000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-04', '-03', '-04', '-03', '-04', '-02', '-03', '-03', '-03', '-04', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, true, false ],
  );

  static final TimezoneRules menominee = DynamicTimezoneRules(
    'America/Menominee',
    DynamicTimezone(
      -1,
      -21027000,
      'America/Menominee',
      'LMT',
      null,
      -2659759773,
      dst: false,
    ),
    Int64List.fromList([ -2659759773000, -1633276800000, -1615136400000, -1601827200000, -1583686800000, -880214400000, -769395600000, -765392400000, -747244800000, -733942800000, -116438400000, -100112400000, -21484800000, 104914800000, 120639600000, 126691200000, 152089200000, 162374400000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'EST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules merida = DynamicTimezoneRules(
    'America/Merida',
    DynamicTimezone(
      -1,
      -21508000,
      'America/Merida',
      'LMT',
      null,
      -1514743200,
      dst: false,
    ),
    Int64List.fromList([ -1514743200000, 377935200000, 407653200000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1270368000000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1428220800000, 1445756400000, 1459670400000, 1477810800000, 1491120000000, 1509260400000, 1522569600000, 1540710000000, 1554624000000, 1572159600000, 1586073600000, 1603609200000, 1617523200000, 1635663600000, 1648972800000, 1667113200000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'EST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules metlakatla = DynamicTimezoneRules(
    'America/Metlakatla',
    DynamicTimezone(
      -1,
      54822000,
      'America/Metlakatla',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188955622000, -880207200000, -769395600000, -765385200000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1547978400000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -31578000, -28800000, -25200000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'PST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules mexicoCity = DynamicTimezoneRules(
    'America/Mexico_City',
    DynamicTimezone(
      -1,
      -23796000,
      'America/Mexico_City',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, -975261600000, -963169200000, -917114400000, -907354800000, -821901600000, -810068400000, -627501600000, -612990000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1270368000000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1428220800000, 1445756400000, 1459670400000, 1477810800000, 1491120000000, 1509260400000, 1522569600000, 1540710000000, 1554624000000, 1572159600000, 1586073600000, 1603609200000, 1617523200000, 1635663600000, 1648972800000, 1667113200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules miquelon = DynamicTimezoneRules(
    'America/Miquelon',
    DynamicTimezone(
      -1,
      -13480000,
      'America/Miquelon',
      'LMT',
      null,
      -1850328920,
      dst: false,
    ),
    Int64List.fromList([ -1850328920000, 326001600000, 544597200000, 562132800000, 576046800000, 594187200000, 607496400000, 625636800000, 638946000000, 657086400000, 671000400000, 688536000000, 702450000000, 719985600000, 733899600000, 752040000000, 765349200000, 783489600000, 796798800000, 814939200000, 828853200000, 846388800000, 860302800000, 877838400000, 891752400000, 909288000000, 923202000000, 941342400000, 954651600000, 972792000000, 986101200000, 1004241600000, 1018155600000, 1035691200000, 1049605200000, 1067140800000, 1081054800000, 1099195200000, 1112504400000, 1130644800000, 1143954000000, 1162094400000, 1173589200000, 1194148800000, 1205038800000, 1225598400000, 1236488400000, 1257048000000, 1268542800000, 1289102400000, 1299992400000, 1320552000000, 1331442000000, 1352001600000, 1362891600000, 1383451200000, 1394341200000, 1414900800000, 1425790800000, 1446350400000, 1457845200000, 1478404800000, 1489294800000, 1509854400000, 1520744400000, 1541304000000, 1552194000000, 1572753600000, 1583643600000, 1604203200000, 1615698000000, 1636257600000, 1647147600000, 1667707200000, 1678597200000, 1699156800000, 1710046800000, 1730606400000, 1741496400000, 1762056000000, 1772946000000, 1793505600000, 1805000400000, 1825560000000, 1836450000000, 1857009600000, 1867899600000, 1888459200000, 1899349200000, 1919908800000, 1930798800000, 1951358400000, 1962853200000, 1983412800000, 1994302800000, 2014862400000, 2025752400000, 2046312000000, 2057202000000, 2077761600000, 2088651600000, 2109211200000, 2120101200000, 2140660800000 ]),
    Int32List.fromList([ -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules moncton = DynamicTimezoneRules(
    'America/Moncton',
    DynamicTimezone(
      -1,
      -15548000,
      'America/Moncton',
      'LMT',
      null,
      -2715882052,
      dst: false,
    ),
    Int64List.fromList([ -2715882052000, -2131642800000, -1632074400000, -1615143600000, -1153681200000, -1145822400000, -1122231600000, -1114372800000, -1090782000000, -1082923200000, -1059332400000, -1051473600000, -1027882800000, -1020024000000, -996433200000, -988574400000, -965674800000, -955396800000, -934743600000, -923947200000, -904503600000, -891892800000, -880221600000, -769395600000, -765399600000, -747252000000, -733950000000, -715802400000, -702500400000, -684352800000, -671050800000, -652903200000, -639601200000, -620848800000, -608151600000, -589399200000, -576097200000, -557949600000, -544647600000, -526500000000, -513198000000, -495050400000, -481748400000, -463600800000, -450298800000, -431546400000, -418244400000, -400096800000, -384375600000, -368647200000, -352926000000, -337197600000, -321476400000, -305748000000, -289422000000, -273693600000, -257972400000, -242244000000, -226522800000, -210794400000, -195073200000, -179344800000, -163623600000, -147895200000, -131569200000, -116445600000, -100119600000, -84391200000, -68670000000, -52941600000, -37220400000, -21492000000, -5770800000, 9957600000, 25678800000, 41407200000, 57733200000, 73461600000, 89182800000, 136360800000, 152082000000, 167810400000, 183531600000, 199260000000, 215586000000, 230709600000, 247035600000, 262764000000, 278485200000, 294213600000, 309934800000, 325663200000, 341384400000, 357112800000, 372834000000, 388562400000, 404888400000, 420012000000, 436338000000, 452066400000, 467787600000, 483516000000, 499237200000, 514965600000, 530686800000, 544600800000, 562136400000, 576050400000, 594190800000, 607500000000, 625640400000, 638949600000, 657090000000, 671004000000, 688539600000, 702453600000, 719989200000, 733896060000, 752036460000, 765345660000, 783486060000, 796795260000, 814935660000, 828849660000, 846385260000, 860299260000, 877834860000, 891748860000, 909284460000, 923198460000, 941338860000, 954648060000, 972788460000, 986097660000, 1004238060000, 1018152060000, 1035687660000, 1049601660000, 1067137260000, 1081051260000, 1099191660000, 1112500860000, 1130641260000, 1143950460000, 1162090860000, 1173592800000, 1194152400000, 1205042400000, 1225602000000, 1236492000000, 1257051600000, 1268546400000, 1289106000000, 1299996000000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList([ -18000000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ 'EST', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'AWT', 'APT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST', 'ADT', 'AST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules monterrey = DynamicTimezoneRules(
    'America/Monterrey',
    DynamicTimezone(
      -1,
      -24076000,
      'America/Monterrey',
      'LMT',
      null,
      -1514743200,
      dst: false,
    ),
    Int64List.fromList([ -1514743200000, 568015200000, 576057600000, 594198000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 989136000000, 1001833200000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1175414400000, 1193554800000, 1207468800000, 1225004400000, 1238918400000, 1256454000000, 1270368000000, 1288508400000, 1301817600000, 1319958000000, 1333267200000, 1351407600000, 1365321600000, 1382857200000, 1396771200000, 1414306800000, 1428220800000, 1445756400000, 1459670400000, 1477810800000, 1491120000000, 1509260400000, 1522569600000, 1540710000000, 1554624000000, 1572159600000, 1586073600000, 1603609200000, 1617523200000, 1635663600000, 1648972800000, 1667113200000 ]),
    Int32List.fromList([ -21600000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules montevideo = DynamicTimezoneRules(
    'America/Montevideo',
    DynamicTimezone(
      -1,
      -13491000,
      'America/Montevideo',
      'LMT',
      null,
      -1942690509,
      dst: false,
    ),
    Int64List.fromList([ -1942690509000, -1567455309000, -1459627200000, -1443819600000, -1428006600000, -1412283600000, -1396470600000, -1380747600000, -1141590600000, -1128286800000, -1110141000000, -1096837200000, -1078691400000, -1065387600000, -1047241800000, -1033938000000, -1015187400000, -1002488400000, -983737800000, -971038800000, -954707400000, -938984400000, -920838600000, -907534800000, -896819400000, -853621200000, -845847000000, -334789200000, -319671000000, -314226000000, -309996000000, -149720400000, -134604000000, -50446800000, -34205400000, 9860400000, 14176800000, 72846000000, 80100000000, 127278000000, 132111000000, 147234600000, 156913200000, 165376800000, 219812400000, 226461600000, 250052400000, 257911200000, 282711600000, 289360800000, 294202800000, 322020000000, 566449200000, 573012000000, 597812400000, 605066400000, 625633200000, 635911200000, 656478000000, 667965600000, 688532400000, 699415200000, 719377200000, 730864800000, 1095562800000, 1111896000000, 1128834000000, 1142136000000, 1159678800000, 1173585600000, 1191733200000, 1205035200000, 1223182800000, 1236484800000, 1254632400000, 1268539200000, 1286082000000, 1299988800000, 1317531600000, 1331438400000, 1349586000000, 1362888000000, 1381035600000, 1394337600000, 1412485200000, 1425787200000 ]),
    Int32List.fromList([ -13491000, -14400000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -12600000, -10800000, -9000000, -10800000, -9000000, -10800000, -7200000, -10800000, -7200000, -10800000, -9000000, -10800000, -7200000, -10800000, -7200000, -10800000, -5400000, -9000000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ 'MMT', '-04', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0330', '-03', '-0230', '-03', '-0230', '-03', '-02', '-03', '-02', '-03', '-0230', '-03', '-02', '-03', '-02', '-03', '-0130', '-0230', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules montreal = DynamicTimezoneRules(
    'America/Montreal',
    DynamicTimezone(
      -1,
      -19052000,
      'America/Montreal',
      'LMT',
      null,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules montserrat = DynamicTimezoneRules(
    'America/Montserrat',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Montserrat',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules nassau = DynamicTimezoneRules(
    'America/Nassau',
    DynamicTimezone(
      -1,
      -19052000,
      'America/Nassau',
      'LMT',
      null,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules newYork = DynamicTimezoneRules(
    'America/New_York',
    DynamicTimezone(
      -1,
      -17762000,
      'America/New_York',
      'LMT',
      null,
      -2717650800,
      dst: false,
    ),
    Int64List.fromList([ -2717650800000, -1633280400000, -1615140000000, -1601830800000, -1583690400000, -1570381200000, -1551636000000, -1536512400000, -1523210400000, -1504458000000, -1491760800000, -1473008400000, -1459706400000, -1441558800000, -1428256800000, -1410109200000, -1396807200000, -1378659600000, -1365357600000, -1347210000000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1189357200000, -1176055200000, -1157302800000, -1144605600000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -923248800000, -905101200000, -891799200000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715798800000, -702496800000, -684349200000, -671047200000, -652899600000, -639597600000, -620845200000, -608148000000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -447271200000, -431542800000, -415821600000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 126687600000, 152085600000, 162370800000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules nipigon = DynamicTimezoneRules(
    'America/Nipigon',
    DynamicTimezone(
      -1,
      -19052000,
      'America/Nipigon',
      'LMT',
      null,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules nome = DynamicTimezoneRules(
    'America/Nome',
    DynamicTimezone(
      -1,
      46702000,
      'America/Nome',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188947502000, -880196400000, -769395600000, -765374400000, -86878800000, -21466800000, -5745600000, 9982800000, 25704000000, 41432400000, 57758400000, 73486800000, 89208000000, 104936400000, 120657600000, 126709200000, 152107200000, 162392400000, 183556800000, 199285200000, 215611200000, 230734800000, 247060800000, 262789200000, 278510400000, 294238800000, 309960000000, 325688400000, 341409600000, 357138000000, 372859200000, 388587600000, 404913600000, 420037200000, 436363200000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -39698000, -39600000, -36000000, -36000000, -39600000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -39600000, -36000000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'NST', 'NWT', 'NPT', 'NST', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'BST', 'BDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules noronha = DynamicTimezoneRules(
    'America/Noronha',
    DynamicTimezone(
      -1,
      -7780000,
      'America/Noronha',
      'LMT',
      null,
      -1767217820,
      dst: false,
    ),
    Int64List.fromList([ -1767217820000, -1206961200000, -1191366000000, -1175378400000, -1159830000000, -633823200000, -622072800000, -602287200000, -591836400000, -570751200000, -560214000000, -539128800000, -531356400000, -191368800000, -184201200000, -155167200000, -150073200000, -128901600000, -121129200000, -99957600000, -89593200000, -68421600000, -57970800000, 499744800000, 511232400000, 530589600000, 540262800000, 562125600000, 571194000000, 592970400000, 602038800000, 624420000000, 634698000000, 938916000000, 951613200000, 970970400000, 971571600000, 1003024800000, 1013907600000 ]),
    Int32List.fromList([ -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000, -3600000, -7200000 ]),
    [ '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02', '-01', '-02' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules nuuk = DynamicTimezoneRules(
    'America/Nuuk',
    DynamicTimezone(
      -1,
      -12416000,
      'America/Nuuk',
      'LMT',
      null,
      -1686083584,
      dst: false,
    ),
    Int64List.fromList([ -1686083584000, 323845200000, 338950800000, 354675600000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000, 2153350800000, 2172099600000, 2184800400000, 2203549200000, 2216250000000, 2234998800000, 2248304400000, 2266448400000, 2279754000000, 2297898000000, 2311203600000, 2329347600000, 2342653200000, 2361402000000, 2374102800000, 2392851600000, 2405552400000, 2424301200000, 2437606800000, 2455750800000, 2469056400000, 2487200400000, 2500506000000, 2519254800000, 2531955600000, 2550704400000, 2563405200000, 2582154000000, 2595459600000, 2613603600000, 2626909200000, 2645053200000, 2658358800000, 2676502800000, 2689808400000, 2708557200000, 2721258000000, 2740006800000, 2752707600000, 2771456400000, 2784762000000, 2802906000000, 2816211600000, 2834355600000, 2847661200000, 2866410000000, 2879110800000, 2897859600000, 2910560400000, 2929309200000, 2942010000000, 2960758800000, 2974064400000, 2992208400000, 3005514000000, 3023658000000, 3036963600000, 3055712400000, 3068413200000, 3087162000000, 3099862800000, 3118611600000, 3131917200000, 3150061200000, 3163366800000, 3181510800000, 3194816400000, 3212960400000, 3226266000000, 3245014800000, 3257715600000, 3276464400000, 3289165200000, 3307914000000, 3321219600000, 3339363600000, 3352669200000, 3370813200000, 3384118800000, 3402867600000, 3415568400000, 3434317200000, 3447018000000, 3465766800000, 3479072400000, 3497216400000, 3510522000000, 3528666000000, 3541971600000, 3560115600000, 3573421200000, 3592170000000, 3604870800000, 3623619600000, 3636320400000, 3655069200000, 3668374800000, 3686518800000, 3699824400000, 3717968400000, 3731274000000, 3750022800000, 3762723600000, 3781472400000, 3794173200000, 3812922000000, 3825622800000, 3844371600000, 3857677200000, 3875821200000, 3889126800000, 3907270800000, 3920576400000, 3939325200000, 3952026000000, 3970774800000, 3983475600000, 4002224400000, 4015530000000, 4033674000000, 4046979600000, 4065123600000, 4078429200000, 4096573200000, 4109878800000, 4128627600000, 4141328400000, 4160077200000, 4172778000000, 4191526800000, 4204227600000, 4222976400000, 4236282000000, 4254426000000, 4267731600000, 4285875600000, 4299181200000, 4317930000000, 4330630800000, 4349379600000, 4362080400000, 4380829200000, 4394134800000, 4412278800000, 4425584400000, 4443728400000, 4457034000000, 4475178000000, 4488483600000, 4507232400000, 4519933200000, 4538682000000, 4551382800000, 4570131600000, 4583437200000, 4601581200000, 4614886800000, 4633030800000, 4646336400000, 4665085200000, 4677786000000, 4696534800000, 4709235600000, 4727984400000, 4741290000000, 4759434000000, 4772739600000, 4790883600000, 4804189200000, 4822333200000, 4835638800000, 4854387600000, 4867088400000, 4885837200000, 4898538000000, 4917286800000, 4930592400000, 4948736400000, 4962042000000, 4980186000000, 4993491600000, 5012240400000, 5024941200000, 5043690000000, 5056390800000, 5075139600000, 5087840400000, 5106589200000, 5119894800000, 5138038800000, 5151344400000, 5169488400000, 5182794000000, 5201542800000, 5214243600000, 5232992400000, 5245693200000, 5264442000000, 5277747600000, 5295891600000, 5309197200000, 5327341200000, 5340646800000, 5358790800000, 5372096400000, 5390845200000, 5403546000000, 5422294800000, 5434995600000, 5453744400000, 5467050000000, 5485194000000, 5498499600000, 5516643600000, 5529949200000, 5548698000000, 5561398800000, 5580147600000, 5592848400000, 5611597200000, 5624902800000, 5643046800000, 5656352400000, 5674496400000, 5687802000000, 5705946000000, 5719251600000, 5738000400000, 5750701200000, 5769450000000, 5782150800000, 5800899600000, 5814205200000, 5832349200000, 5845654800000, 5863798800000, 5877104400000, 5895853200000, 5908554000000, 5927302800000, 5940003600000, 5958752400000, 5971453200000, 5990202000000, 6003507600000, 6021651600000, 6034957200000, 6053101200000, 6066406800000, 6085155600000, 6097856400000, 6116605200000, 6129306000000, 6148054800000, 6161360400000, 6179504400000, 6192810000000, 6210954000000, 6224259600000, 6242403600000, 6255709200000, 6274458000000, 6287158800000, 6305907600000, 6318608400000, 6337357200000, 6350662800000, 6368806800000, 6382112400000, 6400256400000, 6413562000000, 6432310800000, 6445011600000, 6463760400000, 6476461200000, 6495210000000, 6508515600000, 6526659600000, 6539965200000, 6558109200000, 6571414800000, 6589558800000, 6602864400000, 6621613200000, 6634314000000, 6653062800000, 6665763600000, 6684512400000, 6697818000000, 6715962000000, 6729267600000, 6747411600000, 6760717200000, 6779466000000, 6792166800000, 6810915600000, 6823616400000, 6842365200000, 6855066000000, 6873814800000, 6887120400000, 6905264400000, 6918570000000, 6936714000000, 6950019600000, 6968768400000, 6981469200000, 7000218000000, 7012918800000, 7031667600000, 7044973200000, 7063117200000, 7076422800000, 7094566800000, 7107872400000, 7126016400000, 7139322000000, 7158070800000, 7170771600000, 7189520400000, 7202221200000, 7220970000000, 7234275600000, 7252419600000, 7265725200000, 7283869200000, 7297174800000, 7315318800000, 7328624400000, 7347373200000, 7360074000000, 7378822800000, 7391523600000, 7410272400000, 7423578000000, 7441722000000, 7455027600000, 7473171600000, 7486477200000, 7504621200000, 7517926800000, 7536675600000, 7549376400000, 7568125200000, 7580826000000, 7599574800000, 7612880400000, 7631024400000, 7644330000000, 7662474000000, 7675779600000, 7694528400000, 7707229200000, 7725978000000, 7738678800000, 7757427600000, 7770733200000, 7788877200000, 7802182800000, 7820326800000, 7833632400000, 7851776400000, 7865082000000, 7883830800000, 7896531600000, 7915280400000, 7927981200000, 7946730000000, 7960035600000, 7978179600000, 7991485200000, 8009629200000, 8022934800000, 8041683600000, 8054384400000, 8073133200000, 8085834000000, 8104582800000, 8117283600000, 8136032400000, 8149338000000, 8167482000000, 8180787600000, 8198931600000, 8212237200000, 8230986000000, 8243686800000, 8262435600000, 8275136400000, 8293885200000, 8307190800000, 8325334800000, 8338640400000, 8356784400000, 8370090000000, 8388234000000, 8401539600000, 8420288400000, 8432989200000, 8451738000000, 8464438800000, 8483187600000, 8496493200000, 8514637200000, 8527942800000, 8546086800000, 8559392400000, 8578141200000, 8590842000000, 8609590800000, 8622291600000, 8641040400000, 8654346000000, 8672490000000, 8685795600000, 8703939600000, 8717245200000, 8735389200000, 8748694800000, 8767443600000, 8780144400000, 8798893200000, 8811594000000, 8830342800000, 8843648400000, 8861792400000, 8875098000000, 8893242000000, 8906547600000, 8925296400000, 8937997200000, 8956746000000, 8969446800000, 8988195600000, 9000896400000, 9019645200000, 9032950800000, 9051094800000, 9064400400000, 9082544400000, 9095850000000, 9114598800000, 9127299600000, 9146048400000, 9158749200000, 9177498000000, 9190803600000, 9208947600000, 9222253200000, 9240397200000, 9253702800000, 9271846800000, 9285152400000, 9303901200000, 9316602000000, 9335350800000, 9348051600000, 9366800400000, 9380106000000, 9398250000000, 9411555600000, 9429699600000, 9443005200000, 9461754000000, 9474454800000, 9493203600000, 9505904400000, 9524653200000, 9537958800000, 9556102800000, 9569408400000, 9587552400000, 9600858000000, 9619002000000, 9632307600000, 9651056400000, 9663757200000, 9682506000000, 9695206800000, 9713955600000, 9727261200000, 9745405200000, 9758710800000, 9776854800000, 9790160400000, 9808909200000, 9821610000000, 9840358800000, 9853059600000, 9871808400000, 9884509200000, 9903258000000, 9916563600000, 9934707600000, 9948013200000, 9966157200000, 9979462800000, 9998211600000, 10010912400000, 10029661200000, 10042362000000, 10061110800000, 10074416400000, 10092560400000, 10105866000000, 10124010000000, 10137315600000, 10155459600000, 10168765200000, 10187514000000, 10200214800000, 10218963600000, 10231664400000, 10250413200000, 10263718800000, 10281862800000, 10295168400000, 10313312400000, 10326618000000, 10345366800000, 10358067600000, 10376816400000, 10389517200000, 10408266000000, 10420966800000, 10439715600000, 10453021200000, 10471165200000, 10484470800000, 10502614800000, 10515920400000, 10534064400000, 10547370000000, 10566118800000, 10578819600000, 10597568400000, 10610269200000, 10629018000000, 10642323600000, 10660467600000, 10673773200000, 10691917200000, 10705222800000, 10723971600000, 10736672400000, 10755421200000, 10768122000000, 10786870800000, 10800176400000, 10818320400000, 10831626000000, 10849770000000, 10863075600000, 10881219600000, 10894525200000, 10913274000000, 10925974800000, 10944723600000, 10957424400000, 10976173200000, 10989478800000, 11007622800000, 11020928400000, 11039072400000, 11052378000000, 11071126800000, 11083827600000, 11102576400000, 11115277200000, 11134026000000, 11146726800000, 11165475600000, 11178781200000, 11196925200000, 11210230800000, 11228374800000, 11241680400000, 11260429200000, 11273130000000, 11291878800000, 11304579600000, 11323328400000, 11336634000000, 11354778000000, 11368083600000, 11386227600000, 11399533200000, 11417677200000, 11430982800000, 11449731600000, 11462432400000, 11481181200000, 11493882000000, 11512630800000, 11525936400000, 11544080400000, 11557386000000, 11575530000000, 11588835600000, 11607584400000, 11620285200000, 11639034000000, 11651734800000, 11670483600000, 11683789200000, 11701933200000, 11715238800000, 11733382800000, 11746688400000, 11764832400000, 11778138000000, 11796886800000, 11809587600000, 11828336400000, 11841037200000, 11859786000000, 11873091600000, 11891235600000, 11904541200000, 11922685200000, 11935990800000, 11954739600000, 11967440400000, 11986189200000, 11998890000000, 12017638800000, 12030339600000, 12049088400000, 12062394000000, 12080538000000, 12093843600000, 12111987600000, 12125293200000, 12144042000000, 12156742800000, 12175491600000, 12188192400000, 12206941200000, 12220246800000, 12238390800000, 12251696400000, 12269840400000, 12283146000000, 12301290000000, 12314595600000, 12333344400000, 12346045200000, 12364794000000, 12377494800000, 12396243600000, 12409549200000, 12427693200000, 12440998800000, 12459142800000, 12472448400000, 12491197200000, 12503898000000, 12522646800000, 12535347600000, 12554096400000, 12567402000000, 12585546000000, 12598851600000, 12616995600000, 12630301200000, 12648445200000, 12661750800000, 12680499600000, 12693200400000, 12711949200000, 12724650000000, 12743398800000, 12756704400000, 12774848400000, 12788154000000, 12806298000000, 12819603600000, 12838352400000, 12851053200000, 12869802000000, 12882502800000, 12901251600000, 12913952400000, 12932701200000, 12946006800000, 12964150800000, 12977456400000, 12995600400000, 13008906000000, 13027654800000, 13040355600000, 13059104400000, 13071805200000, 13090554000000, 13103859600000, 13122003600000, 13135309200000, 13153453200000, 13166758800000, 13184902800000, 13198208400000, 13216957200000, 13229658000000, 13248406800000, 13261107600000, 13279856400000, 13293162000000, 13311306000000, 13324611600000, 13342755600000, 13356061200000, 13374810000000, 13387510800000, 13406259600000, 13418960400000, 13437709200000, 13451014800000, 13469158800000, 13482464400000, 13500608400000, 13513914000000, 13532058000000, 13545363600000, 13564112400000, 13576813200000, 13595562000000, 13608262800000, 13627011600000, 13640317200000, 13658461200000, 13671766800000, 13689910800000, 13703216400000, 13721965200000, 13734666000000, 13753414800000, 13766115600000, 13784864400000, 13797565200000, 13816314000000, 13829619600000, 13847763600000, 13861069200000, 13879213200000, 13892518800000, 13911267600000, 13923968400000, 13942717200000, 13955418000000, 13974166800000, 13987472400000, 14005616400000, 14018922000000, 14037066000000, 14050371600000, 14068515600000, 14081821200000, 14100570000000, 14113270800000, 14132019600000, 14144720400000, 14163469200000, 14176774800000, 14194918800000, 14208224400000, 14226368400000, 14239674000000, 14258422800000, 14271123600000, 14289872400000, 14302573200000, 14321322000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules ojinaga = DynamicTimezoneRules(
    'America/Ojinaga',
    DynamicTimezone(
      -1,
      -25060000,
      'America/Ojinaga',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1343066400000, -1234807200000, -1220292000000, -1207159200000, -1191344400000, 828864000000, 846399600000, 860313600000, 877849200000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 989139600000, 1001836800000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1175418000000, 1193558400000, 1207472400000, 1225008000000, 1238922000000, 1256457600000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667116800000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -18000000, -21600000, -18000000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'MST', 'CST', 'MST', 'MDT', 'MST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules panama = DynamicTimezoneRules(
    'America/Panama',
    DynamicTimezone(
      -1,
      -19088000,
      'America/Panama',
      'LMT',
      null,
      -2524502512,
      dst: false,
    ),
    Int64List.fromList([ -2524502512000, -1946918424000 ]),
    Int32List.fromList([ -19176000, -18000000 ]),
    [ 'CMT', 'EST' ],
    [ false, false ],
  );

  static final TimezoneRules pangnirtung = DynamicTimezoneRules(
    'America/Pangnirtung',
    DynamicTimezone(
      -1,
      0,
      'America/Pangnirtung',
      '-00',
      null,
      -865296000,
      dst: false,
    ),
    Int64List.fromList([ -865296000000, -769395600000, -765396000000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954662400000, 972802800000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules paramaribo = DynamicTimezoneRules(
    'America/Paramaribo',
    DynamicTimezone(
      -1,
      -13240000,
      'America/Paramaribo',
      'LMT',
      null,
      -1861906760,
      dst: false,
    ),
    Int64List.fromList([ -1861906760000, -1104524348000, -765317964000, 465449400000 ]),
    Int32List.fromList([ -13252000, -13236000, -12600000, -10800000 ]),
    [ 'PMT', 'PMT', '-0330', '-03' ],
    [ false, false, false, false ],
  );

  static final TimezoneRules phoenix = DynamicTimezoneRules(
    'America/Phoenix',
    DynamicTimezone(
      -1,
      -26898000,
      'America/Phoenix',
      'LMT',
      null,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -880210800000, -820519140000, -812653140000, -796845540000, -84380400000, -68659200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MST', 'MWT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules portAuPrince = DynamicTimezoneRules(
    'America/Port-au-Prince',
    DynamicTimezone(
      -1,
      -17360000,
      'America/Port-au-Prince',
      'LMT',
      null,
      -2524504240,
      dst: false,
    ),
    Int64List.fromList([ -2524504240000, -1670483460000, 421218000000, 436334400000, 452062800000, 467784000000, 483512400000, 499233600000, 514962000000, 530683200000, 546411600000, 562132800000, 576050400000, 594194400000, 607500000000, 625644000000, 638949600000, 657093600000, 671004000000, 688543200000, 702453600000, 719992800000, 733903200000, 752047200000, 765352800000, 783496800000, 796802400000, 814946400000, 828856800000, 846396000000, 860306400000, 877845600000, 1112504400000, 1130644800000, 1143954000000, 1162094400000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList([ -17340000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),

    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules portOfSpain = DynamicTimezoneRules(
    'America/Port_of_Spain',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Port_of_Spain',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules portoAcre = DynamicTimezoneRules(
    'America/Porto_Acre',
    DynamicTimezone(
      -1,
      -16272000,
      'America/Porto_Acre',
      'LMT',
      null,
      -1767209328,
      dst: false,
    ),
    Int64List.fromList([ -1767209328000, -1206950400000, -1191355200000, -1175367600000, -1159819200000, -633812400000, -622062000000, -602276400000, -591825600000, -570740400000, -560203200000, -539118000000, -531345600000, -191358000000, -184190400000, -155156400000, -150062400000, -128890800000, -121118400000, -99946800000, -89582400000, -68410800000, -57960000000, 499755600000, 511243200000, 530600400000, 540273600000, 562136400000, 571204800000, 1214283600000, 1384056000000 ]),
    Int32List.fromList([ -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final TimezoneRules portoVelho = DynamicTimezoneRules(
    'America/Porto_Velho',
    DynamicTimezone(
      -1,
      -15336000,
      'America/Porto_Velho',
      'LMT',
      null,
      -1767210264,
      dst: false,
    ),
    Int64List.fromList([ -1767210264000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),
    [ '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules puertoRico = DynamicTimezoneRules(
    'America/Puerto_Rico',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Puerto_Rico',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules puntaArenas = DynamicTimezoneRules(
    'America/Punta_Arenas',
    DynamicTimezone(
      -1,
      -17020000,
      'America/Punta_Arenas',
      'LMT',
      null,
      -2524504580,
      dst: false,
    ),
    Int64List.fromList([ -2524504580000, -1892661435000, -1688410800000, -1619205435000, -1593806400000, -1335986235000, -1317585600000, -1304362800000, -1286049600000, -1272826800000, -1254513600000, -1241290800000, -1222977600000, -1209754800000, -1191355200000, -1178132400000, -870552000000, -865278000000, -736632000000, -718056000000, -713649600000, -36619200000, -23922000000, -3355200000, 7527600000, 24465600000, 37767600000, 55915200000, 69217200000, 87969600000, 100666800000, 118209600000, 132116400000, 150868800000, 163566000000, 182318400000, 195620400000, 213768000000, 227070000000, 245217600000, 258519600000, 277272000000, 289969200000, 308721600000, 321418800000, 340171200000, 353473200000, 371620800000, 384922800000, 403070400000, 416372400000, 434520000000, 447822000000, 466574400000, 479271600000, 498024000000, 510721200000, 529473600000, 545194800000, 560923200000, 574225200000, 592372800000, 605674800000, 624427200000, 637124400000, 653457600000, 668574000000, 687326400000, 700628400000, 718776000000, 732078000000, 750225600000, 763527600000, 781675200000, 794977200000, 813729600000, 826426800000, 845179200000, 859690800000, 876628800000, 889930800000, 906868800000, 923194800000, 939528000000, 952830000000, 971582400000, 984279600000, 1003032000000, 1015729200000, 1034481600000, 1047178800000, 1065931200000, 1079233200000, 1097380800000, 1110682800000, 1128830400000, 1142132400000, 1160884800000, 1173582000000, 1192334400000, 1206846000000, 1223784000000, 1237086000000, 1255233600000, 1270350000000, 1286683200000, 1304823600000, 1313899200000, 1335668400000, 1346558400000, 1367118000000, 1378612800000, 1398567600000, 1410062400000, 1463281200000, 1471147200000, 1480820400000 ]),
    Int32List.fromList([ -16965000, -18000000, -16965000, -14400000, -16965000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -14400000, -18000000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -10800000 ]),
    [ 'SMT', '-05', 'SMT', '-04', 'SMT', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-04', '-05', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-03' ],
    [ false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules rainyRiver = DynamicTimezoneRules(
    'America/Rainy_River',
    DynamicTimezone(
      -1,
      -23316000,
      'America/Rainy_River',
      'LMT',
      null,
      -2602258284,
      dst: false,
    ),
    Int64List.fromList([ -2602258284000, -1694368800000, -1681671600000, -1632067200000, -1615136400000, -1029686400000, -1018198800000, -880214400000, -769395600000, -765392400000, -746035200000, -732733200000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620755200000, -607626000000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -292438800000, -210787200000, -198090000000, -116438400000, -100108800000, -84384000000, -68659200000, -52934400000, -37209600000, -21484800000, -5760000000, 9964800000, 25689600000, 41414400000, 57744000000, 73468800000, 89193600000, 104918400000, 120643200000, 136368000000, 152092800000, 167817600000, 183542400000, 199267200000, 215596800000, 230716800000, 247046400000, 262771200000, 278496000000, 294220800000, 309945600000, 325670400000, 341395200000, 357120000000, 372844800000, 388569600000, 404899200000, 420019200000, 436348800000, 452073600000, 467798400000, 483523200000, 499248000000, 514972800000, 530697600000, 544608000000, 562147200000, 576057600000, 594201600000, 607507200000, 625651200000, 638956800000, 657100800000, 671011200000, 688550400000, 702460800000, 720000000000, 733910400000, 752054400000, 765360000000, 783504000000, 796809600000, 814953600000, 828864000000, 846403200000, 860313600000, 877852800000, 891763200000, 909302400000, 923212800000, 941356800000, 954662400000, 972806400000, 986112000000, 1004256000000, 1018166400000, 1035705600000, 1049616000000, 1067155200000, 1081065600000, 1099209600000, 1112515200000, 1130659200000, 1136095200000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules rankinInlet = DynamicTimezoneRules(
    'America/Rankin_Inlet',
    DynamicTimezone(
      -1,
      0,
      'America/Rankin_Inlet',
      '-00',
      null,
      -410227200,
      dst: false,
    ),
    Int64List.fromList([ -410227200000, 73468800000, 89190000000, 104918400000, 120639600000, 136368000000, 152089200000, 167817600000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules recife = DynamicTimezoneRules(
    'America/Recife',
    DynamicTimezone(
      -1,
      -8376000,
      'America/Recife',
      'LMT',
      null,
      -1767217224,
      dst: false,
    ),
    Int64List.fromList([ -1767217224000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -191365200000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 938919600000, 951616800000, 970974000000, 971575200000, 1003028400000, 1013911200000 ]),
    Int32List.fromList([ -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules regina = DynamicTimezoneRules(
    'America/Regina',
    DynamicTimezone(
      -1,
      -25116000,
      'America/Regina',
      'LMT',
      null,
      -2030202084,
      dst: false,
    ),
    Int64List.fromList([ -2030202084000, -1632063600000, -1615132800000, -1251651600000, -1238349600000, -1220202000000, -1206900000000, -1188752400000, -1175450400000, -1156698000000, -1144000800000, -1125248400000, -1111946400000, -1032714000000, -1016992800000, -1001264400000, -986148000000, -969814800000, -954093600000, -937760400000, -922039200000, -906310800000, -890589600000, -880210800000, -769395600000, -765388800000, -748450800000, -732729600000, -715791600000, -702489600000, -684342000000, -671040000000, -652892400000, -639590400000, -620838000000, -608140800000, -589388400000, -576086400000, -557938800000, -544636800000, -526489200000, -513187200000, -495039600000, -481737600000, -463590000000, -450288000000, -431535600000, -418233600000, -400086000000, -386784000000, -337186800000, -321465600000, -305737200000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000 ]),
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'CST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules resolute = DynamicTimezoneRules(
    'America/Resolute',
    DynamicTimezone(
      -1,
      0,
      'America/Resolute',
      '-00',
      null,
      -704937600,
      dst: false,
    ),
    Int64List.fromList([ -704937600000, 73468800000, 89190000000, 104918400000, 120639600000, 136368000000, 152089200000, 167817600000, 183538800000, 199267200000, 215593200000, 230716800000, 247042800000, 262771200000, 278492400000, 294220800000, 309942000000, 325670400000, 341391600000, 357120000000, 372841200000, 388569600000, 404895600000, 420019200000, 436345200000, 452073600000, 467794800000, 483523200000, 499244400000, 514972800000, 530694000000, 544608000000, 562143600000, 576057600000, 594198000000, 607507200000, 625647600000, 638956800000, 657097200000, 671011200000, 688546800000, 702460800000, 719996400000, 733910400000, 752050800000, 765360000000, 783500400000, 796809600000, 814950000000, 828864000000, 846399600000, 860313600000, 877849200000, 891763200000, 909298800000, 923212800000, 941353200000, 954662400000, 972802800000, 986112000000, 1004252400000, 1018166400000, 1035702000000, 1049616000000, 1067151600000, 1081065600000, 1099206000000, 1112515200000, 1130655600000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules rioBranco = DynamicTimezoneRules(
    'America/Rio_Branco',
    DynamicTimezone(
      -1,
      -16272000,
      'America/Rio_Branco',
      'LMT',
      null,
      -1767209328,
      dst: false,
    ),
    Int64List.fromList([ -1767209328000, -1206950400000, -1191355200000, -1175367600000, -1159819200000, -633812400000, -622062000000, -602276400000, -591825600000, -570740400000, -560203200000, -539118000000, -531345600000, -191358000000, -184190400000, -155156400000, -150062400000, -128890800000, -121118400000, -99946800000, -89582400000, -68410800000, -57960000000, 499755600000, 511243200000, 530600400000, 540273600000, 562136400000, 571204800000, 1214283600000, 1384056000000 ]),
    Int32List.fromList([ -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000 ]),
    [ '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false ],
  );

  static final TimezoneRules rosario = DynamicTimezoneRules(
    'America/Rosario',
    DynamicTimezone(
      -1,
      -15408000,
      'America/Rosario',
      'LMT',
      null,
      -2372096592,
      dst: false,
    ),
    Int64List.fromList([ -2372096592000, -1567453392000, -1233432000000, -1222981200000, -1205956800000, -1194037200000, -1172865600000, -1162501200000, -1141329600000, -1130965200000, -1109793600000, -1099429200000, -1078257600000, -1067806800000, -1046635200000, -1036270800000, -1015099200000, -1004734800000, -983563200000, -973198800000, -952027200000, -941576400000, -931032000000, -900882000000, -890337600000, -833749200000, -827265600000, -752274000000, -733780800000, -197326800000, -190843200000, -184194000000, -164491200000, -152658000000, -132955200000, -121122000000, -101419200000, -86821200000, -71092800000, -54766800000, -39038400000, -23317200000, -7588800000, 128142000000, 136605600000, 596948400000, 605066400000, 624423600000, 636516000000, 656478000000, 667965600000, 687931200000, 699415200000, 719377200000, 731469600000, 938919600000, 952052400000, 1198983600000, 1205632800000, 1224385200000, 1237082400000 ]),
    Int32List.fromList([ -15408000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -10800000, -7200000, -14400000, -7200000, -10800000, -7200000, -10800000, -10800000, -10800000, -7200000, -10800000, -7200000, -10800000 ]),
    [ 'CMT', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-02', '-03', '-02', '-03', '-02', '-03', '-02', '-04', '-02', '-03', '-02', '-03', '-03', '-03', '-02', '-03', '-02', '-03' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules santaIsabel = DynamicTimezoneRules(
    'America/Santa_Isabel',
    DynamicTimezone(
      -1,
      -28084000,
      'America/Santa_Isabel',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1451667600000, -1343062800000, -1234803600000, -1222963200000, -1207242000000, -873820800000, -769395600000, -761677200000, -686073600000, -661539600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1175421600000, 1193562000000, 1207476000000, 1225011600000, 1238925600000, 1256461200000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'MST', 'PST', 'MST', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, false, false, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules santarem = DynamicTimezoneRules(
    'America/Santarem',
    DynamicTimezone(
      -1,
      -13128000,
      'America/Santarem',
      'LMT',
      null,
      -1767212472,
      dst: false,
    ),
    Int64List.fromList([ -1767212472000, -1206954000000, -1191358800000, -1175371200000, -1159822800000, -633816000000, -622065600000, -602280000000, -591829200000, -570744000000, -560206800000, -539121600000, -531349200000, -191361600000, -184194000000, -155160000000, -150066000000, -128894400000, -121122000000, -99950400000, -89586000000, -68414400000, -57963600000, 499752000000, 511239600000, 530596800000, 540270000000, 562132800000, 571201200000, 1214280000000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000 ]),
    [ '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules santiago = DynamicTimezoneRules(
    'America/Santiago',
    DynamicTimezone(
      -1,
      -16965000,
      'America/Santiago',
      'LMT',
      null,
      -2524504635,
      dst: false,
    ),
    Int64List.fromList([ -2524504635000, -1892661435000, -1688410800000, -1619205435000, -1593806400000, -1335986235000, -1317585600000, -1304362800000, -1286049600000, -1272826800000, -1254513600000, -1241290800000, -1222977600000, -1209754800000, -1191355200000, -1178132400000, -870552000000, -865278000000, -740520000000, -736635600000, -718056000000, -713649600000, -36619200000, -23922000000, -3355200000, 7527600000, 24465600000, 37767600000, 55915200000, 69217200000, 87969600000, 100666800000, 118209600000, 132116400000, 150868800000, 163566000000, 182318400000, 195620400000, 213768000000, 227070000000, 245217600000, 258519600000, 277272000000, 289969200000, 308721600000, 321418800000, 340171200000, 353473200000, 371620800000, 384922800000, 403070400000, 416372400000, 434520000000, 447822000000, 466574400000, 479271600000, 498024000000, 510721200000, 529473600000, 545194800000, 560923200000, 574225200000, 592372800000, 605674800000, 624427200000, 637124400000, 653457600000, 668574000000, 687326400000, 700628400000, 718776000000, 732078000000, 750225600000, 763527600000, 781675200000, 794977200000, 813729600000, 826426800000, 845179200000, 859690800000, 876628800000, 889930800000, 906868800000, 923194800000, 939528000000, 952830000000, 971582400000, 984279600000, 1003032000000, 1015729200000, 1034481600000, 1047178800000, 1065931200000, 1079233200000, 1097380800000, 1110682800000, 1128830400000, 1142132400000, 1160884800000, 1173582000000, 1192334400000, 1206846000000, 1223784000000, 1237086000000, 1255233600000, 1270350000000, 1286683200000, 1304823600000, 1313899200000, 1335668400000, 1346558400000, 1367118000000, 1378612800000, 1398567600000, 1410062400000, 1463281200000, 1471147200000, 1494730800000, 1502596800000, 1526180400000, 1534046400000, 1554606000000, 1567915200000, 1586055600000, 1599364800000, 1617505200000, 1630814400000, 1648954800000, 1662868800000, 1680404400000, 1693713600000, 1712458800000, 1725768000000, 1743908400000, 1757217600000, 1775358000000, 1788667200000, 1806807600000, 1820116800000, 1838257200000, 1851566400000, 1870311600000, 1883016000000, 1901761200000, 1915070400000, 1933210800000, 1946520000000, 1964660400000, 1977969600000, 1996110000000, 2009419200000, 2027559600000, 2040868800000, 2059614000000, 2072318400000, 2091063600000, 2104372800000, 2122513200000, 2135822400000, 2153962800000, 2167272000000, 2185412400000, 2198721600000, 2217466800000, 2230171200000, 2248916400000, 2262225600000, 2280366000000, 2293675200000, 2311815600000, 2325124800000, 2343265200000, 2356574400000, 2374714800000, 2388024000000, 2406769200000, 2419473600000, 2438218800000, 2451528000000, 2469668400000, 2482977600000, 2501118000000, 2514427200000, 2532567600000, 2545876800000, 2564017200000, 2577326400000, 2596071600000, 2609380800000, 2627521200000, 2640830400000, 2658970800000, 2672280000000, 2690420400000, 2703729600000, 2721870000000, 2735179200000, 2753924400000, 2766628800000, 2785374000000, 2798683200000, 2816823600000, 2830132800000, 2848273200000, 2861582400000, 2879722800000, 2893032000000, 2911172400000, 2924481600000, 2943226800000, 2955931200000, 2974676400000, 2987985600000, 3006126000000, 3019435200000, 3037575600000, 3050884800000, 3069025200000, 3082334400000, 3101079600000, 3113784000000, 3132529200000, 3145838400000, 3163978800000, 3177288000000, 3195428400000, 3208737600000, 3226878000000, 3240187200000, 3258327600000, 3271636800000, 3290382000000, 3303086400000, 3321831600000, 3335140800000, 3353281200000, 3366590400000, 3384730800000, 3398040000000, 3416180400000, 3429489600000, 3447630000000, 3460939200000, 3479684400000, 3492993600000, 3511134000000, 3524443200000, 3542583600000, 3555892800000, 3574033200000, 3587342400000, 3605482800000, 3618792000000, 3637537200000, 3650241600000, 3668986800000, 3682296000000, 3700436400000, 3713745600000, 3731886000000, 3745195200000, 3763335600000, 3776644800000, 3794785200000, 3808094400000, 3826839600000, 3839544000000, 3858289200000, 3871598400000, 3889738800000, 3903048000000, 3921188400000, 3934497600000, 3952638000000, 3965947200000, 3984692400000, 3997396800000, 4016142000000, 4029451200000, 4047591600000, 4060900800000, 4079041200000, 4092350400000, 4110490800000, 4123800000000, 4141940400000, 4155249600000, 4173390000000, 4186699200000, 4205444400000, 4218148800000, 4236894000000, 4250203200000, 4268343600000, 4281652800000, 4299793200000, 4313102400000, 4331242800000, 4344552000000, 4363297200000, 4376001600000, 4394746800000, 4408056000000, 4426196400000, 4439505600000, 4457646000000, 4470955200000, 4489095600000, 4502404800000, 4520545200000, 4533854400000, 4552599600000, 4565304000000, 4584049200000, 4597358400000, 4615498800000, 4628808000000, 4646948400000, 4660257600000, 4678398000000, 4691707200000, 4709847600000, 4723156800000, 4741902000000, 4755211200000, 4773351600000, 4786660800000, 4804801200000, 4818110400000, 4836250800000, 4849560000000, 4867700400000, 4881009600000, 4899754800000, 4912459200000, 4931204400000, 4944513600000, 4962654000000, 4975963200000, 4994103600000, 5007412800000, 5025553200000, 5038862400000, 5057002800000, 5070312000000, 5089057200000, 5101761600000, 5120506800000, 5133816000000, 5151956400000, 5165265600000, 5183406000000, 5196715200000, 5214855600000, 5228164800000, 5246910000000, 5259614400000, 5278359600000, 5291668800000, 5309809200000, 5323118400000, 5341258800000, 5354568000000, 5372708400000, 5386017600000, 5404158000000, 5417467200000, 5436212400000, 5448916800000, 5467662000000, 5480971200000, 5499111600000, 5512420800000, 5530561200000, 5543870400000, 5562010800000, 5575320000000, 5593460400000, 5606769600000, 5625514800000, 5638824000000, 5656964400000, 5670273600000, 5688414000000, 5701723200000, 5719863600000, 5733172800000, 5751313200000, 5764622400000, 5783367600000, 5796072000000, 5814817200000, 5828126400000, 5846266800000, 5859576000000, 5877716400000, 5891025600000, 5909166000000, 5922475200000, 5940615600000, 5953924800000, 5972670000000, 5985374400000, 6004119600000, 6017428800000, 6035569200000, 6048878400000, 6067018800000, 6080328000000, 6098468400000, 6111777600000, 6130522800000, 6143227200000, 6161972400000, 6175281600000, 6193422000000, 6206731200000, 6224871600000, 6238180800000, 6256321200000, 6269630400000, 6287770800000, 6301080000000, 6319825200000, 6332529600000, 6351274800000, 6364584000000, 6382724400000, 6396033600000, 6414174000000, 6427483200000, 6445623600000, 6458932800000, 6477073200000, 6490382400000, 6509127600000, 6522436800000, 6540577200000, 6553886400000, 6572026800000, 6585336000000, 6603476400000, 6616785600000, 6634926000000, 6648235200000, 6666980400000, 6679684800000, 6698430000000, 6711739200000, 6729879600000, 6743188800000, 6761329200000, 6774638400000, 6792778800000, 6806088000000, 6824228400000, 6837537600000, 6856282800000, 6868987200000, 6887732400000, 6901041600000, 6919182000000, 6932491200000, 6950631600000, 6963940800000, 6982081200000, 6995390400000, 7014135600000, 7026840000000, 7045585200000, 7058894400000, 7077034800000, 7090344000000, 7108484400000, 7121793600000, 7139934000000, 7153243200000, 7171383600000, 7184692800000, 7203438000000, 7216142400000, 7234887600000, 7248196800000, 7266337200000, 7279646400000, 7297786800000, 7311096000000, 7329236400000, 7342545600000, 7360686000000, 7373995200000, 7392740400000, 7405444800000, 7424190000000, 7437499200000, 7455639600000, 7468948800000, 7487089200000, 7500398400000, 7518538800000, 7531848000000, 7549988400000, 7563297600000, 7582042800000, 7594747200000, 7613492400000, 7626801600000, 7644942000000, 7658251200000, 7676391600000, 7689700800000, 7707841200000, 7721150400000, 7739290800000, 7752600000000, 7771345200000, 7784654400000, 7802794800000, 7816104000000, 7834244400000, 7847553600000, 7865694000000, 7879003200000, 7897143600000, 7910452800000, 7929198000000, 7941902400000, 7960647600000, 7973956800000, 7992097200000, 8005406400000, 8023546800000, 8036856000000, 8054996400000, 8068305600000, 8086446000000, 8099755200000, 8118500400000, 8131204800000, 8149950000000, 8163259200000, 8181399600000, 8194708800000, 8212849200000, 8226158400000, 8244298800000, 8257608000000, 8276353200000, 8289057600000, 8307802800000, 8321112000000, 8339252400000, 8352561600000, 8370702000000, 8384011200000, 8402151600000, 8415460800000, 8433601200000, 8446910400000, 8465655600000, 8478360000000, 8497105200000, 8510414400000, 8528554800000, 8541864000000, 8560004400000, 8573313600000, 8591454000000, 8604763200000, 8622903600000, 8636212800000, 8654958000000, 8668267200000, 8686407600000, 8699716800000, 8717857200000, 8731166400000, 8749306800000, 8762616000000, 8780756400000, 8794065600000, 8812810800000, 8825515200000, 8844260400000, 8857569600000, 8875710000000, 8889019200000, 8907159600000, 8920468800000, 8938609200000, 8951918400000, 8970058800000, 8983368000000, 9002113200000, 9014817600000, 9033562800000, 9046872000000, 9065012400000, 9078321600000, 9096462000000, 9109771200000, 9127911600000, 9141220800000, 9159966000000, 9172670400000, 9191415600000, 9204724800000, 9222865200000, 9236174400000, 9254314800000, 9267624000000, 9285764400000, 9299073600000, 9317214000000, 9330523200000, 9349268400000, 9361972800000, 9380718000000, 9394027200000, 9412167600000, 9425476800000, 9443617200000, 9456926400000, 9475066800000, 9488376000000, 9506516400000, 9519825600000, 9538570800000, 9551880000000, 9570020400000, 9583329600000, 9601470000000, 9614779200000, 9632919600000, 9646228800000, 9664369200000, 9677678400000, 9696423600000, 9709128000000, 9727873200000, 9741182400000, 9759322800000, 9772632000000, 9790772400000, 9804081600000, 9822222000000, 9835531200000, 9853671600000, 9866980800000, 9885726000000, 9898430400000, 9917175600000, 9930484800000, 9948625200000, 9961934400000, 9980074800000, 9993384000000, 10011524400000, 10024833600000, 10043578800000, 10056283200000, 10075028400000, 10088337600000, 10106478000000, 10119787200000, 10137927600000, 10151236800000, 10169377200000, 10182686400000, 10200826800000, 10214136000000, 10232881200000, 10245585600000, 10264330800000, 10277640000000, 10295780400000, 10309089600000, 10327230000000, 10340539200000, 10358679600000, 10371988800000, 10390129200000, 10403438400000, 10422183600000, 10434888000000, 10453633200000, 10466942400000, 10485082800000, 10498392000000, 10516532400000, 10529841600000, 10547982000000, 10561291200000, 10579431600000, 10592740800000, 10611486000000, 10624190400000, 10642935600000, 10656244800000, 10674385200000, 10687694400000, 10705834800000, 10719144000000, 10737284400000, 10750593600000, 10768734000000, 10782043200000, 10800788400000, 10814097600000, 10832238000000, 10845547200000, 10863687600000, 10876996800000, 10895137200000, 10908446400000, 10926586800000, 10939896000000, 10958641200000, 10971345600000, 10990090800000, 11003400000000, 11021540400000, 11034849600000, 11052990000000, 11066299200000, 11084439600000, 11097748800000, 11115889200000, 11129198400000, 11147943600000, 11160648000000, 11179393200000, 11192702400000, 11210842800000, 11224152000000, 11242292400000, 11255601600000, 11273742000000, 11287051200000, 11305796400000, 11318500800000, 11337246000000, 11350555200000, 11368695600000, 11382004800000, 11400145200000, 11413454400000, 11431594800000, 11444904000000, 11463044400000, 11476353600000, 11495098800000, 11507803200000, 11526548400000, 11539857600000, 11557998000000, 11571307200000, 11589447600000, 11602756800000, 11620897200000, 11634206400000, 11652346800000, 11665656000000, 11684401200000, 11697710400000, 11715850800000, 11729160000000, 11747300400000, 11760609600000, 11778750000000, 11792059200000, 11810199600000, 11823508800000, 11842254000000, 11854958400000, 11873703600000, 11887012800000, 11905153200000, 11918462400000, 11936602800000, 11949912000000, 11968052400000, 11981361600000, 11999502000000, 12012811200000, 12031556400000, 12044260800000, 12063006000000, 12076315200000, 12094455600000, 12107764800000, 12125905200000, 12139214400000, 12157354800000, 12170664000000, 12189409200000, 12202113600000, 12220858800000, 12234168000000, 12252308400000, 12265617600000, 12283758000000, 12297067200000, 12315207600000, 12328516800000, 12346657200000, 12359966400000, 12378711600000, 12391416000000, 12410161200000, 12423470400000, 12441610800000, 12454920000000, 12473060400000, 12486369600000, 12504510000000, 12517819200000, 12535959600000, 12549268800000, 12568014000000, 12581323200000, 12599463600000, 12612772800000, 12630913200000, 12644222400000, 12662362800000, 12675672000000, 12693812400000, 12707121600000, 12725866800000, 12738571200000, 12757316400000, 12770625600000, 12788766000000, 12802075200000, 12820215600000, 12833524800000, 12851665200000, 12864974400000, 12883114800000, 12896424000000, 12915169200000, 12927873600000, 12946618800000, 12959928000000, 12978068400000, 12991377600000, 13009518000000, 13022827200000, 13040967600000, 13054276800000, 13073022000000, 13085726400000, 13104471600000, 13117780800000, 13135921200000, 13149230400000, 13167370800000, 13180680000000, 13198820400000, 13212129600000, 13230270000000, 13243579200000, 13262324400000, 13275028800000, 13293774000000, 13307083200000, 13325223600000, 13338532800000, 13356673200000, 13369982400000, 13388122800000, 13401432000000, 13419572400000, 13432881600000, 13451626800000, 13464936000000, 13483076400000, 13496385600000, 13514526000000, 13527835200000, 13545975600000, 13559284800000, 13577425200000, 13590734400000, 13609479600000, 13622184000000, 13640929200000, 13654238400000, 13672378800000, 13685688000000, 13703828400000, 13717137600000, 13735278000000, 13748587200000, 13766727600000, 13780036800000, 13798782000000, 13811486400000, 13830231600000, 13843540800000, 13861681200000, 13874990400000, 13893130800000, 13906440000000, 13924580400000, 13937889600000, 13956634800000, 13969339200000, 13988084400000, 14001393600000, 14019534000000, 14032843200000, 14050983600000, 14064292800000, 14082433200000, 14095742400000, 14113882800000, 14127192000000, 14145937200000, 14158641600000, 14177386800000, 14190696000000, 14208836400000, 14222145600000, 14240286000000, 14253595200000, 14271735600000, 14285044800000, 14303185200000, 14316494400000 ]),
    Int32List.fromList([ -16965000, -18000000, -16965000, -14400000, -16965000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -18000000, -14400000, -10800000, -14400000, -18000000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000 ]),
    [ 'SMT', '-05', 'SMT', '-04', 'SMT', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-05', '-04', '-03', '-04', '-05', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03', '-04', '-03' ],
    [ false, false, false, false, false, true, false, true, false, true, false, true, false, true, false, false, false, false, true, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true ],
  );

  static final TimezoneRules santoDomingo = DynamicTimezoneRules(
    'America/Santo_Domingo',
    DynamicTimezone(
      -1,
      -16776000,
      'America/Santo_Domingo',
      'LMT',
      null,
      -2524504824,
      dst: false,
    ),
    Int64List.fromList([ -2524504824000, -1159773600000, -100119600000, -89668800000, -5770800000, 4422600000, 25678800000, 33193800000, 57733200000, 64816200000, 89182800000, 96438600000, 120632400000, 127974600000, 152082000000, 972799200000, 975823200000 ]),
    Int32List.fromList([ -16800000, -18000000, -14400000, -18000000, -16200000, -18000000, -16200000, -18000000, -16200000, -18000000, -16200000, -18000000, -16200000, -18000000, -14400000, -18000000, -14400000 ]),
    [ 'SDMT', 'EST', 'EDT', 'EST', '-0430', 'EST', '-0430', 'EST', '-0430', 'EST', '-0430', 'EST', '-0430', 'EST', 'AST', 'EST', 'AST' ],
    [ false, false, true, false, true, false, true, false, true, false, true, false, true, false, false, false, false ],
  );

  static final TimezoneRules saoPaulo = DynamicTimezoneRules(
    'America/Sao_Paulo',
    DynamicTimezone(
      -1,
      -11188000,
      'America/Sao_Paulo',
      'LMT',
      null,
      -1767214412,
      dst: false,
    ),
    Int64List.fromList([ -1767214412000, -1206957600000, -1191362400000, -1175374800000, -1159826400000, -633819600000, -622069200000, -602283600000, -591832800000, -570747600000, -560210400000, -539125200000, -531352800000, -195426000000, -184197600000, -155163600000, -150069600000, -128898000000, -121125600000, -99954000000, -89589600000, -68418000000, -57967200000, 499748400000, 511236000000, 530593200000, 540266400000, 562129200000, 571197600000, 592974000000, 602042400000, 624423600000, 634701600000, 656478000000, 666756000000, 687927600000, 697600800000, 719982000000, 728445600000, 750826800000, 761709600000, 782276400000, 793159200000, 813726000000, 824004000000, 844570800000, 856058400000, 876106800000, 888717600000, 908074800000, 919562400000, 938919600000, 951616800000, 970974000000, 982461600000, 1003028400000, 1013911200000, 1036292400000, 1045360800000, 1066532400000, 1076810400000, 1099364400000, 1108864800000, 1129431600000, 1140314400000, 1162695600000, 1172368800000, 1192330800000, 1203213600000, 1224385200000, 1234663200000, 1255834800000, 1266717600000, 1287284400000, 1298167200000, 1318734000000, 1330221600000, 1350788400000, 1361066400000, 1382238000000, 1392516000000, 1413687600000, 1424570400000, 1445137200000, 1456020000000, 1476586800000, 1487469600000, 1508036400000, 1518919200000, 1541300400000, 1550368800000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules scoresbysund = DynamicTimezoneRules(
    'America/Scoresbysund',
    DynamicTimezone(
      -1,
      -5272000,
      'America/Scoresbysund',
      'LMT',
      null,
      -1686090728,
      dst: false,
    ),
    Int64List.fromList([ -1686090728000, 323841600000, 338961600000, 354679200000, 370400400000, 386125200000, 401850000000, 417574800000, 433299600000, 449024400000, 465354000000, 481078800000, 496803600000, 512528400000, 528253200000, 543978000000, 559702800000, 575427600000, 591152400000, 606877200000, 622602000000, 638326800000, 654656400000, 670381200000, 686106000000, 701830800000, 717555600000, 733280400000, 749005200000, 764730000000, 780454800000, 796179600000, 811904400000, 828234000000, 846378000000, 859683600000, 877827600000, 891133200000, 909277200000, 922582800000, 941331600000, 954032400000, 972781200000, 985482000000, 1004230800000, 1017536400000, 1035680400000, 1048986000000, 1067130000000, 1080435600000, 1099184400000, 1111885200000, 1130634000000, 1143334800000, 1162083600000, 1174784400000, 1193533200000, 1206838800000, 1224982800000, 1238288400000, 1256432400000, 1269738000000, 1288486800000, 1301187600000, 1319936400000, 1332637200000, 1351386000000, 1364691600000, 1382835600000, 1396141200000, 1414285200000, 1427590800000, 1445734800000, 1459040400000, 1477789200000, 1490490000000, 1509238800000, 1521939600000, 1540688400000, 1553994000000, 1572138000000, 1585443600000, 1603587600000, 1616893200000, 1635642000000, 1648342800000, 1667091600000, 1679792400000, 1698541200000, 1711846800000, 1729990800000, 1743296400000, 1761440400000, 1774746000000, 1792890000000, 1806195600000, 1824944400000, 1837645200000, 1856394000000, 1869094800000, 1887843600000, 1901149200000, 1919293200000, 1932598800000, 1950742800000, 1964048400000, 1982797200000, 1995498000000, 2014246800000, 2026947600000, 2045696400000, 2058397200000, 2077146000000, 2090451600000, 2108595600000, 2121901200000, 2140045200000 ]),
    Int32List.fromList([ -7200000, -3600000, -7200000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000, 0, -3600000 ]),
    [ '-02', '-01', '-02', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01', '+00', '-01' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules shiprock = DynamicTimezoneRules(
    'America/Shiprock',
    DynamicTimezone(
      -1,
      -25196000,
      'America/Shiprock',
      'LMT',
      null,
      -2717643600,
      dst: false,
    ),
    Int64List.fromList([ -2717643600000, -1633273200000, -1615132800000, -1601823600000, -1583683200000, -1570374000000, -1551628800000, -1538924400000, -1534089600000, -880210800000, -769395600000, -765388800000, -147884400000, -131558400000, -116434800000, -100108800000, -84380400000, -68659200000, -52930800000, -37209600000, -21481200000, -5760000000, 9968400000, 25689600000, 41418000000, 57744000000, 73472400000, 89193600000, 104922000000, 120643200000, 126694800000, 152092800000, 162378000000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules sitka = DynamicTimezoneRules(
    'America/Sitka',
    DynamicTimezone(
      -1,
      53927000,
      'America/Sitka',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188954727000, -880207200000, -769395600000, -765385200000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 126698400000, 152096400000, 162381600000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -32473000, -28800000, -25200000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules stBarthelemy = DynamicTimezoneRules(
    'America/St_Barthelemy',
    DynamicTimezone(
      -1,
      -15865000,
      'America/St_Barthelemy',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules stJohns = DynamicTimezoneRules(
    'America/St_Johns',
    DynamicTimezone(
      -1,
      -12652000,
      'America/St_Johns',
      'LMT',
      null,
      -2713897748,
      dst: false,
    ),
    Int64List.fromList([ -2713897748000, -1664130548000, -1650137348000, -1632076148000, -1615145348000, -1598650148000, -1590100148000, -1567286948000, -1551565748000, -1535837348000, -1520116148000, -1503782948000, -1488666548000, -1472333348000, -1457216948000, -1440883748000, -1425767348000, -1409434148000, -1394317748000, -1377984548000, -1362263348000, -1346534948000, -1330813748000, -1314480548000, -1299364148000, -1283030948000, -1267914548000, -1251581348000, -1236464948000, -1220131748000, -1205015348000, -1188682148000, -1172960948000, -1156627748000, -1141511348000, -1125178148000, -1110061748000, -1096921748000, -1093728600000, -1078612200000, -1061670600000, -1048973400000, -1030221000000, -1017523800000, -998771400000, -986074200000, -966717000000, -954624600000, -935267400000, -922570200000, -903817800000, -891120600000, -872368200000, -769395600000, -765401400000, -746044200000, -733347000000, -714594600000, -701897400000, -683145000000, -670447800000, -651695400000, -638998200000, -619641000000, -606943800000, -589401000000, -576099000000, -557951400000, -544649400000, -526501800000, -513199800000, -495052200000, -481750200000, -463602600000, -450300600000, -431548200000, -418246200000, -400098600000, -386796600000, -368649000000, -355347000000, -337199400000, -323897400000, -305749800000, -289423800000, -273695400000, -257974200000, -242245800000, -226524600000, -210796200000, -195075000000, -179346600000, -163625400000, -147897000000, -131571000000, -116447400000, -100121400000, -84393000000, -68671800000, -52943400000, -37222200000, -21493800000, -5772600000, 9955800000, 25677000000, 41405400000, 57731400000, 73459800000, 89181000000, 104909400000, 120630600000, 136359000000, 152080200000, 167808600000, 183529800000, 199258200000, 215584200000, 230707800000, 247033800000, 262762200000, 278483400000, 294211800000, 309933000000, 325661400000, 341382600000, 357111000000, 372832200000, 388560600000, 404886600000, 420010200000, 436336200000, 452064600000, 467785800000, 483514200000, 499235400000, 514963800000, 530685000000, 544591860000, 562127460000, 576041460000, 594178260000, 607491060000, 625631460000, 638940660000, 657081060000, 670995060000, 688530660000, 702444660000, 719980260000, 733894260000, 752034660000, 765343860000, 783484260000, 796793460000, 814933860000, 828847860000, 846383460000, 860297460000, 877833060000, 891747060000, 909282660000, 923196660000, 941337060000, 954646260000, 972786660000, 986095860000, 1004236260000, 1018150260000, 1035685860000, 1049599860000, 1067135460000, 1081049460000, 1099189860000, 1112499060000, 1130639460000, 1143948660000, 1162089060000, 1173583860000, 1194143460000, 1205033460000, 1225593060000, 1236483060000, 1257042660000, 1268537460000, 1289097060000, 1299987060000, 1320553800000, 1331443800000, 1352003400000, 1362893400000, 1383453000000, 1394343000000, 1414902600000, 1425792600000, 1446352200000, 1457847000000, 1478406600000, 1489296600000, 1509856200000, 1520746200000, 1541305800000, 1552195800000, 1572755400000, 1583645400000, 1604205000000, 1615699800000, 1636259400000, 1647149400000, 1667709000000, 1678599000000, 1699158600000, 1710048600000, 1730608200000, 1741498200000, 1762057800000, 1772947800000, 1793507400000, 1805002200000, 1825561800000, 1836451800000, 1857011400000, 1867901400000, 1888461000000, 1899351000000, 1919910600000, 1930800600000, 1951360200000, 1962855000000, 1983414600000, 1994304600000, 2014864200000, 2025754200000, 2046313800000, 2057203800000, 2077763400000, 2088653400000, 2109213000000, 2120103000000, 2140662600000 ]),
    Int32List.fromList([ -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -9052000, -12652000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -5400000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000, -9000000, -12600000 ]),
    [ 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NWT', 'NPT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST', 'NDT', 'NST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules stKitts = DynamicTimezoneRules(
    'America/St_Kitts',
    DynamicTimezone(
      -1,
      -15865000,
      'America/St_Kitts',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules stLucia = DynamicTimezoneRules(
    'America/St_Lucia',
    DynamicTimezone(
      -1,
      -15865000,
      'America/St_Lucia',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules stThomas = DynamicTimezoneRules(
    'America/St_Thomas',
    DynamicTimezone(
      -1,
      -15865000,
      'America/St_Thomas',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules stVincent = DynamicTimezoneRules(
    'America/St_Vincent',
    DynamicTimezone(
      -1,
      -15865000,
      'America/St_Vincent',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules swiftCurrent = DynamicTimezoneRules(
    'America/Swift_Current',
    DynamicTimezone(
      -1,
      -25880000,
      'America/Swift_Current',
      'LMT',
      null,
      -2030201320,
      dst: false,
    ),
    Int64List.fromList([ -2030201320000, -1632063600000, -1615132800000, -880210800000, -769395600000, -765388800000, -747241200000, -732729600000, -715791600000, -702489600000, -684342000000, -671040000000, -652892400000, -639590400000, -400086000000, -384364800000, -337186800000, -321465600000, -305737200000, -292435200000, -273682800000, -260985600000, 73472400000 ]),
    Int32List.fromList([ -25200000, -21600000, -25200000, -21600000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000, -25200000, -21600000 ]),
    [ 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'CST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false ],
  );

  static final TimezoneRules tegucigalpa = DynamicTimezoneRules(
    'America/Tegucigalpa',
    DynamicTimezone(
      -1,
      -20932000,
      'America/Tegucigalpa',
      'LMT',
      null,
      -1538503868,
      dst: false,
    ),
    Int64List.fromList([ -1538503868000, 547020000000, 559717200000, 578469600000, 591166800000, 1146981600000, 1154926800000 ]),
    Int32List.fromList([ -21600000, -18000000, -21600000, -18000000, -21600000, -18000000, -21600000 ]),
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false ],
  );

  static final TimezoneRules thule = DynamicTimezoneRules(
    'America/Thule',
    DynamicTimezone(
      -1,
      -16508000,
      'America/Thule',
      'LMT',
      null,
      -1686079492,
      dst: false,
    ),
    Int64List.fromList([ -1686079492000, 670399200000, 686120400000, 701848800000, 717570000000, 733903200000, 752043600000, 765352800000, 783493200000, 796802400000, 814942800000, 828856800000, 846392400000, 860306400000, 877842000000, 891756000000, 909291600000, 923205600000, 941346000000, 954655200000, 972795600000, 986104800000, 1004245200000, 1018159200000, 1035694800000, 1049608800000, 1067144400000, 1081058400000, 1099198800000, 1112508000000, 1130648400000, 1143957600000, 1162098000000, 1173592800000, 1194152400000, 1205042400000, 1225602000000, 1236492000000, 1257051600000, 1268546400000, 1289106000000, 1299996000000, 1320555600000, 1331445600000, 1352005200000, 1362895200000, 1383454800000, 1394344800000, 1414904400000, 1425794400000, 1446354000000, 1457848800000, 1478408400000, 1489298400000, 1509858000000, 1520748000000, 1541307600000, 1552197600000, 1572757200000, 1583647200000, 1604206800000, 1615701600000, 1636261200000, 1647151200000, 1667710800000, 1678600800000, 1699160400000, 1710050400000, 1730610000000, 1741500000000, 1762059600000, 1772949600000, 1793509200000, 1805004000000, 1825563600000, 1836453600000, 1857013200000, 1867903200000, 1888462800000, 1899352800000, 1919912400000, 1930802400000, 1951362000000, 1962856800000, 1983416400000, 1994306400000, 2014866000000, 2025756000000, 2046315600000, 2057205600000, 2077765200000, 2088655200000, 2109214800000, 2120104800000, 2140664400000 ]),
    Int32List.fromList([ -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000, -10800000, -14400000 ]),

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules thunderBay = DynamicTimezoneRules(
    'America/Thunder_Bay',
    DynamicTimezone(
      -1,
      -19052000,
      'America/Thunder_Bay',
      'LMT',
      null,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules tijuana = DynamicTimezoneRules(
    'America/Tijuana',
    DynamicTimezone(
      -1,
      -28084000,
      'America/Tijuana',
      'LMT',
      null,
      -1514739600,
      dst: false,
    ),
    Int64List.fromList([ -1514739600000, -1451667600000, -1343062800000, -1234803600000, -1222963200000, -1207242000000, -873820800000, -769395600000, -761677200000, -686073600000, -661539600000, -495039600000, -481734000000, -463590000000, -450284400000, -431535600000, -418230000000, -400086000000, -386780400000, -368636400000, -355330800000, -337186800000, -323881200000, -305737200000, -292431600000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1175421600000, 1193562000000, 1207476000000, 1225011600000, 1238925600000, 1256461200000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'MST', 'PST', 'MST', 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, false, false, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules toronto = DynamicTimezoneRules(
    'America/Toronto',
    DynamicTimezone(
      -1,
      -19052000,
      'America/Toronto',
      'LMT',
      null,
      -2366736148,
      dst: false,
    ),
    Int64List.fromList([ -2366736148000, -1632070800000, -1615140000000, -1601753400000, -1583697600000, -1567357200000, -1554667200000, -1534698000000, -1524074400000, -1503248400000, -1492365600000, -1471798800000, -1460916000000, -1440954000000, -1428861600000, -1409504400000, -1397412000000, -1378054800000, -1365962400000, -1346605200000, -1333908000000, -1315155600000, -1301853600000, -1283706000000, -1270404000000, -1252256400000, -1238954400000, -1220806800000, -1207504800000, -1188752400000, -1176055200000, -1157302800000, -1144000800000, -1125853200000, -1112551200000, -1094403600000, -1081101600000, -1062954000000, -1049652000000, -1031504400000, -1018202400000, -1000054800000, -986752800000, -968000400000, -955303200000, -936550800000, -880218000000, -769395600000, -765396000000, -747248400000, -733946400000, -715806000000, -702504000000, -684356400000, -671054400000, -652906800000, -634161600000, -620845200000, -602704800000, -589395600000, -576093600000, -557946000000, -544644000000, -526496400000, -513194400000, -495046800000, -481744800000, -463597200000, -450295200000, -431542800000, -418240800000, -400093200000, -384372000000, -368643600000, -352922400000, -337194000000, -321472800000, -305744400000, -289418400000, -273690000000, -257968800000, -242240400000, -226519200000, -210790800000, -195069600000, -179341200000, -163620000000, -147891600000, -131565600000, -116442000000, -100116000000, -84387600000, -68666400000, -52938000000, -37216800000, -21488400000, -5767200000, 9961200000, 25682400000, 41410800000, 57736800000, 73465200000, 89186400000, 104914800000, 120636000000, 136364400000, 152085600000, 167814000000, 183535200000, 199263600000, 215589600000, 230713200000, 247039200000, 262767600000, 278488800000, 294217200000, 309938400000, 325666800000, 341388000000, 357116400000, 372837600000, 388566000000, 404892000000, 420015600000, 436341600000, 452070000000, 467791200000, 483519600000, 499240800000, 514969200000, 530690400000, 544604400000, 562140000000, 576054000000, 594194400000, 607503600000, 625644000000, 638953200000, 657093600000, 671007600000, 688543200000, 702457200000, 719992800000, 733906800000, 752047200000, 765356400000, 783496800000, 796806000000, 814946400000, 828860400000, 846396000000, 860310000000, 877845600000, 891759600000, 909295200000, 923209200000, 941349600000, 954658800000, 972799200000, 986108400000, 1004248800000, 1018162800000, 1035698400000, 1049612400000, 1067148000000, 1081062000000, 1099202400000, 1112511600000, 1130652000000, 1143961200000, 1162101600000, 1173596400000, 1194156000000, 1205046000000, 1225605600000, 1236495600000, 1257055200000, 1268550000000, 1289109600000, 1299999600000, 1320559200000, 1331449200000, 1352008800000, 1362898800000, 1383458400000, 1394348400000, 1414908000000, 1425798000000, 1446357600000, 1457852400000, 1478412000000, 1489302000000, 1509861600000, 1520751600000, 1541311200000, 1552201200000, 1572760800000, 1583650800000, 1604210400000, 1615705200000, 1636264800000, 1647154800000, 1667714400000, 1678604400000, 1699164000000, 1710054000000, 1730613600000, 1741503600000, 1762063200000, 1772953200000, 1793512800000, 1805007600000, 1825567200000, 1836457200000, 1857016800000, 1867906800000, 1888466400000, 1899356400000, 1919916000000, 1930806000000, 1951365600000, 1962860400000, 1983420000000, 1994310000000, 2014869600000, 2025759600000, 2046319200000, 2057209200000, 2077768800000, 2088658800000, 2109218400000, 2120108400000, 2140668000000 ]),
    Int32List.fromList

    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules tortola = DynamicTimezoneRules(
    'America/Tortola',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Tortola',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules vancouver = DynamicTimezoneRules(
    'America/Vancouver',
    DynamicTimezone(
      -1,
      -29548000,
      'America/Vancouver',
      'LMT',
      null,
      -2713880852,
      dst: false,
    ),
    Int64List.fromList([ -2713880852000, -1632060000000, -1615129200000, -880207200000, -769395600000, -765385200000, -747237600000, -733935600000, -715788000000, -702486000000, -684338400000, -671036400000, -652888800000, -639586800000, -620834400000, -608137200000, -589384800000, -576082800000, -557935200000, -544633200000, -526485600000, -513183600000, -495036000000, -481734000000, -463586400000, -450284400000, -431532000000, -418230000000, -400082400000, -386780400000, -368632800000, -355330800000, -337183200000, -323881200000, -305733600000, -292431600000, -273679200000, -260982000000, -242229600000, -226508400000, -210780000000, -195058800000, -179330400000, -163609200000, -147880800000, -131554800000, -116431200000, -100105200000, -84376800000, -68655600000, -52927200000, -37206000000, -21477600000, -5756400000, 9972000000, 25693200000, 41421600000, 57747600000, 73476000000, 89197200000, 104925600000, 120646800000, 136375200000, 152096400000, 167824800000, 183546000000, 199274400000, 215600400000, 230724000000, 247050000000, 262778400000, 278499600000, 294228000000, 309949200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604221200000, 1615716000000, 1636275600000, 1647165600000, 1667725200000, 1678615200000, 1699174800000, 1710064800000, 1730624400000, 1741514400000, 1762074000000, 1772964000000, 1793523600000, 1805018400000, 1825578000000, 1836468000000, 1857027600000, 1867917600000, 1888477200000, 1899367200000, 1919926800000, 1930816800000, 1951376400000, 1962871200000, 1983430800000, 1994320800000, 2014880400000, 2025770400000, 2046330000000, 2057220000000, 2077779600000, 2088669600000, 2109229200000, 2120119200000, 2140678800000 ]),
    Int32List.fromList
    [ 'PST', 'PDT', 'PST', 'PWT', 'PPT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST' ],
    [ false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules virgin = DynamicTimezoneRules(
    'America/Virgin',
    DynamicTimezone(
      -1,
      -15865000,
      'America/Virgin',
      'LMT',
      null,
      -2233035335,
      dst: false,
    ),
    Int64List.fromList([ -2233035335000, -873057600000, -769395600000, -765399600000 ]),
    Int32List.fromList([ -14400000, -10800000, -10800000, -14400000 ]),
    [ 'AST', 'AWT', 'APT', 'AST' ],
    [ false, true, true, false ],
  );

  static final TimezoneRules whitehorse = DynamicTimezoneRules(
    'America/Whitehorse',
    DynamicTimezone(
      -1,
      -32412000,
      'America/Whitehorse',
      'LMT',
      null,
      -2188997988,
      dst: false,
    ),
    Int64List.fromList([ -2188997988000, -1632056400000, -1615125600000, -1596978000000, -1583164800000, -880203600000, -769395600000, -765381600000, -147884400000, -131554800000, -121273200000, 325677600000, 341398800000, 357127200000, 372848400000, 388576800000, 404902800000, 420026400000, 436352400000, 452080800000, 467802000000, 483530400000, 499251600000, 514980000000, 530701200000, 544615200000, 562150800000, 576064800000, 594205200000, 607514400000, 625654800000, 638964000000, 657104400000, 671018400000, 688554000000, 702468000000, 720003600000, 733917600000, 752058000000, 765367200000, 783507600000, 796816800000, 814957200000, 828871200000, 846406800000, 860320800000, 877856400000, 891770400000, 909306000000, 923220000000, 941360400000, 954669600000, 972810000000, 986119200000, 1004259600000, 1018173600000, 1035709200000, 1049623200000, 1067158800000, 1081072800000, 1099213200000, 1112522400000, 1130662800000, 1143972000000, 1162112400000, 1173607200000, 1194166800000, 1205056800000, 1225616400000, 1236506400000, 1257066000000, 1268560800000, 1289120400000, 1300010400000, 1320570000000, 1331460000000, 1352019600000, 1362909600000, 1383469200000, 1394359200000, 1414918800000, 1425808800000, 1446368400000, 1457863200000, 1478422800000, 1489312800000, 1509872400000, 1520762400000, 1541322000000, 1552212000000, 1572771600000, 1583661600000, 1604214000000 ]),
    Int32List.fromList([ -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -28800000, -32400000, -25200000, -32400000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -28800000, -25200000, -25200000 ]),
    [ 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YWT', 'YPT', 'YST', 'YDDT', 'YST', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'PST', 'PDT', 'MST' ],
    [ false, true, false, true, false, true, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules winnipeg = DynamicTimezoneRules(
    'America/Winnipeg',
    DynamicTimezone(
      -1,
      -23316000,
      'America/Winnipeg',
      'LMT',
      null,
      -2602258284,
      dst: false,
    ),
    Int64List.fromList([ -2602258284000, -1694368800000, -1681671600000, -1632067200000, -1615136400000, -1029686400000, -1018198800000, -880214400000, -769395600000, -765392400000, -746035200000, -732733200000, -715795200000, -702493200000, -684345600000, -671043600000, -652896000000, -639594000000, -620755200000, -607626000000, -589392000000, -576090000000, -557942400000, -544640400000, -526492800000, -513190800000, -495043200000, -481741200000, -463593600000, -450291600000, -431539200000, -418237200000, -400089600000, -386787600000, -368640000000, -355338000000, -337190400000, -321469200000, -305740800000, -292438800000, -210787200000, -198090000000, -116438400000, -100108800000, -84384000000, -68659200000, -52934400000, -37209600000, -21484800000, -5760000000, 9964800000, 25689600000, 41414400000, 57744000000, 73468800000, 89193600000, 104918400000, 120643200000, 136368000000, 152092800000, 167817600000, 183542400000, 199267200000, 215596800000, 230716800000, 247046400000, 262771200000, 278496000000, 294220800000, 309945600000, 325670400000, 341395200000, 357120000000, 372844800000, 388569600000, 404899200000, 420019200000, 436348800000, 452073600000, 467798400000, 483523200000, 499248000000, 514972800000, 530697600000, 544608000000, 562147200000, 576057600000, 594201600000, 607507200000, 625651200000, 638956800000, 657100800000, 671011200000, 688550400000, 702460800000, 720000000000, 733910400000, 752054400000, 765360000000, 783504000000, 796809600000, 814953600000, 828864000000, 846403200000, 860313600000, 877852800000, 891763200000, 909302400000, 923212800000, 941356800000, 954662400000, 972806400000, 986112000000, 1004256000000, 1018166400000, 1035705600000, 1049616000000, 1067155200000, 1081065600000, 1099209600000, 1112515200000, 1130659200000, 1136095200000, 1143964800000, 1162105200000, 1173600000000, 1194159600000, 1205049600000, 1225609200000, 1236499200000, 1257058800000, 1268553600000, 1289113200000, 1300003200000, 1320562800000, 1331452800000, 1352012400000, 1362902400000, 1383462000000, 1394352000000, 1414911600000, 1425801600000, 1446361200000, 1457856000000, 1478415600000, 1489305600000, 1509865200000, 1520755200000, 1541314800000, 1552204800000, 1572764400000, 1583654400000, 1604214000000, 1615708800000, 1636268400000, 1647158400000, 1667718000000, 1678608000000, 1699167600000, 1710057600000, 1730617200000, 1741507200000, 1762066800000, 1772956800000, 1793516400000, 1805011200000, 1825570800000, 1836460800000, 1857020400000, 1867910400000, 1888470000000, 1899360000000, 1919919600000, 1930809600000, 1951369200000, 1962864000000, 1983423600000, 1994313600000, 2014873200000, 2025763200000, 2046322800000, 2057212800000, 2077772400000, 2088662400000, 2109222000000, 2120112000000, 2140671600000 ]),
    Int32List.fromList
    [ 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CWT', 'CPT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST', 'CDT', 'CST' ],
    [ false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules yakutat = DynamicTimezoneRules(
    'America/Yakutat',
    DynamicTimezone(
      -1,
      52865000,
      'America/Yakutat',
      'LMT',
      null,
      -3225223727,
      dst: false,
    ),
    Int64List.fromList([ -3225223727000, -2188953665000, -880203600000, -769395600000, -765381600000, -21474000000, -5752800000, 9975600000, 25696800000, 41425200000, 57751200000, 73479600000, 89200800000, 104929200000, 120650400000, 126702000000, 152100000000, 162385200000, 183549600000, 199278000000, 215604000000, 230727600000, 247053600000, 262782000000, 278503200000, 294231600000, 309952800000, 325681200000, 341402400000, 357130800000, 372852000000, 388580400000, 404906400000, 420030000000, 436356000000, 439030800000, 452084400000, 467805600000, 483534000000, 499255200000, 514983600000, 530704800000, 544618800000, 562154400000, 576068400000, 594208800000, 607518000000, 625658400000, 638967600000, 657108000000, 671022000000, 688557600000, 702471600000, 720007200000, 733921200000, 752061600000, 765370800000, 783511200000, 796820400000, 814960800000, 828874800000, 846410400000, 860324400000, 877860000000, 891774000000, 909309600000, 923223600000, 941364000000, 954673200000, 972813600000, 986122800000, 1004263200000, 1018177200000, 1035712800000, 1049626800000, 1067162400000, 1081076400000, 1099216800000, 1112526000000, 1130666400000, 1143975600000, 1162116000000, 1173610800000, 1194170400000, 1205060400000, 1225620000000, 1236510000000, 1257069600000, 1268564400000, 1289124000000, 1300014000000, 1320573600000, 1331463600000, 1352023200000, 1362913200000, 1383472800000, 1394362800000, 1414922400000, 1425812400000, 1446372000000, 1457866800000, 1478426400000, 1489316400000, 1509876000000, 1520766000000, 1541325600000, 1552215600000, 1572775200000, 1583665200000, 1604224800000, 1615719600000, 1636279200000, 1647169200000, 1667728800000, 1678618800000, 1699178400000, 1710068400000, 1730628000000, 1741518000000, 1762077600000, 1772967600000, 1793527200000, 1805022000000, 1825581600000, 1836471600000, 1857031200000, 1867921200000, 1888480800000, 1899370800000, 1919930400000, 1930820400000, 1951380000000, 1962874800000, 1983434400000, 1994324400000, 2014884000000, 2025774000000, 2046333600000, 2057223600000, 2077783200000, 2088673200000, 2109232800000, 2120122800000, 2140682400000 ]),
    Int32List.fromList([ -33535000, -32400000, -28800000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000, -28800000, -32400000 ]),
    [ 'LMT', 'YST', 'YWT', 'YPT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'YDT', 'YST', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST', 'AKDT', 'AKST' ],
    [ false, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

  static final TimezoneRules yellowknife = DynamicTimezoneRules(
    'America/Yellowknife',
    DynamicTimezone(
      -1,
      -27232000,
      'America/Yellowknife',
      'LMT',
      null,
      -1998663968,
      dst: false,
    ),
    Int64List.fromList([ -1998663968000, -1632063600000, -1615132800000, -1600614000000, -1596816000000, -1567954800000, -1551628800000, -1536505200000, -1523203200000, -1504450800000, -1491753600000, -1473001200000, -1459699200000, -880210800000, -769395600000, -765388800000, -715791600000, -702489600000, 73472400000, 89193600000, 104922000000, 120643200000, 136371600000, 152092800000, 167821200000, 183542400000, 199270800000, 215596800000, 230720400000, 247046400000, 262774800000, 278496000000, 294224400000, 309945600000, 325674000000, 341395200000, 357123600000, 372844800000, 388573200000, 404899200000, 420022800000, 436348800000, 452077200000, 467798400000, 483526800000, 499248000000, 514976400000, 530697600000, 544611600000, 562147200000, 576061200000, 594201600000, 607510800000, 625651200000, 638960400000, 657100800000, 671014800000, 688550400000, 702464400000, 720000000000, 733914000000, 752054400000, 765363600000, 783504000000, 796813200000, 814953600000, 828867600000, 846403200000, 860317200000, 877852800000, 891766800000, 909302400000, 923216400000, 941356800000, 954666000000, 972806400000, 986115600000, 1004256000000, 1018170000000, 1035705600000, 1049619600000, 1067155200000, 1081069200000, 1099209600000, 1112518800000, 1130659200000, 1143968400000, 1162108800000, 1173603600000, 1194163200000, 1205053200000, 1225612800000, 1236502800000, 1257062400000, 1268557200000, 1289116800000, 1300006800000, 1320566400000, 1331456400000, 1352016000000, 1362906000000, 1383465600000, 1394355600000, 1414915200000, 1425805200000, 1446364800000, 1457859600000, 1478419200000, 1489309200000, 1509868800000, 1520758800000, 1541318400000, 1552208400000, 1572768000000, 1583658000000, 1604217600000, 1615712400000, 1636272000000, 1647162000000, 1667721600000, 1678611600000, 1699171200000, 1710061200000, 1730620800000, 1741510800000, 1762070400000, 1772960400000, 1793520000000, 1805014800000, 1825574400000, 1836464400000, 1857024000000, 1867914000000, 1888473600000, 1899363600000, 1919923200000, 1930813200000, 1951372800000, 1962867600000, 1983427200000, 1994317200000, 2014876800000, 2025766800000, 2046326400000, 2057216400000, 2077776000000, 2088666000000, 2109225600000, 2120115600000, 2140675200000 ]),
    Int32List.fromList
    [ 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MWT', 'MPT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST', 'MDT', 'MST' ],
    [ false, true, false, true, false, true, false, true, false, true, false, true, false, true, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false, true, false ],
  );

}


